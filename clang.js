
var Module = (() => {
  var _scriptDir = import.meta.url;
  
  return (
async function(moduleArg = {}) {

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){if(Module["ENVIRONMENT_IS_PTHREAD"]||Module["$ww"])return;var loadPackage=function(metadata){var PACKAGE_PATH="";if(typeof window==="object"){PACKAGE_PATH=window["encodeURIComponent"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/")}else if(typeof process==="undefined"&&typeof location!=="undefined"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/")}var PACKAGE_NAME="bin/clang.data";var REMOTE_PACKAGE_BASE="clang.data";if(typeof Module["locateFilePackage"]==="function"&&!Module["locateFile"]){Module["locateFile"]=Module["locateFilePackage"];err("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)")}var REMOTE_PACKAGE_NAME=Module["locateFile"]?Module["locateFile"](REMOTE_PACKAGE_BASE,""):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata["remote_package_size"];function fetchRemotePackage(packageName,packageSize,callback,errback){if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){require("fs").readFile(packageName,function(err,contents){if(err){errback(err)}else{callback(contents.buffer)}});return}var xhr=new XMLHttpRequest;xhr.open("GET",packageName,true);xhr.responseType="arraybuffer";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module["setStatus"])Module["setStatus"](`Downloading data... (${loaded}/${total})`)}else if(!Module.dataFileDownloads){if(Module["setStatus"])Module["setStatus"]("Downloading data...")}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+" : "+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error("package error:",error)}var fetchedCallback=null;var fetched=Module["getPreloadedPackage"]?Module["getPreloadedPackage"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","include",true,true);Module["FS_createPath"]("/include","AL",true,true);Module["FS_createPath"]("/include","EGL",true,true);Module["FS_createPath"]("/include","GL",true,true);Module["FS_createPath"]("/include","GLES",true,true);Module["FS_createPath"]("/include","GLES2",true,true);Module["FS_createPath"]("/include","GLES3",true,true);Module["FS_createPath"]("/include","GLFW",true,true);Module["FS_createPath"]("/include","KHR",true,true);Module["FS_createPath"]("/include","SDL",true,true);Module["FS_createPath"]("/include","X11",true,true);Module["FS_createPath"]("/include/X11","extensions",true,true);Module["FS_createPath"]("/include","arpa",true,true);Module["FS_createPath"]("/include","bits",true,true);Module["FS_createPath"]("/include","c++",true,true);Module["FS_createPath"]("/include/c++","v1",true,true);Module["FS_createPath"]("/include/c++/v1","__algorithm",true,true);Module["FS_createPath"]("/include/c++/v1/__algorithm","pstl_backends",true,true);Module["FS_createPath"]("/include/c++/v1/__algorithm/pstl_backends","cpu_backends",true,true);Module["FS_createPath"]("/include/c++/v1","__atomic",true,true);Module["FS_createPath"]("/include/c++/v1","__bit",true,true);Module["FS_createPath"]("/include/c++/v1","__charconv",true,true);Module["FS_createPath"]("/include/c++/v1","__chrono",true,true);Module["FS_createPath"]("/include/c++/v1","__compare",true,true);Module["FS_createPath"]("/include/c++/v1","__concepts",true,true);Module["FS_createPath"]("/include/c++/v1","__condition_variable",true,true);Module["FS_createPath"]("/include/c++/v1","__coroutine",true,true);Module["FS_createPath"]("/include/c++/v1","__debug_utils",true,true);Module["FS_createPath"]("/include/c++/v1","__exception",true,true);Module["FS_createPath"]("/include/c++/v1","__expected",true,true);Module["FS_createPath"]("/include/c++/v1","__filesystem",true,true);Module["FS_createPath"]("/include/c++/v1","__format",true,true);Module["FS_createPath"]("/include/c++/v1","__functional",true,true);Module["FS_createPath"]("/include/c++/v1","__fwd",true,true);Module["FS_createPath"]("/include/c++/v1","__ios",true,true);Module["FS_createPath"]("/include/c++/v1","__iterator",true,true);Module["FS_createPath"]("/include/c++/v1","__locale_dir",true,true);Module["FS_createPath"]("/include/c++/v1/__locale_dir","locale_base_api",true,true);Module["FS_createPath"]("/include/c++/v1","__mdspan",true,true);Module["FS_createPath"]("/include/c++/v1","__memory",true,true);Module["FS_createPath"]("/include/c++/v1","__memory_resource",true,true);Module["FS_createPath"]("/include/c++/v1","__mutex",true,true);Module["FS_createPath"]("/include/c++/v1","__numeric",true,true);Module["FS_createPath"]("/include/c++/v1","__pstl",true,true);Module["FS_createPath"]("/include/c++/v1/__pstl","internal",true,true);Module["FS_createPath"]("/include/c++/v1/__pstl/internal","omp",true,true);Module["FS_createPath"]("/include/c++/v1","__random",true,true);Module["FS_createPath"]("/include/c++/v1","__ranges",true,true);Module["FS_createPath"]("/include/c++/v1","__stop_token",true,true);Module["FS_createPath"]("/include/c++/v1","__string",true,true);Module["FS_createPath"]("/include/c++/v1","__support",true,true);Module["FS_createPath"]("/include/c++/v1/__support","android",true,true);Module["FS_createPath"]("/include/c++/v1/__support","fuchsia",true,true);Module["FS_createPath"]("/include/c++/v1/__support","ibm",true,true);Module["FS_createPath"]("/include/c++/v1/__support","musl",true,true);Module["FS_createPath"]("/include/c++/v1/__support","newlib",true,true);Module["FS_createPath"]("/include/c++/v1/__support","openbsd",true,true);Module["FS_createPath"]("/include/c++/v1/__support","win32",true,true);Module["FS_createPath"]("/include/c++/v1/__support","xlocale",true,true);Module["FS_createPath"]("/include/c++/v1","__system_error",true,true);Module["FS_createPath"]("/include/c++/v1","__thread",true,true);Module["FS_createPath"]("/include/c++/v1","__tuple",true,true);Module["FS_createPath"]("/include/c++/v1","__type_traits",true,true);Module["FS_createPath"]("/include/c++/v1","__utility",true,true);Module["FS_createPath"]("/include/c++/v1","__variant",true,true);Module["FS_createPath"]("/include/c++/v1","experimental",true,true);Module["FS_createPath"]("/include/c++/v1","ext",true,true);Module["FS_createPath"]("/include","compat",true,true);Module["FS_createPath"]("/include/compat","sys",true,true);Module["FS_createPath"]("/include","emscripten",true,true);Module["FS_createPath"]("/include","fakesdl",true,true);Module["FS_createPath"]("/include","mach-o",true,true);Module["FS_createPath"]("/include","net",true,true);Module["FS_createPath"]("/include","netinet",true,true);Module["FS_createPath"]("/include","netpacket",true,true);Module["FS_createPath"]("/include","sanitizer",true,true);Module["FS_createPath"]("/include","scsi",true,true);Module["FS_createPath"]("/include","sys",true,true);Module["FS_createPath"]("/include","uuid",true,true);Module["FS_createPath"]("/include","wasi",true,true);Module["FS_createPath"]("/include","webgl",true,true);Module["FS_createPath"]("/include","webgpu",true,true);Module["FS_createPath"]("/","lib",true,true);Module["FS_createPath"]("/lib","clang",true,true);Module["FS_createPath"]("/lib/clang","18",true,true);Module["FS_createPath"]("/lib/clang/18","include",true,true);Module["FS_createPath"]("/lib/clang/18/include","cuda_wrappers",true,true);Module["FS_createPath"]("/lib/clang/18/include/cuda_wrappers","bits",true,true);Module["FS_createPath"]("/lib/clang/18/include","llvm_libc_wrappers",true,true);Module["FS_createPath"]("/lib/clang/18/include","openmp_wrappers",true,true);Module["FS_createPath"]("/lib/clang/18/include","ppc_wrappers",true,true);function DataRequest(start,end,audio){this.start=start;this.end=end;this.audio=audio}DataRequest.prototype={requests:{},open:function(mode,name){this.name=name;this.requests[name]=this;Module["addRunDependency"](`fp ${this.name}`)},send:function(){},onload:function(){var byteArray=this.byteArray.subarray(this.start,this.end);this.finish(byteArray)},finish:function(byteArray){var that=this;Module["FS_createDataFile"](this.name,null,byteArray,true,true,true);Module["removeRunDependency"](`fp ${that.name}`);this.requests[this.name]=null}};var files=metadata["files"];for(var i=0;i<files.length;++i){new DataRequest(files[i]["start"],files[i]["end"],files[i]["audio"]||0).open("GET",files[i]["filename"])}function processPackageData(arrayBuffer){assert(arrayBuffer,"Loading data file failed.");assert(arrayBuffer.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var byteArray=new Uint8Array(arrayBuffer);DataRequest.prototype.byteArray=byteArray;var files=metadata["files"];for(var i=0;i<files.length;++i){DataRequest.prototype.requests[files[i].filename].onload()}Module["removeRunDependency"]("datafile_bin/clang.data")}Module["addRunDependency"]("datafile_bin/clang.data");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[{"filename":"/include/AL/al.h","start":0,"end":7268},{"filename":"/include/AL/alc.h","start":7268,"end":10209},{"filename":"/include/EGL/egl.h","start":10209,"end":30554},{"filename":"/include/EGL/eglext.h","start":30554,"end":100134},{"filename":"/include/EGL/eglplatform.h","start":100134,"end":106185},{"filename":"/include/GL/freeglut_std.h","start":106185,"end":132366},{"filename":"/include/GL/gl.h","start":132366,"end":217036},{"filename":"/include/GL/glew.h","start":217036,"end":267782},{"filename":"/include/GL/glext.h","start":267782,"end":1116917},{"filename":"/include/GL/glfw.h","start":1116917,"end":1137820},{"filename":"/include/GL/glu.h","start":1137820,"end":1155075},{"filename":"/include/GL/glut.h","start":1155075,"end":1155714},{"filename":"/include/GLES/gl.h","start":1155714,"end":1187383},{"filename":"/include/GLES/glext.h","start":1187383,"end":1241159},{"filename":"/include/GLES/glplatform.h","start":1241159,"end":1242311},{"filename":"/include/GLES2/gl2.h","start":1242311,"end":1286307},{"filename":"/include/GLES2/gl2ext.h","start":1286307,"end":1519707},{"filename":"/include/GLES2/gl2platform.h","start":1519707,"end":1520867},{"filename":"/include/GLES3/gl2ext.h","start":1520867,"end":1521444},{"filename":"/include/GLES3/gl3.h","start":1521444,"end":1604110},{"filename":"/include/GLES3/gl31.h","start":1604110,"end":1711580},{"filename":"/include/GLES3/gl32.h","start":1711580,"end":1839930},{"filename":"/include/GLES3/gl3platform.h","start":1839930,"end":1841090},{"filename":"/include/GLFW/glfw3.h","start":1841090,"end":2056950},{"filename":"/include/KHR/khrplatform.h","start":2056950,"end":2067229},{"filename":"/include/SDL/COPYING","start":2067229,"end":2068260},{"filename":"/include/SDL/SDL.h","start":2068260,"end":2073375},{"filename":"/include/SDL/SDL_assert.h","start":2073375,"end":2082182},{"filename":"/include/SDL/SDL_atomic.h","start":2082182,"end":2091567},{"filename":"/include/SDL/SDL_audio.h","start":2091567,"end":2111515},{"filename":"/include/SDL/SDL_blendmode.h","start":2111515,"end":2113359},{"filename":"/include/SDL/SDL_clipboard.h","start":2113359,"end":2115338},{"filename":"/include/SDL/SDL_compat.h","start":2115338,"end":2128238},{"filename":"/include/SDL/SDL_config.h","start":2128238,"end":2129895},{"filename":"/include/SDL/SDL_config.h.in","start":2129895,"end":2137493},{"filename":"/include/SDL/SDL_config_android.h","start":2137493,"end":2140882},{"filename":"/include/SDL/SDL_config_emscripten.h","start":2140882,"end":2142523},{"filename":"/include/SDL/SDL_config_iphoneos.h","start":2142523,"end":2146459},{"filename":"/include/SDL/SDL_config_macosx.h","start":2146459,"end":2151291},{"filename":"/include/SDL/SDL_config_minimal.h","start":2151291,"end":2153691},{"filename":"/include/SDL/SDL_config_nintendods.h","start":2153691,"end":2157254},{"filename":"/include/SDL/SDL_config_pandora.h","start":2157254,"end":2160454},{"filename":"/include/SDL/SDL_config_windows.h","start":2160454,"end":2165667},{"filename":"/include/SDL/SDL_config_wiz.h","start":2165667,"end":2168770},{"filename":"/include/SDL/SDL_copying.h","start":2168770,"end":2169709},{"filename":"/include/SDL/SDL_cpuinfo.h","start":2169709,"end":2173788},{"filename":"/include/SDL/SDL_endian.h","start":2173788,"end":2180079},{"filename":"/include/SDL/SDL_error.h","start":2180079,"end":2182184},{"filename":"/include/SDL/SDL_events.h","start":2182184,"end":2205056},{"filename":"/include/SDL/SDL_gesture.h","start":2205056,"end":2207289},{"filename":"/include/SDL/SDL_gfxPrimitives.h","start":2207289,"end":2218275},{"filename":"/include/SDL/SDL_haptic.h","start":2218275,"end":2256108},{"filename":"/include/SDL/SDL_hints.h","start":2256108,"end":2262964},{"filename":"/include/SDL/SDL_image.h","start":2262964,"end":2268477},{"filename":"/include/SDL/SDL_input.h","start":2268477,"end":2271067},{"filename":"/include/SDL/SDL_joystick.h","start":2271067,"end":2277176},{"filename":"/include/SDL/SDL_keyboard.h","start":2277176,"end":2282172},{"filename":"/include/SDL/SDL_keycode.h","start":2282172,"end":2297200},{"filename":"/include/SDL/SDL_loadso.h","start":2297200,"end":2300180},{"filename":"/include/SDL/SDL_log.h","start":2300180,"end":2306180},{"filename":"/include/SDL/SDL_main.h","start":2306180,"end":2308499},{"filename":"/include/SDL/SDL_mixer.h","start":2308499,"end":2336233},{"filename":"/include/SDL/SDL_mouse.h","start":2336233,"end":2343345},{"filename":"/include/SDL/SDL_mutex.h","start":2343345,"end":2349920},{"filename":"/include/SDL/SDL_name.h","start":2349920,"end":2350103},{"filename":"/include/SDL/SDL_opengl.h","start":2350103,"end":2986573},{"filename":"/include/SDL/SDL_opengles.h","start":2986573,"end":2987805},{"filename":"/include/SDL/SDL_opengles2.h","start":2987805,"end":2989041},{"filename":"/include/SDL/SDL_pixels.h","start":2989041,"end":3003802},{"filename":"/include/SDL/SDL_platform.h","start":3003802,"end":3007653},{"filename":"/include/SDL/SDL_power.h","start":3007653,"end":3010198},{"filename":"/include/SDL/SDL_quit.h","start":3010198,"end":3012311},{"filename":"/include/SDL/SDL_rect.h","start":3012311,"end":3016381},{"filename":"/include/SDL/SDL_render.h","start":3016381,"end":3038753},{"filename":"/include/SDL/SDL_revision.h","start":3038753,"end":3038830},{"filename":"/include/SDL/SDL_rotozoom.h","start":3038830,"end":3041814},{"filename":"/include/SDL/SDL_rwops.h","start":3041814,"end":3048431},{"filename":"/include/SDL/SDL_scancode.h","start":3048431,"end":3063368},{"filename":"/include/SDL/SDL_shape.h","start":3063368,"end":3069091},{"filename":"/include/SDL/SDL_stdinc.h","start":3069091,"end":3089369},{"filename":"/include/SDL/SDL_surface.h","start":3089369,"end":3107392},{"filename":"/include/SDL/SDL_syswm.h","start":3107392,"end":3113624},{"filename":"/include/SDL/SDL_thread.h","start":3113624,"end":3119325},{"filename":"/include/SDL/SDL_timer.h","start":3119325,"end":3122513},{"filename":"/include/SDL/SDL_touch.h","start":3122513,"end":3125045},{"filename":"/include/SDL/SDL_ttf.h","start":3125045,"end":3135756},{"filename":"/include/SDL/SDL_types.h","start":3135756,"end":3136789},{"filename":"/include/SDL/SDL_version.h","start":3136789,"end":3141921},{"filename":"/include/SDL/SDL_video.h","start":3141921,"end":3168895},{"filename":"/include/SDL/begin_code.h","start":3168895,"end":3172857},{"filename":"/include/SDL/close_code.h","start":3172857,"end":3174276},{"filename":"/include/X11/X.h","start":3174276,"end":3194481},{"filename":"/include/X11/XKBlib.h","start":3194481,"end":3225476},{"filename":"/include/X11/Xatom.h","start":3225476,"end":3227994},{"filename":"/include/X11/Xfuncproto.h","start":3227994,"end":3232027},{"filename":"/include/X11/Xfuncs.h","start":3232027,"end":3234227},{"filename":"/include/X11/Xlib.h","start":3234227,"end":3333815},{"filename":"/include/X11/XlibConf.h","start":3333815,"end":3335382},{"filename":"/include/X11/Xlibint.h","start":3335382,"end":3373957},{"filename":"/include/X11/Xmd.h","start":3373957,"end":3380295},{"filename":"/include/X11/Xosdefs.h","start":3380295,"end":3383410},{"filename":"/include/X11/Xproto.h","start":3383410,"end":3440087},{"filename":"/include/X11/Xprotostr.h","start":3440087,"end":3442892},{"filename":"/include/X11/Xutil.h","start":3442892,"end":3463904},{"filename":"/include/X11/cursorfont.h","start":3463904,"end":3467022},{"filename":"/include/X11/extensions/XKB.h","start":3467022,"end":3495263},{"filename":"/include/X11/extensions/XKBstr.h","start":3495263,"end":3513479},{"filename":"/include/X11/extensions/XShm.h","start":3513479,"end":3517214},{"filename":"/include/X11/extensions/Xext.h","start":3517214,"end":3518869},{"filename":"/include/X11/extensions/extutil.h","start":3518869,"end":3524940},{"filename":"/include/X11/extensions/shm.h","start":3524940,"end":3526585},{"filename":"/include/X11/keysym.h","start":3526585,"end":3529340},{"filename":"/include/X11/keysymdef.h","start":3529340,"end":3697561},{"filename":"/include/__libunwind_config.h","start":3697561,"end":3705232},{"filename":"/include/alloca.h","start":3705232,"end":3705451},{"filename":"/include/alltypes.h.in","start":3705451,"end":3708949},{"filename":"/include/ar.h","start":3708949,"end":3709260},{"filename":"/include/arpa/ftp.h","start":3709260,"end":3710081},{"filename":"/include/arpa/inet.h","start":3710081,"end":3710784},{"filename":"/include/arpa/nameser.h","start":3710784,"end":3723127},{"filename":"/include/arpa/nameser_compat.h","start":3723127,"end":3723154},{"filename":"/include/arpa/telnet.h","start":3723154,"end":3728906},{"filename":"/include/arpa/tftp.h","start":3728906,"end":3729450},{"filename":"/include/assert.h","start":3729450,"end":3729878},{"filename":"/include/atomic_arch.h","start":3729878,"end":3732425},{"filename":"/include/bits/alltypes.h","start":3732425,"end":3744455},{"filename":"/include/bits/alltypes.h.in","start":3744455,"end":3745261},{"filename":"/include/bits/dirent.h","start":3745261,"end":3745462},{"filename":"/include/bits/endian.h","start":3745462,"end":3745499},{"filename":"/include/bits/errno.h","start":3745499,"end":3750942},{"filename":"/include/bits/fcntl.h","start":3750942,"end":3751882},{"filename":"/include/bits/fenv.h","start":3751882,"end":3752511},{"filename":"/include/bits/float.h","start":3752511,"end":3752990},{"filename":"/include/bits/hwcap.h","start":3752990,"end":3752990},{"filename":"/include/bits/ioctl.h","start":3752990,"end":3756044},{"filename":"/include/bits/ioctl_fix.h","start":3756044,"end":3756044},{"filename":"/include/bits/ipc.h","start":3756044,"end":3756201},{"filename":"/include/bits/ipcstat.h","start":3756201,"end":3756220},{"filename":"/include/bits/limits.h","start":3756220,"end":3756244},{"filename":"/include/bits/link.h","start":3756244,"end":3756273},{"filename":"/include/bits/mman.h","start":3756273,"end":3756273},{"filename":"/include/bits/msg.h","start":3756273,"end":3756512},{"filename":"/include/bits/poll.h","start":3756512,"end":3756512},{"filename":"/include/bits/posix.h","start":3756512,"end":3756580},{"filename":"/include/bits/reg.h","start":3756580,"end":3756673},{"filename":"/include/bits/resource.h","start":3756673,"end":3756673},{"filename":"/include/bits/sem.h","start":3756673,"end":3756998},{"filename":"/include/bits/setjmp.h","start":3756998,"end":3757034},{"filename":"/include/bits/shm.h","start":3757034,"end":3757506},{"filename":"/include/bits/signal.h","start":3757506,"end":3760302},{"filename":"/include/bits/socket.h","start":3760302,"end":3760302},{"filename":"/include/bits/stat.h","start":3760302,"end":3760823},{"filename":"/include/bits/statfs.h","start":3760823,"end":3761018},{"filename":"/include/bits/stdarg.h","start":3761018,"end":3761203},{"filename":"/include/bits/stdint.h","start":3761203,"end":3762018},{"filename":"/include/bits/syscall.h","start":3762018,"end":3765831},{"filename":"/include/bits/termios.h","start":3765831,"end":3769340},{"filename":"/include/bits/user.h","start":3769340,"end":3770494},{"filename":"/include/byteswap.h","start":3770494,"end":3770995},{"filename":"/include/c++/v1/__algorithm/adjacent_find.h","start":3770995,"end":3772905},{"filename":"/include/c++/v1/__algorithm/all_of.h","start":3772905,"end":3773882},{"filename":"/include/c++/v1/__algorithm/any_of.h","start":3773882,"end":3774862},{"filename":"/include/c++/v1/__algorithm/binary_search.h","start":3774862,"end":3776405},{"filename":"/include/c++/v1/__algorithm/clamp.h","start":3776405,"end":3777694},{"filename":"/include/c++/v1/__algorithm/comp.h","start":3777694,"end":3779149},{"filename":"/include/c++/v1/__algorithm/comp_ref_type.h","start":3779149,"end":3781473},{"filename":"/include/c++/v1/__algorithm/copy.h","start":3781473,"end":3786462},{"filename":"/include/c++/v1/__algorithm/copy_backward.h","start":3786462,"end":3792572},{"filename":"/include/c++/v1/__algorithm/copy_if.h","start":3792572,"end":3793668},{"filename":"/include/c++/v1/__algorithm/copy_move_common.h","start":3793668,"end":3798982},{"filename":"/include/c++/v1/__algorithm/copy_n.h","start":3798982,"end":3801104},{"filename":"/include/c++/v1/__algorithm/count.h","start":3801104,"end":3802238},{"filename":"/include/c++/v1/__algorithm/count_if.h","start":3802238,"end":3803387},{"filename":"/include/c++/v1/__algorithm/equal.h","start":3803387,"end":3809984},{"filename":"/include/c++/v1/__algorithm/equal_range.h","start":3809984,"end":3813378},{"filename":"/include/c++/v1/__algorithm/fill.h","start":3813378,"end":3815094},{"filename":"/include/c++/v1/__algorithm/fill_n.h","start":3815094,"end":3816527},{"filename":"/include/c++/v1/__algorithm/find.h","start":3816527,"end":3819292},{"filename":"/include/c++/v1/__algorithm/find_end.h","start":3819292,"end":3827053},{"filename":"/include/c++/v1/__algorithm/find_first_of.h","start":3827053,"end":3829395},{"filename":"/include/c++/v1/__algorithm/find_if.h","start":3829395,"end":3830385},{"filename":"/include/c++/v1/__algorithm/find_if_not.h","start":3830385,"end":3831392},{"filename":"/include/c++/v1/__algorithm/for_each.h","start":3831392,"end":3832494},{"filename":"/include/c++/v1/__algorithm/for_each_n.h","start":3832494,"end":3833828},{"filename":"/include/c++/v1/__algorithm/for_each_segment.h","start":3833828,"end":3835861},{"filename":"/include/c++/v1/__algorithm/generate.h","start":3835861,"end":3836786},{"filename":"/include/c++/v1/__algorithm/generate_n.h","start":3836786,"end":3837909},{"filename":"/include/c++/v1/__algorithm/half_positive.h","start":3837909,"end":3839248},{"filename":"/include/c++/v1/__algorithm/in_found_result.h","start":3839248,"end":3840600},{"filename":"/include/c++/v1/__algorithm/in_fun_result.h","start":3840600,"end":3842106},{"filename":"/include/c++/v1/__algorithm/in_in_out_result.h","start":3842106,"end":3843902},{"filename":"/include/c++/v1/__algorithm/in_in_result.h","start":3843902,"end":3845433},{"filename":"/include/c++/v1/__algorithm/in_out_out_result.h","start":3845433,"end":3847246},{"filename":"/include/c++/v1/__algorithm/in_out_result.h","start":3847246,"end":3848854},{"filename":"/include/c++/v1/__algorithm/includes.h","start":3848854,"end":3851445},{"filename":"/include/c++/v1/__algorithm/inplace_merge.h","start":3851445,"end":3861677},{"filename":"/include/c++/v1/__algorithm/is_heap.h","start":3861677,"end":3863078},{"filename":"/include/c++/v1/__algorithm/is_heap_until.h","start":3863078,"end":3865331},{"filename":"/include/c++/v1/__algorithm/is_partitioned.h","start":3865331,"end":3866487},{"filename":"/include/c++/v1/__algorithm/is_permutation.h","start":3866487,"end":3875861},{"filename":"/include/c++/v1/__algorithm/is_sorted.h","start":3875861,"end":3877237},{"filename":"/include/c++/v1/__algorithm/is_sorted_until.h","start":3877237,"end":3879069},{"filename":"/include/c++/v1/__algorithm/iter_swap.h","start":3879069,"end":3880257},{"filename":"/include/c++/v1/__algorithm/iterator_operations.h","start":3880257,"end":3886271},{"filename":"/include/c++/v1/__algorithm/lexicographical_compare.h","start":3886271,"end":3888481},{"filename":"/include/c++/v1/__algorithm/lexicographical_compare_three_way.h","start":3888481,"end":3893647},{"filename":"/include/c++/v1/__algorithm/lower_bound.h","start":3893647,"end":3896133},{"filename":"/include/c++/v1/__algorithm/make_heap.h","start":3896133,"end":3898298},{"filename":"/include/c++/v1/__algorithm/make_projected.h","start":3898298,"end":3902445},{"filename":"/include/c++/v1/__algorithm/max.h","start":3902445,"end":3904350},{"filename":"/include/c++/v1/__algorithm/max_element.h","start":3904350,"end":3906248},{"filename":"/include/c++/v1/__algorithm/merge.h","start":3906248,"end":3908611},{"filename":"/include/c++/v1/__algorithm/min.h","start":3908611,"end":3910516},{"filename":"/include/c++/v1/__algorithm/min_element.h","start":3910516,"end":3913077},{"filename":"/include/c++/v1/__algorithm/min_max_result.h","start":3913077,"end":3914475},{"filename":"/include/c++/v1/__algorithm/minmax.h","start":3914475,"end":3916694},{"filename":"/include/c++/v1/__algorithm/minmax_element.h","start":3916694,"end":3920126},{"filename":"/include/c++/v1/__algorithm/mismatch.h","start":3920126,"end":3922730},{"filename":"/include/c++/v1/__algorithm/move.h","start":3922730,"end":3928101},{"filename":"/include/c++/v1/__algorithm/move_backward.h","start":3928101,"end":3934292},{"filename":"/include/c++/v1/__algorithm/next_permutation.h","start":3934292,"end":3936999},{"filename":"/include/c++/v1/__algorithm/none_of.h","start":3936999,"end":3937983},{"filename":"/include/c++/v1/__algorithm/nth_element.h","start":3937983,"end":3947384},{"filename":"/include/c++/v1/__algorithm/partial_sort.h","start":3947384,"end":3950954},{"filename":"/include/c++/v1/__algorithm/partial_sort_copy.h","start":3950954,"end":3954713},{"filename":"/include/c++/v1/__algorithm/partition.h","start":3954713,"end":3958201},{"filename":"/include/c++/v1/__algorithm/partition_copy.h","start":3958201,"end":3959656},{"filename":"/include/c++/v1/__algorithm/partition_point.h","start":3959656,"end":3961173},{"filename":"/include/c++/v1/__algorithm/pop_heap.h","start":3961173,"end":3964165},{"filename":"/include/c++/v1/__algorithm/prev_permutation.h","start":3964165,"end":3966872},{"filename":"/include/c++/v1/__algorithm/pstl_any_all_none_of.h","start":3966872,"end":3970899},{"filename":"/include/c++/v1/__algorithm/pstl_backend.h","start":3970899,"end":3979474},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backend.h","start":3979474,"end":3981935},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/any_of.h","start":3981935,"end":3985455},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/backend.h","start":3985455,"end":3986719},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/fill.h","start":3986719,"end":3989142},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/find_if.h","start":3989142,"end":3994018},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/for_each.h","start":3994018,"end":3996435},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/libdispatch.h","start":3996435,"end":4005437},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/merge.h","start":4005437,"end":4008294},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/serial.h","start":4008294,"end":4010748},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/stable_sort.h","start":4010748,"end":4012471},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/thread.h","start":4012471,"end":4015164},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/transform.h","start":4015164,"end":4020955},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/transform_reduce.h","start":4020955,"end":4028581},{"filename":"/include/c++/v1/__algorithm/pstl_copy.h","start":4028581,"end":4030830},{"filename":"/include/c++/v1/__algorithm/pstl_count.h","start":4030830,"end":4034231},{"filename":"/include/c++/v1/__algorithm/pstl_fill.h","start":4034231,"end":4037395},{"filename":"/include/c++/v1/__algorithm/pstl_find.h","start":4037395,"end":4041152},{"filename":"/include/c++/v1/__algorithm/pstl_for_each.h","start":4041152,"end":4044173},{"filename":"/include/c++/v1/__algorithm/pstl_frontend_dispatch.h","start":4044173,"end":4046031},{"filename":"/include/c++/v1/__algorithm/pstl_generate.h","start":4046031,"end":4049060},{"filename":"/include/c++/v1/__algorithm/pstl_is_partitioned.h","start":4049060,"end":4051199},{"filename":"/include/c++/v1/__algorithm/pstl_merge.h","start":4051199,"end":4053167},{"filename":"/include/c++/v1/__algorithm/pstl_replace.h","start":4053167,"end":4058931},{"filename":"/include/c++/v1/__algorithm/pstl_sort.h","start":4058931,"end":4061330},{"filename":"/include/c++/v1/__algorithm/pstl_stable_sort.h","start":4061330,"end":4063011},{"filename":"/include/c++/v1/__algorithm/pstl_transform.h","start":4063011,"end":4066167},{"filename":"/include/c++/v1/__algorithm/push_heap.h","start":4066167,"end":4069250},{"filename":"/include/c++/v1/__algorithm/ranges_adjacent_find.h","start":4069250,"end":4072009},{"filename":"/include/c++/v1/__algorithm/ranges_all_of.h","start":4072009,"end":4074284},{"filename":"/include/c++/v1/__algorithm/ranges_any_of.h","start":4074284,"end":4076563},{"filename":"/include/c++/v1/__algorithm/ranges_binary_search.h","start":4076563,"end":4079224},{"filename":"/include/c++/v1/__algorithm/ranges_clamp.h","start":4079224,"end":4081230},{"filename":"/include/c++/v1/__algorithm/ranges_copy.h","start":4081230,"end":4083465},{"filename":"/include/c++/v1/__algorithm/ranges_copy_backward.h","start":4083465,"end":4085751},{"filename":"/include/c++/v1/__algorithm/ranges_copy_if.h","start":4085751,"end":4088631},{"filename":"/include/c++/v1/__algorithm/ranges_copy_n.h","start":4088631,"end":4091025},{"filename":"/include/c++/v1/__algorithm/ranges_count.h","start":4091025,"end":4093323},{"filename":"/include/c++/v1/__algorithm/ranges_count_if.h","start":4093323,"end":4095854},{"filename":"/include/c++/v1/__algorithm/ranges_equal.h","start":4095854,"end":4099425},{"filename":"/include/c++/v1/__algorithm/ranges_equal_range.h","start":4099425,"end":4102212},{"filename":"/include/c++/v1/__algorithm/ranges_fill.h","start":4102212,"end":4104017},{"filename":"/include/c++/v1/__algorithm/ranges_fill_n.h","start":4104017,"end":4105316},{"filename":"/include/c++/v1/__algorithm/ranges_find.h","start":4105316,"end":4108071},{"filename":"/include/c++/v1/__algorithm/ranges_find_end.h","start":4108071,"end":4111251},{"filename":"/include/c++/v1/__algorithm/ranges_find_first_of.h","start":4111251,"end":4114611},{"filename":"/include/c++/v1/__algorithm/ranges_find_if.h","start":4114611,"end":4116913},{"filename":"/include/c++/v1/__algorithm/ranges_find_if_not.h","start":4116913,"end":4119216},{"filename":"/include/c++/v1/__algorithm/ranges_for_each.h","start":4119216,"end":4121748},{"filename":"/include/c++/v1/__algorithm/ranges_for_each_n.h","start":4121748,"end":4123566},{"filename":"/include/c++/v1/__algorithm/ranges_generate.h","start":4123566,"end":4125792},{"filename":"/include/c++/v1/__algorithm/ranges_generate_n.h","start":4125792,"end":4127489},{"filename":"/include/c++/v1/__algorithm/ranges_includes.h","start":4127489,"end":4130546},{"filename":"/include/c++/v1/__algorithm/ranges_inplace_merge.h","start":4130546,"end":4133421},{"filename":"/include/c++/v1/__algorithm/ranges_is_heap.h","start":4133421,"end":4136158},{"filename":"/include/c++/v1/__algorithm/ranges_is_heap_until.h","start":4136158,"end":4138971},{"filename":"/include/c++/v1/__algorithm/ranges_is_partitioned.h","start":4138971,"end":4141564},{"filename":"/include/c++/v1/__algorithm/ranges_is_permutation.h","start":4141564,"end":4145338},{"filename":"/include/c++/v1/__algorithm/ranges_is_sorted.h","start":4145338,"end":4147571},{"filename":"/include/c++/v1/__algorithm/ranges_is_sorted_until.h","start":4147571,"end":4150276},{"filename":"/include/c++/v1/__algorithm/ranges_iterator_concept.h","start":4150276,"end":4151847},{"filename":"/include/c++/v1/__algorithm/ranges_lexicographical_compare.h","start":4151847,"end":4155483},{"filename":"/include/c++/v1/__algorithm/ranges_lower_bound.h","start":4155483,"end":4158009},{"filename":"/include/c++/v1/__algorithm/ranges_make_heap.h","start":4158009,"end":4160738},{"filename":"/include/c++/v1/__algorithm/ranges_max.h","start":4160738,"end":4164574},{"filename":"/include/c++/v1/__algorithm/ranges_max_element.h","start":4164574,"end":4167030},{"filename":"/include/c++/v1/__algorithm/ranges_merge.h","start":4167030,"end":4171398},{"filename":"/include/c++/v1/__algorithm/ranges_min.h","start":4171398,"end":4174921},{"filename":"/include/c++/v1/__algorithm/ranges_min_element.h","start":4174921,"end":4177587},{"filename":"/include/c++/v1/__algorithm/ranges_minmax.h","start":4177587,"end":4183763},{"filename":"/include/c++/v1/__algorithm/ranges_minmax_element.h","start":4183763,"end":4186348},{"filename":"/include/c++/v1/__algorithm/ranges_mismatch.h","start":4186348,"end":4189633},{"filename":"/include/c++/v1/__algorithm/ranges_move.h","start":4189633,"end":4192013},{"filename":"/include/c++/v1/__algorithm/ranges_move_backward.h","start":4192013,"end":4194608},{"filename":"/include/c++/v1/__algorithm/ranges_next_permutation.h","start":4194608,"end":4197232},{"filename":"/include/c++/v1/__algorithm/ranges_none_of.h","start":4197232,"end":4199523},{"filename":"/include/c++/v1/__algorithm/ranges_nth_element.h","start":4199523,"end":4202355},{"filename":"/include/c++/v1/__algorithm/ranges_partial_sort.h","start":4202355,"end":4205194},{"filename":"/include/c++/v1/__algorithm/ranges_partial_sort_copy.h","start":4205194,"end":4209006},{"filename":"/include/c++/v1/__algorithm/ranges_partition.h","start":4209006,"end":4211894},{"filename":"/include/c++/v1/__algorithm/ranges_partition_copy.h","start":4211894,"end":4215828},{"filename":"/include/c++/v1/__algorithm/ranges_partition_point.h","start":4215828,"end":4218660},{"filename":"/include/c++/v1/__algorithm/ranges_pop_heap.h","start":4218660,"end":4221430},{"filename":"/include/c++/v1/__algorithm/ranges_prev_permutation.h","start":4221430,"end":4224054},{"filename":"/include/c++/v1/__algorithm/ranges_push_heap.h","start":4224054,"end":4226783},{"filename":"/include/c++/v1/__algorithm/ranges_remove.h","start":4226783,"end":4229137},{"filename":"/include/c++/v1/__algorithm/ranges_remove_copy.h","start":4229137,"end":4231967},{"filename":"/include/c++/v1/__algorithm/ranges_remove_copy_if.h","start":4231967,"end":4235173},{"filename":"/include/c++/v1/__algorithm/ranges_remove_if.h","start":4235173,"end":4237952},{"filename":"/include/c++/v1/__algorithm/ranges_replace.h","start":4237952,"end":4240443},{"filename":"/include/c++/v1/__algorithm/ranges_replace_copy.h","start":4240443,"end":4243623},{"filename":"/include/c++/v1/__algorithm/ranges_replace_copy_if.h","start":4243623,"end":4246901},{"filename":"/include/c++/v1/__algorithm/ranges_replace_if.h","start":4246901,"end":4249522},{"filename":"/include/c++/v1/__algorithm/ranges_reverse.h","start":4249522,"end":4251700},{"filename":"/include/c++/v1/__algorithm/ranges_reverse_copy.h","start":4251700,"end":4253966},{"filename":"/include/c++/v1/__algorithm/ranges_rotate.h","start":4253966,"end":4256157},{"filename":"/include/c++/v1/__algorithm/ranges_rotate_copy.h","start":4256157,"end":4258443},{"filename":"/include/c++/v1/__algorithm/ranges_sample.h","start":4258443,"end":4261017},{"filename":"/include/c++/v1/__algorithm/ranges_search.h","start":4261017,"end":4265546},{"filename":"/include/c++/v1/__algorithm/ranges_search_n.h","start":4265546,"end":4269594},{"filename":"/include/c++/v1/__algorithm/ranges_set_difference.h","start":4269594,"end":4273082},{"filename":"/include/c++/v1/__algorithm/ranges_set_intersection.h","start":4273082,"end":4276883},{"filename":"/include/c++/v1/__algorithm/ranges_set_symmetric_difference.h","start":4276883,"end":4280820},{"filename":"/include/c++/v1/__algorithm/ranges_set_union.h","start":4280820,"end":4284536},{"filename":"/include/c++/v1/__algorithm/ranges_shuffle.h","start":4284536,"end":4286842},{"filename":"/include/c++/v1/__algorithm/ranges_sort.h","start":4286842,"end":4289484},{"filename":"/include/c++/v1/__algorithm/ranges_sort_heap.h","start":4289484,"end":4292213},{"filename":"/include/c++/v1/__algorithm/ranges_stable_partition.h","start":4292213,"end":4295313},{"filename":"/include/c++/v1/__algorithm/ranges_stable_sort.h","start":4295313,"end":4298005},{"filename":"/include/c++/v1/__algorithm/ranges_starts_with.h","start":4298005,"end":4300959},{"filename":"/include/c++/v1/__algorithm/ranges_swap_ranges.h","start":4300959,"end":4303176},{"filename":"/include/c++/v1/__algorithm/ranges_transform.h","start":4303176,"end":4309371},{"filename":"/include/c++/v1/__algorithm/ranges_unique.h","start":4309371,"end":4312142},{"filename":"/include/c++/v1/__algorithm/ranges_unique_copy.h","start":4312142,"end":4316671},{"filename":"/include/c++/v1/__algorithm/ranges_upper_bound.h","start":4316671,"end":4319435},{"filename":"/include/c++/v1/__algorithm/remove.h","start":4319435,"end":4320733},{"filename":"/include/c++/v1/__algorithm/remove_copy.h","start":4320733,"end":4321838},{"filename":"/include/c++/v1/__algorithm/remove_copy_if.h","start":4321838,"end":4322956},{"filename":"/include/c++/v1/__algorithm/remove_if.h","start":4322956,"end":4324270},{"filename":"/include/c++/v1/__algorithm/replace.h","start":4324270,"end":4325259},{"filename":"/include/c++/v1/__algorithm/replace_copy.h","start":4325259,"end":4326423},{"filename":"/include/c++/v1/__algorithm/replace_copy_if.h","start":4326423,"end":4327608},{"filename":"/include/c++/v1/__algorithm/replace_if.h","start":4327608,"end":4328615},{"filename":"/include/c++/v1/__algorithm/reverse.h","start":4328615,"end":4330847},{"filename":"/include/c++/v1/__algorithm/reverse_copy.h","start":4330847,"end":4331855},{"filename":"/include/c++/v1/__algorithm/rotate.h","start":4331855,"end":4339869},{"filename":"/include/c++/v1/__algorithm/rotate_copy.h","start":4339869,"end":4340902},{"filename":"/include/c++/v1/__algorithm/sample.h","start":4340902,"end":4345342},{"filename":"/include/c++/v1/__algorithm/search.h","start":4345342,"end":4353862},{"filename":"/include/c++/v1/__algorithm/search_n.h","start":4353862,"end":4361847},{"filename":"/include/c++/v1/__algorithm/set_difference.h","start":4361847,"end":4364576},{"filename":"/include/c++/v1/__algorithm/set_intersection.h","start":4364576,"end":4368044},{"filename":"/include/c++/v1/__algorithm/set_symmetric_difference.h","start":4368044,"end":4371900},{"filename":"/include/c++/v1/__algorithm/set_union.h","start":4371900,"end":4375519},{"filename":"/include/c++/v1/__algorithm/shift_left.h","start":4375519,"end":4377018},{"filename":"/include/c++/v1/__algorithm/shift_right.h","start":4377018,"end":4380151},{"filename":"/include/c++/v1/__algorithm/shuffle.h","start":4380151,"end":4385798},{"filename":"/include/c++/v1/__algorithm/sift_down.h","start":4385798,"end":4389803},{"filename":"/include/c++/v1/__algorithm/sort.h","start":4389803,"end":4432124},{"filename":"/include/c++/v1/__algorithm/sort_heap.h","start":4432124,"end":4434567},{"filename":"/include/c++/v1/__algorithm/stable_partition.h","start":4434567,"end":4446978},{"filename":"/include/c++/v1/__algorithm/stable_sort.h","start":4446978,"end":4458231},{"filename":"/include/c++/v1/__algorithm/swap_ranges.h","start":4458231,"end":4460517},{"filename":"/include/c++/v1/__algorithm/three_way_comp_ref_type.h","start":4460517,"end":4462855},{"filename":"/include/c++/v1/__algorithm/transform.h","start":4462855,"end":4464386},{"filename":"/include/c++/v1/__algorithm/uniform_random_bit_generator_adaptor.h","start":4464386,"end":4466677},{"filename":"/include/c++/v1/__algorithm/unique.h","start":4466677,"end":4468801},{"filename":"/include/c++/v1/__algorithm/unique_copy.h","start":4468801,"end":4473593},{"filename":"/include/c++/v1/__algorithm/unwrap_iter.h","start":4473593,"end":4476923},{"filename":"/include/c++/v1/__algorithm/unwrap_range.h","start":4476923,"end":4480856},{"filename":"/include/c++/v1/__algorithm/upper_bound.h","start":4480856,"end":4483434},{"filename":"/include/c++/v1/__assert","start":4483434,"end":4485362},{"filename":"/include/c++/v1/__atomic/aliases.h","start":4485362,"end":4490035},{"filename":"/include/c++/v1/__atomic/atomic.h","start":4490035,"end":4508101},{"filename":"/include/c++/v1/__atomic/atomic_base.h","start":4508101,"end":4519130},{"filename":"/include/c++/v1/__atomic/atomic_flag.h","start":4519130,"end":4525444},{"filename":"/include/c++/v1/__atomic/atomic_init.h","start":4525444,"end":4526382},{"filename":"/include/c++/v1/__atomic/atomic_lock_free.h","start":4526382,"end":4528630},{"filename":"/include/c++/v1/__atomic/atomic_sync.h","start":4528630,"end":4532848},{"filename":"/include/c++/v1/__atomic/check_memory_order.h","start":4532848,"end":4534280},{"filename":"/include/c++/v1/__atomic/contention_t.h","start":4534280,"end":4535263},{"filename":"/include/c++/v1/__atomic/cxx_atomic_impl.h","start":4535263,"end":4565390},{"filename":"/include/c++/v1/__atomic/fence.h","start":4565390,"end":4566344},{"filename":"/include/c++/v1/__atomic/is_always_lock_free.h","start":4566344,"end":4567223},{"filename":"/include/c++/v1/__atomic/kill_dependency.h","start":4567223,"end":4567991},{"filename":"/include/c++/v1/__atomic/memory_order.h","start":4567991,"end":4570249},{"filename":"/include/c++/v1/__availability","start":4570249,"end":4592792},{"filename":"/include/c++/v1/__bit/bit_cast.h","start":4592792,"end":4593894},{"filename":"/include/c++/v1/__bit/bit_ceil.h","start":4593894,"end":4595305},{"filename":"/include/c++/v1/__bit/bit_floor.h","start":4595305,"end":4596272},{"filename":"/include/c++/v1/__bit/bit_log2.h","start":4596272,"end":4597223},{"filename":"/include/c++/v1/__bit/bit_width.h","start":4597223,"end":4598166},{"filename":"/include/c++/v1/__bit/blsr.h","start":4598166,"end":4599215},{"filename":"/include/c++/v1/__bit/byteswap.h","start":4599215,"end":4600886},{"filename":"/include/c++/v1/__bit/countl.h","start":4600886,"end":4604709},{"filename":"/include/c++/v1/__bit/countr.h","start":4604709,"end":4607080},{"filename":"/include/c++/v1/__bit/endian.h","start":4607080,"end":4607969},{"filename":"/include/c++/v1/__bit/has_single_bit.h","start":4607969,"end":4608971},{"filename":"/include/c++/v1/__bit/popcount.h","start":4608971,"end":4610946},{"filename":"/include/c++/v1/__bit/rotate.h","start":4610946,"end":4612637},{"filename":"/include/c++/v1/__bit_reference","start":4612637,"end":4668712},{"filename":"/include/c++/v1/__charconv/chars_format.h","start":4668712,"end":4670760},{"filename":"/include/c++/v1/__charconv/from_chars_integral.h","start":4670760,"end":4679131},{"filename":"/include/c++/v1/__charconv/from_chars_result.h","start":4679131,"end":4680150},{"filename":"/include/c++/v1/__charconv/tables.h","start":4680150,"end":4688831},{"filename":"/include/c++/v1/__charconv/to_chars.h","start":4688831,"end":4689580},{"filename":"/include/c++/v1/__charconv/to_chars_base_10.h","start":4689580,"end":4696894},{"filename":"/include/c++/v1/__charconv/to_chars_floating_point.h","start":4696894,"end":4699236},{"filename":"/include/c++/v1/__charconv/to_chars_integral.h","start":4699236,"end":4710497},{"filename":"/include/c++/v1/__charconv/to_chars_result.h","start":4710497,"end":4711498},{"filename":"/include/c++/v1/__charconv/traits.h","start":4711498,"end":4718673},{"filename":"/include/c++/v1/__chrono/calendar.h","start":4718673,"end":4719771},{"filename":"/include/c++/v1/__chrono/concepts.h","start":4719771,"end":4720787},{"filename":"/include/c++/v1/__chrono/convert_to_timespec.h","start":4720787,"end":4722319},{"filename":"/include/c++/v1/__chrono/convert_to_tm.h","start":4722319,"end":4730358},{"filename":"/include/c++/v1/__chrono/day.h","start":4730358,"end":4733442},{"filename":"/include/c++/v1/__chrono/duration.h","start":4733442,"end":4755750},{"filename":"/include/c++/v1/__chrono/file_clock.h","start":4755750,"end":4758068},{"filename":"/include/c++/v1/__chrono/formatter.h","start":4758068,"end":4791276},{"filename":"/include/c++/v1/__chrono/hh_mm_ss.h","start":4791276,"end":4795383},{"filename":"/include/c++/v1/__chrono/high_resolution_clock.h","start":4795383,"end":4796335},{"filename":"/include/c++/v1/__chrono/literals.h","start":4796335,"end":4797689},{"filename":"/include/c++/v1/__chrono/month.h","start":4797689,"end":4801458},{"filename":"/include/c++/v1/__chrono/month_weekday.h","start":4801458,"end":4805341},{"filename":"/include/c++/v1/__chrono/monthday.h","start":4805341,"end":4809569},{"filename":"/include/c++/v1/__chrono/ostream.h","start":4809569,"end":4821707},{"filename":"/include/c++/v1/__chrono/parser_std_format_spec.h","start":4821707,"end":4834387},{"filename":"/include/c++/v1/__chrono/statically_widen.h","start":4834387,"end":4836155},{"filename":"/include/c++/v1/__chrono/steady_clock.h","start":4836155,"end":4837415},{"filename":"/include/c++/v1/__chrono/system_clock.h","start":4837415,"end":4838915},{"filename":"/include/c++/v1/__chrono/time_point.h","start":4838915,"end":4847772},{"filename":"/include/c++/v1/__chrono/weekday.h","start":4847772,"end":4854650},{"filename":"/include/c++/v1/__chrono/year.h","start":4854650,"end":4858453},{"filename":"/include/c++/v1/__chrono/year_month.h","start":4858453,"end":4862439},{"filename":"/include/c++/v1/__chrono/year_month_day.h","start":4862439,"end":4876862},{"filename":"/include/c++/v1/__chrono/year_month_weekday.h","start":4876862,"end":4889153},{"filename":"/include/c++/v1/__compare/common_comparison_category.h","start":4889153,"end":4891807},{"filename":"/include/c++/v1/__compare/compare_partial_order_fallback.h","start":4891807,"end":4895439},{"filename":"/include/c++/v1/__compare/compare_strong_order_fallback.h","start":4895439,"end":4898694},{"filename":"/include/c++/v1/__compare/compare_three_way.h","start":4898694,"end":4899941},{"filename":"/include/c++/v1/__compare/compare_three_way_result.h","start":4899941,"end":4901475},{"filename":"/include/c++/v1/__compare/compare_weak_order_fallback.h","start":4901475,"end":4904705},{"filename":"/include/c++/v1/__compare/is_eq.h","start":4904705,"end":4906051},{"filename":"/include/c++/v1/__compare/ordering.h","start":4906051,"end":4916343},{"filename":"/include/c++/v1/__compare/partial_order.h","start":4916343,"end":4919783},{"filename":"/include/c++/v1/__compare/strong_order.h","start":4919783,"end":4926432},{"filename":"/include/c++/v1/__compare/synth_three_way.h","start":4926432,"end":4928194},{"filename":"/include/c++/v1/__compare/three_way_comparable.h","start":4928194,"end":4930326},{"filename":"/include/c++/v1/__compare/weak_order.h","start":4930326,"end":4935051},{"filename":"/include/c++/v1/__concepts/arithmetic.h","start":4935051,"end":4936605},{"filename":"/include/c++/v1/__concepts/assignable.h","start":4936605,"end":4937843},{"filename":"/include/c++/v1/__concepts/boolean_testable.h","start":4937843,"end":4938929},{"filename":"/include/c++/v1/__concepts/class_or_enum.h","start":4938929,"end":4940268},{"filename":"/include/c++/v1/__concepts/common_reference_with.h","start":4940268,"end":4941404},{"filename":"/include/c++/v1/__concepts/common_with.h","start":4941404,"end":4943025},{"filename":"/include/c++/v1/__concepts/constructible.h","start":4943025,"end":4944772},{"filename":"/include/c++/v1/__concepts/convertible_to.h","start":4944772,"end":4945746},{"filename":"/include/c++/v1/__concepts/copyable.h","start":4945746,"end":4946828},{"filename":"/include/c++/v1/__concepts/derived_from.h","start":4946828,"end":4947794},{"filename":"/include/c++/v1/__concepts/destructible.h","start":4947794,"end":4948671},{"filename":"/include/c++/v1/__concepts/different_from.h","start":4948671,"end":4949583},{"filename":"/include/c++/v1/__concepts/equality_comparable.h","start":4949583,"end":4951425},{"filename":"/include/c++/v1/__concepts/invocable.h","start":4951425,"end":4952573},{"filename":"/include/c++/v1/__concepts/movable.h","start":4952573,"end":4953579},{"filename":"/include/c++/v1/__concepts/predicate.h","start":4953579,"end":4954570},{"filename":"/include/c++/v1/__concepts/regular.h","start":4954570,"end":4955464},{"filename":"/include/c++/v1/__concepts/relation.h","start":4955464,"end":4956655},{"filename":"/include/c++/v1/__concepts/same_as.h","start":4956655,"end":4957605},{"filename":"/include/c++/v1/__concepts/semiregular.h","start":4957605,"end":4958505},{"filename":"/include/c++/v1/__concepts/swappable.h","start":4958505,"end":4962618},{"filename":"/include/c++/v1/__concepts/totally_ordered.h","start":4962618,"end":4964508},{"filename":"/include/c++/v1/__condition_variable/condition_variable.h","start":4964508,"end":4973357},{"filename":"/include/c++/v1/__config","start":4973357,"end":5037018},{"filename":"/include/c++/v1/__config_site","start":5037018,"end":5037472},{"filename":"/include/c++/v1/__config_site.in","start":5037472,"end":5039382},{"filename":"/include/c++/v1/__coroutine/coroutine_handle.h","start":5039382,"end":5045753},{"filename":"/include/c++/v1/__coroutine/coroutine_traits.h","start":5045753,"end":5047348},{"filename":"/include/c++/v1/__coroutine/noop_coroutine_handle.h","start":5047348,"end":5050953},{"filename":"/include/c++/v1/__coroutine/trivial_awaitables.h","start":5050953,"end":5052364},{"filename":"/include/c++/v1/__cxxabi_config.h","start":5052364,"end":5055697},{"filename":"/include/c++/v1/__debug_utils/randomize_range.h","start":5055697,"end":5057042},{"filename":"/include/c++/v1/__debug_utils/strict_weak_ordering_check.h","start":5057042,"end":5060194},{"filename":"/include/c++/v1/__exception/exception.h","start":5060194,"end":5063214},{"filename":"/include/c++/v1/__exception/exception_ptr.h","start":5063214,"end":5066693},{"filename":"/include/c++/v1/__exception/nested_exception.h","start":5066693,"end":5070188},{"filename":"/include/c++/v1/__exception/operations.h","start":5070188,"end":5071918},{"filename":"/include/c++/v1/__exception/terminate.h","start":5071918,"end":5072672},{"filename":"/include/c++/v1/__expected/bad_expected_access.h","start":5072672,"end":5075252},{"filename":"/include/c++/v1/__expected/expected.h","start":5075252,"end":5139755},{"filename":"/include/c++/v1/__expected/unexpect.h","start":5139755,"end":5140579},{"filename":"/include/c++/v1/__expected/unexpected.h","start":5140579,"end":5145329},{"filename":"/include/c++/v1/__filesystem/copy_options.h","start":5145329,"end":5147760},{"filename":"/include/c++/v1/__filesystem/directory_entry.h","start":5147760,"end":5162761},{"filename":"/include/c++/v1/__filesystem/directory_iterator.h","start":5162761,"end":5167896},{"filename":"/include/c++/v1/__filesystem/directory_options.h","start":5167896,"end":5170544},{"filename":"/include/c++/v1/__filesystem/file_status.h","start":5170544,"end":5172730},{"filename":"/include/c++/v1/__filesystem/file_time_type.h","start":5172730,"end":5173645},{"filename":"/include/c++/v1/__filesystem/file_type.h","start":5173645,"end":5174712},{"filename":"/include/c++/v1/__filesystem/filesystem_error.h","start":5174712,"end":5177735},{"filename":"/include/c++/v1/__filesystem/operations.h","start":5177735,"end":5195029},{"filename":"/include/c++/v1/__filesystem/path.h","start":5195029,"end":5229446},{"filename":"/include/c++/v1/__filesystem/path_iterator.h","start":5229446,"end":5233214},{"filename":"/include/c++/v1/__filesystem/perm_options.h","start":5233214,"end":5235408},{"filename":"/include/c++/v1/__filesystem/perms.h","start":5235408,"end":5237951},{"filename":"/include/c++/v1/__filesystem/recursive_directory_iterator.h","start":5237951,"end":5244110},{"filename":"/include/c++/v1/__filesystem/space_info.h","start":5244110,"end":5245151},{"filename":"/include/c++/v1/__filesystem/u8path.h","start":5245151,"end":5248716},{"filename":"/include/c++/v1/__format/buffer.h","start":5248716,"end":5273520},{"filename":"/include/c++/v1/__format/concepts.h","start":5273520,"end":5276333},{"filename":"/include/c++/v1/__format/container_adaptor.h","start":5276333,"end":5279206},{"filename":"/include/c++/v1/__format/enable_insertable.h","start":5279206,"end":5280138},{"filename":"/include/c++/v1/__format/escaped_output_table.h","start":5280138,"end":5300380},{"filename":"/include/c++/v1/__format/extended_grapheme_cluster_table.h","start":5300380,"end":5330968},{"filename":"/include/c++/v1/__format/format_arg.h","start":5330968,"end":5343004},{"filename":"/include/c++/v1/__format/format_arg_store.h","start":5343004,"end":5352407},{"filename":"/include/c++/v1/__format/format_args.h","start":5352407,"end":5354917},{"filename":"/include/c++/v1/__format/format_context.h","start":5354917,"end":5363280},{"filename":"/include/c++/v1/__format/format_error.h","start":5363280,"end":5364774},{"filename":"/include/c++/v1/__format/format_functions.h","start":5364774,"end":5392678},{"filename":"/include/c++/v1/__format/format_fwd.h","start":5392678,"end":5393753},{"filename":"/include/c++/v1/__format/format_parse_context.h","start":5393753,"end":5397718},{"filename":"/include/c++/v1/__format/format_string.h","start":5397718,"end":5403227},{"filename":"/include/c++/v1/__format/format_to_n_result.h","start":5403227,"end":5404198},{"filename":"/include/c++/v1/__format/formatter.h","start":5404198,"end":5405749},{"filename":"/include/c++/v1/__format/formatter_bool.h","start":5405749,"end":5408430},{"filename":"/include/c++/v1/__format/formatter_char.h","start":5408430,"end":5411946},{"filename":"/include/c++/v1/__format/formatter_floating_point.h","start":5411946,"end":5446435},{"filename":"/include/c++/v1/__format/formatter_integer.h","start":5446435,"end":5450541},{"filename":"/include/c++/v1/__format/formatter_integral.h","start":5450541,"end":5466995},{"filename":"/include/c++/v1/__format/formatter_output.h","start":5466995,"end":5480482},{"filename":"/include/c++/v1/__format/formatter_pointer.h","start":5480482,"end":5483309},{"filename":"/include/c++/v1/__format/formatter_string.h","start":5483309,"end":5489475},{"filename":"/include/c++/v1/__format/formatter_tuple.h","start":5489475,"end":5495563},{"filename":"/include/c++/v1/__format/parser_std_format_spec.h","start":5495563,"end":5539275},{"filename":"/include/c++/v1/__format/range_default_formatter.h","start":5539275,"end":5548286},{"filename":"/include/c++/v1/__format/range_formatter.h","start":5548286,"end":5559991},{"filename":"/include/c++/v1/__format/unicode.h","start":5559991,"end":5578785},{"filename":"/include/c++/v1/__format/width_estimation_table.h","start":5578785,"end":5591622},{"filename":"/include/c++/v1/__format/write_escaped.h","start":5591622,"end":5599790},{"filename":"/include/c++/v1/__functional/binary_function.h","start":5599790,"end":5601757},{"filename":"/include/c++/v1/__functional/binary_negate.h","start":5601757,"end":5603570},{"filename":"/include/c++/v1/__functional/bind.h","start":5603570,"end":5616064},{"filename":"/include/c++/v1/__functional/bind_back.h","start":5616064,"end":5618946},{"filename":"/include/c++/v1/__functional/bind_front.h","start":5618946,"end":5621049},{"filename":"/include/c++/v1/__functional/binder1st.h","start":5621049,"end":5622999},{"filename":"/include/c++/v1/__functional/binder2nd.h","start":5622999,"end":5624928},{"filename":"/include/c++/v1/__functional/boyer_moore_searcher.h","start":5624928,"end":5636579},{"filename":"/include/c++/v1/__functional/compose.h","start":5636579,"end":5638726},{"filename":"/include/c++/v1/__functional/default_searcher.h","start":5638726,"end":5640555},{"filename":"/include/c++/v1/__functional/function.h","start":5640555,"end":5678474},{"filename":"/include/c++/v1/__functional/hash.h","start":5678474,"end":5698653},{"filename":"/include/c++/v1/__functional/identity.h","start":5698653,"end":5700100},{"filename":"/include/c++/v1/__functional/invoke.h","start":5700100,"end":5702140},{"filename":"/include/c++/v1/__functional/is_transparent.h","start":5702140,"end":5703148},{"filename":"/include/c++/v1/__functional/mem_fn.h","start":5703148,"end":5704704},{"filename":"/include/c++/v1/__functional/mem_fun_ref.h","start":5704704,"end":5710449},{"filename":"/include/c++/v1/__functional/not_fn.h","start":5710449,"end":5712254},{"filename":"/include/c++/v1/__functional/operations.h","start":5712254,"end":5730799},{"filename":"/include/c++/v1/__functional/perfect_forward.h","start":5730799,"end":5735585},{"filename":"/include/c++/v1/__functional/pointer_to_binary_function.h","start":5735585,"end":5737166},{"filename":"/include/c++/v1/__functional/pointer_to_unary_function.h","start":5737166,"end":5738722},{"filename":"/include/c++/v1/__functional/ranges_operations.h","start":5738722,"end":5742139},{"filename":"/include/c++/v1/__functional/reference_wrapper.h","start":5742139,"end":5745381},{"filename":"/include/c++/v1/__functional/unary_function.h","start":5745381,"end":5747068},{"filename":"/include/c++/v1/__functional/unary_negate.h","start":5747068,"end":5748683},{"filename":"/include/c++/v1/__functional/weak_result_type.h","start":5748683,"end":5756926},{"filename":"/include/c++/v1/__fwd/array.h","start":5756926,"end":5757640},{"filename":"/include/c++/v1/__fwd/fstream.h","start":5757640,"end":5759708},{"filename":"/include/c++/v1/__fwd/get.h","start":5759708,"end":5763271},{"filename":"/include/c++/v1/__fwd/hash.h","start":5763271,"end":5763944},{"filename":"/include/c++/v1/__fwd/ios.h","start":5763944,"end":5765138},{"filename":"/include/c++/v1/__fwd/istream.h","start":5765138,"end":5766528},{"filename":"/include/c++/v1/__fwd/mdspan.h","start":5766528,"end":5768076},{"filename":"/include/c++/v1/__fwd/memory_resource.h","start":5768076,"end":5768897},{"filename":"/include/c++/v1/__fwd/ostream.h","start":5768897,"end":5769940},{"filename":"/include/c++/v1/__fwd/pair.h","start":5769940,"end":5770620},{"filename":"/include/c++/v1/__fwd/span.h","start":5770620,"end":5771537},{"filename":"/include/c++/v1/__fwd/sstream.h","start":5771537,"end":5773984},{"filename":"/include/c++/v1/__fwd/streambuf.h","start":5773984,"end":5775049},{"filename":"/include/c++/v1/__fwd/string.h","start":5775049,"end":5778012},{"filename":"/include/c++/v1/__fwd/string_view.h","start":5778012,"end":5779555},{"filename":"/include/c++/v1/__fwd/subrange.h","start":5779555,"end":5780602},{"filename":"/include/c++/v1/__fwd/tuple.h","start":5780602,"end":5781339},{"filename":"/include/c++/v1/__hash_table","start":5781339,"end":5872894},{"filename":"/include/c++/v1/__ios/fpos.h","start":5872894,"end":5874928},{"filename":"/include/c++/v1/__iterator/access.h","start":5874928,"end":5877471},{"filename":"/include/c++/v1/__iterator/advance.h","start":5877471,"end":5884839},{"filename":"/include/c++/v1/__iterator/back_insert_iterator.h","start":5884839,"end":5887674},{"filename":"/include/c++/v1/__iterator/bounded_iter.h","start":5887674,"end":5897418},{"filename":"/include/c++/v1/__iterator/common_iterator.h","start":5897418,"end":5909998},{"filename":"/include/c++/v1/__iterator/concepts.h","start":5909998,"end":5921123},{"filename":"/include/c++/v1/__iterator/counted_iterator.h","start":5921123,"end":5930564},{"filename":"/include/c++/v1/__iterator/cpp17_iterator_concepts.h","start":5930564,"end":5938306},{"filename":"/include/c++/v1/__iterator/data.h","start":5938306,"end":5939675},{"filename":"/include/c++/v1/__iterator/default_sentinel.h","start":5939675,"end":5940512},{"filename":"/include/c++/v1/__iterator/distance.h","start":5940512,"end":5943628},{"filename":"/include/c++/v1/__iterator/empty.h","start":5943628,"end":5944935},{"filename":"/include/c++/v1/__iterator/erase_if_container.h","start":5944935,"end":5946186},{"filename":"/include/c++/v1/__iterator/front_insert_iterator.h","start":5946186,"end":5948950},{"filename":"/include/c++/v1/__iterator/incrementable_traits.h","start":5948950,"end":5951527},{"filename":"/include/c++/v1/__iterator/indirectly_comparable.h","start":5951527,"end":5952589},{"filename":"/include/c++/v1/__iterator/insert_iterator.h","start":5952589,"end":5955662},{"filename":"/include/c++/v1/__iterator/istream_iterator.h","start":5955662,"end":5959465},{"filename":"/include/c++/v1/__iterator/istreambuf_iterator.h","start":5959465,"end":5963845},{"filename":"/include/c++/v1/__iterator/iter_move.h","start":5963845,"end":5967030},{"filename":"/include/c++/v1/__iterator/iter_swap.h","start":5967030,"end":5970993},{"filename":"/include/c++/v1/__iterator/iterator.h","start":5970993,"end":5972054},{"filename":"/include/c++/v1/__iterator/iterator_traits.h","start":5972054,"end":5992282},{"filename":"/include/c++/v1/__iterator/iterator_with_data.h","start":5992282,"end":5995415},{"filename":"/include/c++/v1/__iterator/mergeable.h","start":5995415,"end":5996737},{"filename":"/include/c++/v1/__iterator/move_iterator.h","start":5996737,"end":6009354},{"filename":"/include/c++/v1/__iterator/move_sentinel.h","start":6009354,"end":6011069},{"filename":"/include/c++/v1/__iterator/next.h","start":6011069,"end":6013535},{"filename":"/include/c++/v1/__iterator/ostream_iterator.h","start":6013535,"end":6016208},{"filename":"/include/c++/v1/__iterator/ostreambuf_iterator.h","start":6016208,"end":6019166},{"filename":"/include/c++/v1/__iterator/permutable.h","start":6019166,"end":6020153},{"filename":"/include/c++/v1/__iterator/prev.h","start":6020153,"end":6022368},{"filename":"/include/c++/v1/__iterator/projected.h","start":6022368,"end":6023609},{"filename":"/include/c++/v1/__iterator/ranges_iterator_traits.h","start":6023609,"end":6024943},{"filename":"/include/c++/v1/__iterator/readable_traits.h","start":6024943,"end":6027454},{"filename":"/include/c++/v1/__iterator/reverse_access.h","start":6027454,"end":6030027},{"filename":"/include/c++/v1/__iterator/reverse_iterator.h","start":6030027,"end":6050644},{"filename":"/include/c++/v1/__iterator/segmented_iterator.h","start":6050644,"end":6053749},{"filename":"/include/c++/v1/__iterator/size.h","start":6053749,"end":6055636},{"filename":"/include/c++/v1/__iterator/sortable.h","start":6055636,"end":6056722},{"filename":"/include/c++/v1/__iterator/unreachable_sentinel.h","start":6056722,"end":6057786},{"filename":"/include/c++/v1/__iterator/wrap_iter.h","start":6057786,"end":6065571},{"filename":"/include/c++/v1/__locale","start":6065571,"end":6122655},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/bsd_locale_defaults.h","start":6122655,"end":6124837},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/bsd_locale_fallbacks.h","start":6124837,"end":6129295},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/locale_guard.h","start":6129295,"end":6132174},{"filename":"/include/c++/v1/__mbstate_t.h","start":6132174,"end":6134447},{"filename":"/include/c++/v1/__mdspan/default_accessor.h","start":6134447,"end":6136728},{"filename":"/include/c++/v1/__mdspan/extents.h","start":6136728,"end":6159887},{"filename":"/include/c++/v1/__mdspan/layout_left.h","start":6159887,"end":6168322},{"filename":"/include/c++/v1/__mdspan/layout_right.h","start":6168322,"end":6176644},{"filename":"/include/c++/v1/__mdspan/mdspan.h","start":6176644,"end":6192605},{"filename":"/include/c++/v1/__memory/addressof.h","start":6192605,"end":6194483},{"filename":"/include/c++/v1/__memory/align.h","start":6194483,"end":6195237},{"filename":"/include/c++/v1/__memory/aligned_alloc.h","start":6195237,"end":6197776},{"filename":"/include/c++/v1/__memory/allocate_at_least.h","start":6197776,"end":6199563},{"filename":"/include/c++/v1/__memory/allocation_guard.h","start":6199563,"end":6203215},{"filename":"/include/c++/v1/__memory/allocator.h","start":6203215,"end":6213219},{"filename":"/include/c++/v1/__memory/allocator_arg_t.h","start":6213219,"end":6215996},{"filename":"/include/c++/v1/__memory/allocator_destructor.h","start":6215996,"end":6217328},{"filename":"/include/c++/v1/__memory/allocator_traits.h","start":6217328,"end":6234370},{"filename":"/include/c++/v1/__memory/assume_aligned.h","start":6234370,"end":6235700},{"filename":"/include/c++/v1/__memory/auto_ptr.h","start":6235700,"end":6238580},{"filename":"/include/c++/v1/__memory/builtin_new_allocator.h","start":6238580,"end":6240954},{"filename":"/include/c++/v1/__memory/compressed_pair.h","start":6240954,"end":6248215},{"filename":"/include/c++/v1/__memory/concepts.h","start":6248215,"end":6250311},{"filename":"/include/c++/v1/__memory/construct_at.h","start":6250311,"end":6254760},{"filename":"/include/c++/v1/__memory/destruct_n.h","start":6254760,"end":6256848},{"filename":"/include/c++/v1/__memory/pointer_traits.h","start":6256848,"end":6264504},{"filename":"/include/c++/v1/__memory/ranges_construct_at.h","start":6264504,"end":6267932},{"filename":"/include/c++/v1/__memory/ranges_uninitialized_algorithms.h","start":6267932,"end":6281009},{"filename":"/include/c++/v1/__memory/raw_storage_iterator.h","start":6281009,"end":6283621},{"filename":"/include/c++/v1/__memory/shared_ptr.h","start":6283621,"end":6350843},{"filename":"/include/c++/v1/__memory/swap_allocator.h","start":6350843,"end":6352485},{"filename":"/include/c++/v1/__memory/temp_value.h","start":6352485,"end":6354209},{"filename":"/include/c++/v1/__memory/temporary_buffer.h","start":6354209,"end":6356800},{"filename":"/include/c++/v1/__memory/uninitialized_algorithms.h","start":6356800,"end":6383245},{"filename":"/include/c++/v1/__memory/unique_ptr.h","start":6383245,"end":6410517},{"filename":"/include/c++/v1/__memory/uses_allocator.h","start":6410517,"end":6412125},{"filename":"/include/c++/v1/__memory/uses_allocator_construction.h","start":6412125,"end":6421762},{"filename":"/include/c++/v1/__memory/voidify.h","start":6421762,"end":6422764},{"filename":"/include/c++/v1/__memory_resource/memory_resource.h","start":6422764,"end":6425624},{"filename":"/include/c++/v1/__memory_resource/monotonic_buffer_resource.h","start":6425624,"end":6429796},{"filename":"/include/c++/v1/__memory_resource/polymorphic_allocator.h","start":6429796,"end":6437795},{"filename":"/include/c++/v1/__memory_resource/pool_options.h","start":6437795,"end":6438757},{"filename":"/include/c++/v1/__memory_resource/synchronized_pool_resource.h","start":6438757,"end":6441838},{"filename":"/include/c++/v1/__memory_resource/unsynchronized_pool_resource.h","start":6441838,"end":6445489},{"filename":"/include/c++/v1/__mutex/lock_guard.h","start":6445489,"end":6447063},{"filename":"/include/c++/v1/__mutex/mutex.h","start":6447063,"end":6448790},{"filename":"/include/c++/v1/__mutex/tag_types.h","start":6448790,"end":6450191},{"filename":"/include/c++/v1/__mutex/unique_lock.h","start":6450191,"end":6455534},{"filename":"/include/c++/v1/__node_handle","start":6455534,"end":6463380},{"filename":"/include/c++/v1/__numeric/accumulate.h","start":6463380,"end":6464945},{"filename":"/include/c++/v1/__numeric/adjacent_difference.h","start":6464945,"end":6467383},{"filename":"/include/c++/v1/__numeric/exclusive_scan.h","start":6467383,"end":6469160},{"filename":"/include/c++/v1/__numeric/gcd_lcm.h","start":6469160,"end":6472487},{"filename":"/include/c++/v1/__numeric/inclusive_scan.h","start":6472487,"end":6474729},{"filename":"/include/c++/v1/__numeric/inner_product.h","start":6474729,"end":6476615},{"filename":"/include/c++/v1/__numeric/iota.h","start":6476615,"end":6477532},{"filename":"/include/c++/v1/__numeric/midpoint.h","start":6477532,"end":6480605},{"filename":"/include/c++/v1/__numeric/partial_sum.h","start":6480605,"end":6482781},{"filename":"/include/c++/v1/__numeric/pstl_reduce.h","start":6482781,"end":6485544},{"filename":"/include/c++/v1/__numeric/pstl_transform_reduce.h","start":6485544,"end":6489088},{"filename":"/include/c++/v1/__numeric/reduce.h","start":6489088,"end":6490862},{"filename":"/include/c++/v1/__numeric/transform_exclusive_scan.h","start":6490862,"end":6492297},{"filename":"/include/c++/v1/__numeric/transform_inclusive_scan.h","start":6492297,"end":6494241},{"filename":"/include/c++/v1/__numeric/transform_reduce.h","start":6494241,"end":6496764},{"filename":"/include/c++/v1/__pstl/internal/algorithm_fwd.h","start":6496764,"end":6560692},{"filename":"/include/c++/v1/__pstl/internal/algorithm_impl.h","start":6560692,"end":6720261},{"filename":"/include/c++/v1/__pstl/internal/execution_defs.h","start":6720261,"end":6722604},{"filename":"/include/c++/v1/__pstl/internal/execution_impl.h","start":6722604,"end":6725910},{"filename":"/include/c++/v1/__pstl/internal/glue_algorithm_defs.h","start":6725910,"end":6755435},{"filename":"/include/c++/v1/__pstl/internal/glue_algorithm_impl.h","start":6755435,"end":6800266},{"filename":"/include/c++/v1/__pstl/internal/glue_memory_defs.h","start":6800266,"end":6804153},{"filename":"/include/c++/v1/__pstl/internal/glue_memory_impl.h","start":6804153,"end":6820304},{"filename":"/include/c++/v1/__pstl/internal/glue_numeric_defs.h","start":6820304,"end":6825008},{"filename":"/include/c++/v1/__pstl/internal/glue_numeric_impl.h","start":6825008,"end":6832669},{"filename":"/include/c++/v1/__pstl/internal/memory_impl.h","start":6832669,"end":6836752},{"filename":"/include/c++/v1/__pstl/internal/numeric_fwd.h","start":6836752,"end":6841272},{"filename":"/include/c++/v1/__pstl/internal/numeric_impl.h","start":6841272,"end":6854076},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_for.h","start":6854076,"end":6856210},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_for_each.h","start":6856210,"end":6858202},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_invoke.h","start":6858202,"end":6859666},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_merge.h","start":6859666,"end":6863292},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_reduce.h","start":6863292,"end":6865994},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_scan.h","start":6865994,"end":6870573},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_stable_partial_sort.h","start":6870573,"end":6871708},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_stable_sort.h","start":6871708,"end":6877641},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_transform_reduce.h","start":6877641,"end":6882141},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_transform_scan.h","start":6882141,"end":6883218},{"filename":"/include/c++/v1/__pstl/internal/omp/util.h","start":6883218,"end":6888712},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend.h","start":6888712,"end":6889858},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_omp.h","start":6889858,"end":6891942},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_serial.h","start":6891942,"end":6895509},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_tbb.h","start":6895509,"end":6940149},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_utils.h","start":6940149,"end":6949354},{"filename":"/include/c++/v1/__pstl/internal/unseq_backend_simd.h","start":6949354,"end":6974067},{"filename":"/include/c++/v1/__pstl/internal/utils.h","start":6974067,"end":6978157},{"filename":"/include/c++/v1/__pstl_algorithm","start":6978157,"end":6978671},{"filename":"/include/c++/v1/__pstl_config_site.in","start":6978671,"end":6979277},{"filename":"/include/c++/v1/__pstl_memory","start":6979277,"end":6979779},{"filename":"/include/c++/v1/__pstl_numeric","start":6979779,"end":6980285},{"filename":"/include/c++/v1/__random/bernoulli_distribution.h","start":6980285,"end":6984795},{"filename":"/include/c++/v1/__random/binomial_distribution.h","start":6984795,"end":6991919},{"filename":"/include/c++/v1/__random/cauchy_distribution.h","start":6991919,"end":6997211},{"filename":"/include/c++/v1/__random/chi_squared_distribution.h","start":6997211,"end":7001723},{"filename":"/include/c++/v1/__random/clamp_to_integral.h","start":7001723,"end":7003936},{"filename":"/include/c++/v1/__random/default_random_engine.h","start":7003936,"end":7004712},{"filename":"/include/c++/v1/__random/discard_block_engine.h","start":7004712,"end":7011423},{"filename":"/include/c++/v1/__random/discrete_distribution.h","start":7011423,"end":7019919},{"filename":"/include/c++/v1/__random/exponential_distribution.h","start":7019919,"end":7025037},{"filename":"/include/c++/v1/__random/extreme_value_distribution.h","start":7025037,"end":7030369},{"filename":"/include/c++/v1/__random/fisher_f_distribution.h","start":7030369,"end":7035593},{"filename":"/include/c++/v1/__random/gamma_distribution.h","start":7035593,"end":7042502},{"filename":"/include/c++/v1/__random/generate_canonical.h","start":7042502,"end":7044195},{"filename":"/include/c++/v1/__random/geometric_distribution.h","start":7044195,"end":7048731},{"filename":"/include/c++/v1/__random/independent_bits_engine.h","start":7048731,"end":7058259},{"filename":"/include/c++/v1/__random/is_seed_sequence.h","start":7058259,"end":7059299},{"filename":"/include/c++/v1/__random/is_valid.h","start":7059299,"end":7062307},{"filename":"/include/c++/v1/__random/knuth_b.h","start":7062307,"end":7063098},{"filename":"/include/c++/v1/__random/linear_congruential_engine.h","start":7063098,"end":7078080},{"filename":"/include/c++/v1/__random/log2.h","start":7078080,"end":7080055},{"filename":"/include/c++/v1/__random/lognormal_distribution.h","start":7080055,"end":7084985},{"filename":"/include/c++/v1/__random/mersenne_twister_engine.h","start":7084985,"end":7110257},{"filename":"/include/c++/v1/__random/negative_binomial_distribution.h","start":7110257,"end":7116560},{"filename":"/include/c++/v1/__random/normal_distribution.h","start":7116560,"end":7123261},{"filename":"/include/c++/v1/__random/piecewise_constant_distribution.h","start":7123261,"end":7135592},{"filename":"/include/c++/v1/__random/piecewise_linear_distribution.h","start":7135592,"end":7148024},{"filename":"/include/c++/v1/__random/poisson_distribution.h","start":7148024,"end":7157303},{"filename":"/include/c++/v1/__random/random_device.h","start":7157303,"end":7159732},{"filename":"/include/c++/v1/__random/ranlux.h","start":7159732,"end":7160763},{"filename":"/include/c++/v1/__random/seed_seq.h","start":7160763,"end":7166476},{"filename":"/include/c++/v1/__random/shuffle_order_engine.h","start":7166476,"end":7175518},{"filename":"/include/c++/v1/__random/student_t_distribution.h","start":7175518,"end":7180425},{"filename":"/include/c++/v1/__random/subtract_with_carry_engine.h","start":7180425,"end":7193322},{"filename":"/include/c++/v1/__random/uniform_int_distribution.h","start":7193322,"end":7202972},{"filename":"/include/c++/v1/__random/uniform_random_bit_generator.h","start":7202972,"end":7204323},{"filename":"/include/c++/v1/__random/uniform_real_distribution.h","start":7204323,"end":7209574},{"filename":"/include/c++/v1/__random/weibull_distribution.h","start":7209574,"end":7214486},{"filename":"/include/c++/v1/__ranges/access.h","start":7214486,"end":7221347},{"filename":"/include/c++/v1/__ranges/all.h","start":7221347,"end":7224090},{"filename":"/include/c++/v1/__ranges/as_rvalue_view.h","start":7224090,"end":7228222},{"filename":"/include/c++/v1/__ranges/common_view.h","start":7228222,"end":7232654},{"filename":"/include/c++/v1/__ranges/concepts.h","start":7232654,"end":7237215},{"filename":"/include/c++/v1/__ranges/container_compatible_range.h","start":7237215,"end":7238221},{"filename":"/include/c++/v1/__ranges/counted.h","start":7238221,"end":7241209},{"filename":"/include/c++/v1/__ranges/dangling.h","start":7241209,"end":7242340},{"filename":"/include/c++/v1/__ranges/data.h","start":7242340,"end":7245650},{"filename":"/include/c++/v1/__ranges/drop_view.h","start":7245650,"end":7259809},{"filename":"/include/c++/v1/__ranges/drop_while_view.h","start":7259809,"end":7264452},{"filename":"/include/c++/v1/__ranges/elements_view.h","start":7264452,"end":7277935},{"filename":"/include/c++/v1/__ranges/empty.h","start":7277935,"end":7280195},{"filename":"/include/c++/v1/__ranges/empty_view.h","start":7280195,"end":7281849},{"filename":"/include/c++/v1/__ranges/enable_borrowed_range.h","start":7281849,"end":7282928},{"filename":"/include/c++/v1/__ranges/enable_view.h","start":7282928,"end":7284375},{"filename":"/include/c++/v1/__ranges/filter_view.h","start":7284375,"end":7293757},{"filename":"/include/c++/v1/__ranges/from_range.h","start":7293757,"end":7294590},{"filename":"/include/c++/v1/__ranges/iota_view.h","start":7294590,"end":7308944},{"filename":"/include/c++/v1/__ranges/istream_view.h","start":7308944,"end":7313700},{"filename":"/include/c++/v1/__ranges/join_view.h","start":7313700,"end":7328706},{"filename":"/include/c++/v1/__ranges/lazy_split_view.h","start":7328706,"end":7344496},{"filename":"/include/c++/v1/__ranges/movable_box.h","start":7344496,"end":7352899},{"filename":"/include/c++/v1/__ranges/non_propagating_cache.h","start":7352899,"end":7356674},{"filename":"/include/c++/v1/__ranges/owning_view.h","start":7356674,"end":7360054},{"filename":"/include/c++/v1/__ranges/range_adaptor.h","start":7360054,"end":7363429},{"filename":"/include/c++/v1/__ranges/rbegin.h","start":7363429,"end":7367346},{"filename":"/include/c++/v1/__ranges/ref_view.h","start":7367346,"end":7370064},{"filename":"/include/c++/v1/__ranges/rend.h","start":7370064,"end":7374040},{"filename":"/include/c++/v1/__ranges/repeat_view.h","start":7374040,"end":7383280},{"filename":"/include/c++/v1/__ranges/reverse_view.h","start":7383280,"end":7390746},{"filename":"/include/c++/v1/__ranges/single_view.h","start":7390746,"end":7393977},{"filename":"/include/c++/v1/__ranges/size.h","start":7393977,"end":7398424},{"filename":"/include/c++/v1/__ranges/split_view.h","start":7398424,"end":7406686},{"filename":"/include/c++/v1/__ranges/subrange.h","start":7406686,"end":7416981},{"filename":"/include/c++/v1/__ranges/take_view.h","start":7416981,"end":7431355},{"filename":"/include/c++/v1/__ranges/take_while_view.h","start":7431355,"end":7437859},{"filename":"/include/c++/v1/__ranges/to.h","start":7437859,"end":7448548},{"filename":"/include/c++/v1/__ranges/transform_view.h","start":7448548,"end":7463029},{"filename":"/include/c++/v1/__ranges/view_interface.h","start":7463029,"end":7468378},{"filename":"/include/c++/v1/__ranges/views.h","start":7468378,"end":7469180},{"filename":"/include/c++/v1/__ranges/zip_view.h","start":7469180,"end":7488172},{"filename":"/include/c++/v1/__split_buffer","start":7488172,"end":7513976},{"filename":"/include/c++/v1/__std_clang_module","start":7513976,"end":7519501},{"filename":"/include/c++/v1/__std_mbstate_t.h","start":7519501,"end":7520330},{"filename":"/include/c++/v1/__stop_token/atomic_unique_lock.h","start":7520330,"end":7526679},{"filename":"/include/c++/v1/__stop_token/intrusive_list_view.h","start":7526679,"end":7529534},{"filename":"/include/c++/v1/__stop_token/intrusive_shared_ptr.h","start":7529534,"end":7534153},{"filename":"/include/c++/v1/__stop_token/stop_callback.h","start":7534153,"end":7537934},{"filename":"/include/c++/v1/__stop_token/stop_source.h","start":7537934,"end":7541054},{"filename":"/include/c++/v1/__stop_token/stop_state.h","start":7541054,"end":7551310},{"filename":"/include/c++/v1/__stop_token/stop_token.h","start":7551310,"end":7553702},{"filename":"/include/c++/v1/__string/char_traits.h","start":7553702,"end":7584495},{"filename":"/include/c++/v1/__string/constexpr_c_functions.h","start":7584495,"end":7593490},{"filename":"/include/c++/v1/__string/extern_template_lists.h","start":7593490,"end":7606929},{"filename":"/include/c++/v1/__support/android/locale_bionic.h","start":7606929,"end":7608952},{"filename":"/include/c++/v1/__support/fuchsia/xlocale.h","start":7608952,"end":7609670},{"filename":"/include/c++/v1/__support/ibm/gettod_zos.h","start":7609670,"end":7611314},{"filename":"/include/c++/v1/__support/ibm/locale_mgmt_zos.h","start":7611314,"end":7612994},{"filename":"/include/c++/v1/__support/ibm/nanosleep.h","start":7612994,"end":7614853},{"filename":"/include/c++/v1/__support/ibm/xlocale.h","start":7614853,"end":7618343},{"filename":"/include/c++/v1/__support/musl/xlocale.h","start":7618343,"end":7620142},{"filename":"/include/c++/v1/__support/newlib/xlocale.h","start":7620142,"end":7620913},{"filename":"/include/c++/v1/__support/openbsd/xlocale.h","start":7620913,"end":7621911},{"filename":"/include/c++/v1/__support/win32/locale_win32.h","start":7621911,"end":7632063},{"filename":"/include/c++/v1/__support/xlocale/__nop_locale_mgmt.h","start":7632063,"end":7633582},{"filename":"/include/c++/v1/__support/xlocale/__posix_l_fallback.h","start":7633582,"end":7638239},{"filename":"/include/c++/v1/__support/xlocale/__strtonum_fallback.h","start":7638239,"end":7640644},{"filename":"/include/c++/v1/__system_error/errc.h","start":7640644,"end":7649889},{"filename":"/include/c++/v1/__system_error/error_category.h","start":7649889,"end":7652451},{"filename":"/include/c++/v1/__system_error/error_code.h","start":7652451,"end":7657144},{"filename":"/include/c++/v1/__system_error/error_condition.h","start":7657144,"end":7661393},{"filename":"/include/c++/v1/__system_error/system_error.h","start":7661393,"end":7663040},{"filename":"/include/c++/v1/__thread/formatter.h","start":7663040,"end":7666196},{"filename":"/include/c++/v1/__thread/id.h","start":7666196,"end":7670237},{"filename":"/include/c++/v1/__thread/poll_with_backoff.h","start":7670237,"end":7673029},{"filename":"/include/c++/v1/__thread/this_thread.h","start":7673029,"end":7675532},{"filename":"/include/c++/v1/__thread/thread.h","start":7675532,"end":7684878},{"filename":"/include/c++/v1/__thread/timed_backoff_policy.h","start":7684878,"end":7686188},{"filename":"/include/c++/v1/__threading_support","start":7686188,"end":7701459},{"filename":"/include/c++/v1/__tree","start":7701459,"end":7805870},{"filename":"/include/c++/v1/__tuple/make_tuple_types.h","start":7805870,"end":7808779},{"filename":"/include/c++/v1/__tuple/pair_like.h","start":7808779,"end":7809697},{"filename":"/include/c++/v1/__tuple/sfinae_helpers.h","start":7809697,"end":7816406},{"filename":"/include/c++/v1/__tuple/tuple_element.h","start":7816406,"end":7819236},{"filename":"/include/c++/v1/__tuple/tuple_indices.h","start":7819236,"end":7820259},{"filename":"/include/c++/v1/__tuple/tuple_like.h","start":7820259,"end":7821733},{"filename":"/include/c++/v1/__tuple/tuple_like_ext.h","start":7821733,"end":7823302},{"filename":"/include/c++/v1/__tuple/tuple_size.h","start":7823302,"end":7825723},{"filename":"/include/c++/v1/__tuple/tuple_types.h","start":7825723,"end":7826423},{"filename":"/include/c++/v1/__type_traits/add_const.h","start":7826423,"end":7827298},{"filename":"/include/c++/v1/__type_traits/add_cv.h","start":7827298,"end":7828164},{"filename":"/include/c++/v1/__type_traits/add_lvalue_reference.h","start":7828164,"end":7829678},{"filename":"/include/c++/v1/__type_traits/add_pointer.h","start":7829678,"end":7831377},{"filename":"/include/c++/v1/__type_traits/add_rvalue_reference.h","start":7831377,"end":7832876},{"filename":"/include/c++/v1/__type_traits/add_volatile.h","start":7832876,"end":7833772},{"filename":"/include/c++/v1/__type_traits/aligned_storage.h","start":7833772,"end":7838895},{"filename":"/include/c++/v1/__type_traits/aligned_union.h","start":7838895,"end":7840613},{"filename":"/include/c++/v1/__type_traits/alignment_of.h","start":7840613,"end":7841590},{"filename":"/include/c++/v1/__type_traits/apply_cv.h","start":7841590,"end":7843722},{"filename":"/include/c++/v1/__type_traits/can_extract_key.h","start":7843722,"end":7845880},{"filename":"/include/c++/v1/__type_traits/common_reference.h","start":7845880,"end":7853292},{"filename":"/include/c++/v1/__type_traits/common_type.h","start":7853292,"end":7856798},{"filename":"/include/c++/v1/__type_traits/conditional.h","start":7856798,"end":7858521},{"filename":"/include/c++/v1/__type_traits/conjunction.h","start":7858521,"end":7860366},{"filename":"/include/c++/v1/__type_traits/copy_cv.h","start":7860366,"end":7861782},{"filename":"/include/c++/v1/__type_traits/copy_cvref.h","start":7861782,"end":7863058},{"filename":"/include/c++/v1/__type_traits/datasizeof.h","start":7863058,"end":7864730},{"filename":"/include/c++/v1/__type_traits/decay.h","start":7864730,"end":7866734},{"filename":"/include/c++/v1/__type_traits/dependent_type.h","start":7866734,"end":7867501},{"filename":"/include/c++/v1/__type_traits/disjunction.h","start":7867501,"end":7869305},{"filename":"/include/c++/v1/__type_traits/enable_if.h","start":7869305,"end":7870380},{"filename":"/include/c++/v1/__type_traits/extent.h","start":7870380,"end":7872286},{"filename":"/include/c++/v1/__type_traits/has_unique_object_representation.h","start":7872286,"end":7873511},{"filename":"/include/c++/v1/__type_traits/has_virtual_destructor.h","start":7873511,"end":7874533},{"filename":"/include/c++/v1/__type_traits/integral_constant.h","start":7874533,"end":7876035},{"filename":"/include/c++/v1/__type_traits/invoke.h","start":7876035,"end":7893455},{"filename":"/include/c++/v1/__type_traits/is_abstract.h","start":7893455,"end":7894400},{"filename":"/include/c++/v1/__type_traits/is_aggregate.h","start":7894400,"end":7895379},{"filename":"/include/c++/v1/__type_traits/is_allocator.h","start":7895379,"end":7896482},{"filename":"/include/c++/v1/__type_traits/is_always_bitcastable.h","start":7896482,"end":7900932},{"filename":"/include/c++/v1/__type_traits/is_arithmetic.h","start":7900932,"end":7902020},{"filename":"/include/c++/v1/__type_traits/is_array.h","start":7902020,"end":7903559},{"filename":"/include/c++/v1/__type_traits/is_assignable.h","start":7903559,"end":7904535},{"filename":"/include/c++/v1/__type_traits/is_base_of.h","start":7904535,"end":7905505},{"filename":"/include/c++/v1/__type_traits/is_bounded_array.h","start":7905505,"end":7906768},{"filename":"/include/c++/v1/__type_traits/is_callable.h","start":7906768,"end":7907837},{"filename":"/include/c++/v1/__type_traits/is_char_like_type.h","start":7907837,"end":7908750},{"filename":"/include/c++/v1/__type_traits/is_class.h","start":7908750,"end":7909674},{"filename":"/include/c++/v1/__type_traits/is_compound.h","start":7909674,"end":7911011},{"filename":"/include/c++/v1/__type_traits/is_const.h","start":7911011,"end":7912288},{"filename":"/include/c++/v1/__type_traits/is_constant_evaluated.h","start":7912288,"end":7913293},{"filename":"/include/c++/v1/__type_traits/is_constructible.h","start":7913293,"end":7914304},{"filename":"/include/c++/v1/__type_traits/is_convertible.h","start":7914304,"end":7919339},{"filename":"/include/c++/v1/__type_traits/is_copy_assignable.h","start":7919339,"end":7920526},{"filename":"/include/c++/v1/__type_traits/is_copy_constructible.h","start":7920526,"end":7921688},{"filename":"/include/c++/v1/__type_traits/is_core_convertible.h","start":7921688,"end":7923020},{"filename":"/include/c++/v1/__type_traits/is_default_constructible.h","start":7923020,"end":7924040},{"filename":"/include/c++/v1/__type_traits/is_destructible.h","start":7924040,"end":7926904},{"filename":"/include/c++/v1/__type_traits/is_empty.h","start":7926904,"end":7927828},{"filename":"/include/c++/v1/__type_traits/is_enum.h","start":7927828,"end":7928745},{"filename":"/include/c++/v1/__type_traits/is_equality_comparable.h","start":7928745,"end":7931979},{"filename":"/include/c++/v1/__type_traits/is_execution_policy.h","start":7931979,"end":7933970},{"filename":"/include/c++/v1/__type_traits/is_final.h","start":7933970,"end":7935049},{"filename":"/include/c++/v1/__type_traits/is_floating_point.h","start":7935049,"end":7936481},{"filename":"/include/c++/v1/__type_traits/is_function.h","start":7936481,"end":7937749},{"filename":"/include/c++/v1/__type_traits/is_fundamental.h","start":7937749,"end":7939216},{"filename":"/include/c++/v1/__type_traits/is_implicitly_default_constructible.h","start":7939216,"end":7941086},{"filename":"/include/c++/v1/__type_traits/is_integral.h","start":7941086,"end":7944344},{"filename":"/include/c++/v1/__type_traits/is_literal_type.h","start":7944344,"end":7945566},{"filename":"/include/c++/v1/__type_traits/is_member_function_pointer.h","start":7945566,"end":7947500},{"filename":"/include/c++/v1/__type_traits/is_member_object_pointer.h","start":7947500,"end":7948990},{"filename":"/include/c++/v1/__type_traits/is_member_pointer.h","start":7948990,"end":7950444},{"filename":"/include/c++/v1/__type_traits/is_move_assignable.h","start":7950444,"end":7951595},{"filename":"/include/c++/v1/__type_traits/is_move_constructible.h","start":7951595,"end":7952693},{"filename":"/include/c++/v1/__type_traits/is_nothrow_assignable.h","start":7952693,"end":7953745},{"filename":"/include/c++/v1/__type_traits/is_nothrow_constructible.h","start":7953745,"end":7956548},{"filename":"/include/c++/v1/__type_traits/is_nothrow_convertible.h","start":7956548,"end":7958261},{"filename":"/include/c++/v1/__type_traits/is_nothrow_copy_assignable.h","start":7958261,"end":7959569},{"filename":"/include/c++/v1/__type_traits/is_nothrow_copy_constructible.h","start":7959569,"end":7961249},{"filename":"/include/c++/v1/__type_traits/is_nothrow_default_constructible.h","start":7961249,"end":7962329},{"filename":"/include/c++/v1/__type_traits/is_nothrow_destructible.h","start":7962329,"end":7964705},{"filename":"/include/c++/v1/__type_traits/is_nothrow_move_assignable.h","start":7964705,"end":7965944},{"filename":"/include/c++/v1/__type_traits/is_nothrow_move_constructible.h","start":7965944,"end":7967504},{"filename":"/include/c++/v1/__type_traits/is_null_pointer.h","start":7967504,"end":7968858},{"filename":"/include/c++/v1/__type_traits/is_object.h","start":7968858,"end":7970409},{"filename":"/include/c++/v1/__type_traits/is_pod.h","start":7970409,"end":7971319},{"filename":"/include/c++/v1/__type_traits/is_pointer.h","start":7971319,"end":7973402},{"filename":"/include/c++/v1/__type_traits/is_polymorphic.h","start":7973402,"end":7974368},{"filename":"/include/c++/v1/__type_traits/is_primary_template.h","start":7974368,"end":7975411},{"filename":"/include/c++/v1/__type_traits/is_reference.h","start":7975411,"end":7977987},{"filename":"/include/c++/v1/__type_traits/is_reference_wrapper.h","start":7977987,"end":7979119},{"filename":"/include/c++/v1/__type_traits/is_referenceable.h","start":7979119,"end":7980408},{"filename":"/include/c++/v1/__type_traits/is_same.h","start":7980408,"end":7981927},{"filename":"/include/c++/v1/__type_traits/is_scalar.h","start":7981927,"end":7983953},{"filename":"/include/c++/v1/__type_traits/is_scoped_enum.h","start":7983953,"end":7985261},{"filename":"/include/c++/v1/__type_traits/is_signed.h","start":7985261,"end":7987027},{"filename":"/include/c++/v1/__type_traits/is_signed_integer.h","start":7987027,"end":7988508},{"filename":"/include/c++/v1/__type_traits/is_specialization.h","start":7988508,"end":7990050},{"filename":"/include/c++/v1/__type_traits/is_standard_layout.h","start":7990050,"end":7991044},{"filename":"/include/c++/v1/__type_traits/is_swappable.h","start":7991044,"end":7995999},{"filename":"/include/c++/v1/__type_traits/is_trivial.h","start":7995999,"end":7996937},{"filename":"/include/c++/v1/__type_traits/is_trivially_assignable.h","start":7996937,"end":7997974},{"filename":"/include/c++/v1/__type_traits/is_trivially_constructible.h","start":7997974,"end":7999073},{"filename":"/include/c++/v1/__type_traits/is_trivially_copy_assignable.h","start":7999073,"end":8000397},{"filename":"/include/c++/v1/__type_traits/is_trivially_copy_constructible.h","start":8000397,"end":8001571},{"filename":"/include/c++/v1/__type_traits/is_trivially_copyable.h","start":8001571,"end":8002773},{"filename":"/include/c++/v1/__type_traits/is_trivially_default_constructible.h","start":8002773,"end":8003867},{"filename":"/include/c++/v1/__type_traits/is_trivially_destructible.h","start":8003867,"end":8005351},{"filename":"/include/c++/v1/__type_traits/is_trivially_lexicographically_comparable.h","start":8005351,"end":8008170},{"filename":"/include/c++/v1/__type_traits/is_trivially_move_assignable.h","start":8008170,"end":8009412},{"filename":"/include/c++/v1/__type_traits/is_trivially_move_constructible.h","start":8009412,"end":8010580},{"filename":"/include/c++/v1/__type_traits/is_unbounded_array.h","start":8010580,"end":8011812},{"filename":"/include/c++/v1/__type_traits/is_union.h","start":8011812,"end":8012736},{"filename":"/include/c++/v1/__type_traits/is_unsigned.h","start":8012736,"end":8014541},{"filename":"/include/c++/v1/__type_traits/is_unsigned_integer.h","start":8014541,"end":8016056},{"filename":"/include/c++/v1/__type_traits/is_valid_expansion.h","start":8016056,"end":8017155},{"filename":"/include/c++/v1/__type_traits/is_void.h","start":8017155,"end":8018423},{"filename":"/include/c++/v1/__type_traits/is_volatile.h","start":8018423,"end":8019742},{"filename":"/include/c++/v1/__type_traits/lazy.h","start":8019742,"end":8020484},{"filename":"/include/c++/v1/__type_traits/make_32_64_or_128_bit.h","start":8020484,"end":8022165},{"filename":"/include/c++/v1/__type_traits/make_const_lvalue_ref.h","start":8022165,"end":8023002},{"filename":"/include/c++/v1/__type_traits/make_signed.h","start":8023002,"end":8025966},{"filename":"/include/c++/v1/__type_traits/make_unsigned.h","start":8025966,"end":8029497},{"filename":"/include/c++/v1/__type_traits/maybe_const.h","start":8029497,"end":8030302},{"filename":"/include/c++/v1/__type_traits/nat.h","start":8030302,"end":8031171},{"filename":"/include/c++/v1/__type_traits/negation.h","start":8031171,"end":8032127},{"filename":"/include/c++/v1/__type_traits/noexcept_move_assign_container.h","start":8032127,"end":8033454},{"filename":"/include/c++/v1/__type_traits/operation_traits.h","start":8033454,"end":8034282},{"filename":"/include/c++/v1/__type_traits/predicate_traits.h","start":8034282,"end":8035108},{"filename":"/include/c++/v1/__type_traits/promote.h","start":8035108,"end":8037780},{"filename":"/include/c++/v1/__type_traits/rank.h","start":8037780,"end":8039211},{"filename":"/include/c++/v1/__type_traits/remove_all_extents.h","start":8039211,"end":8040786},{"filename":"/include/c++/v1/__type_traits/remove_const.h","start":8040786,"end":8042071},{"filename":"/include/c++/v1/__type_traits/remove_const_ref.h","start":8042071,"end":8042942},{"filename":"/include/c++/v1/__type_traits/remove_cv.h","start":8042942,"end":8044258},{"filename":"/include/c++/v1/__type_traits/remove_cvref.h","start":8044258,"end":8045676},{"filename":"/include/c++/v1/__type_traits/remove_extent.h","start":8045676,"end":8047101},{"filename":"/include/c++/v1/__type_traits/remove_pointer.h","start":8047101,"end":8048994},{"filename":"/include/c++/v1/__type_traits/remove_reference.h","start":8048994,"end":8050563},{"filename":"/include/c++/v1/__type_traits/remove_volatile.h","start":8050563,"end":8051896},{"filename":"/include/c++/v1/__type_traits/result_of.h","start":8051896,"end":8053137},{"filename":"/include/c++/v1/__type_traits/strip_signature.h","start":8053137,"end":8056577},{"filename":"/include/c++/v1/__type_traits/type_identity.h","start":8056577,"end":8057603},{"filename":"/include/c++/v1/__type_traits/type_list.h","start":8057603,"end":8058822},{"filename":"/include/c++/v1/__type_traits/underlying_type.h","start":8058822,"end":8060011},{"filename":"/include/c++/v1/__type_traits/unwrap_ref.h","start":8060011,"end":8061552},{"filename":"/include/c++/v1/__type_traits/void_t.h","start":8061552,"end":8062324},{"filename":"/include/c++/v1/__undef_macros","start":8062324,"end":8062882},{"filename":"/include/c++/v1/__utility/as_const.h","start":8062882,"end":8063855},{"filename":"/include/c++/v1/__utility/auto_cast.h","start":8063855,"end":8064585},{"filename":"/include/c++/v1/__utility/cmp.h","start":8064585,"end":8067891},{"filename":"/include/c++/v1/__utility/convert_to_integral.h","start":8067891,"end":8070365},{"filename":"/include/c++/v1/__utility/declval.h","start":8070365,"end":8071350},{"filename":"/include/c++/v1/__utility/exception_guard.h","start":8071350,"end":8077197},{"filename":"/include/c++/v1/__utility/exchange.h","start":8077197,"end":8078494},{"filename":"/include/c++/v1/__utility/forward.h","start":8078494,"end":8079758},{"filename":"/include/c++/v1/__utility/forward_like.h","start":8079758,"end":8081224},{"filename":"/include/c++/v1/__utility/in_place.h","start":8081224,"end":8083050},{"filename":"/include/c++/v1/__utility/integer_sequence.h","start":8083050,"end":8089559},{"filename":"/include/c++/v1/__utility/is_pointer_in_range.h","start":8089559,"end":8092126},{"filename":"/include/c++/v1/__utility/move.h","start":8092126,"end":8093711},{"filename":"/include/c++/v1/__utility/pair.h","start":8093711,"end":8125946},{"filename":"/include/c++/v1/__utility/piecewise_construct.h","start":8125946,"end":8126960},{"filename":"/include/c++/v1/__utility/priority_tag.h","start":8126960,"end":8127752},{"filename":"/include/c++/v1/__utility/rel_ops.h","start":8127752,"end":8128963},{"filename":"/include/c++/v1/__utility/swap.h","start":8128963,"end":8130850},{"filename":"/include/c++/v1/__utility/terminate_on_exception.h","start":8130850,"end":8132043},{"filename":"/include/c++/v1/__utility/to_underlying.h","start":8132043,"end":8133234},{"filename":"/include/c++/v1/__utility/unreachable.h","start":8133234,"end":8134218},{"filename":"/include/c++/v1/__variant/monostate.h","start":8134218,"end":8136176},{"filename":"/include/c++/v1/__verbose_abort","start":8136176,"end":8138883},{"filename":"/include/c++/v1/algorithm","start":8138883,"end":8241368},{"filename":"/include/c++/v1/any","start":8241368,"end":8262684},{"filename":"/include/c++/v1/array","start":8262684,"end":8285377},{"filename":"/include/c++/v1/atomic","start":8285377,"end":8309902},{"filename":"/include/c++/v1/barrier","start":8309902,"end":8321897},{"filename":"/include/c++/v1/bit","start":8321897,"end":8324493},{"filename":"/include/c++/v1/bitset","start":8324493,"end":8364314},{"filename":"/include/c++/v1/cassert","start":8364314,"end":8365176},{"filename":"/include/c++/v1/ccomplex","start":8365176,"end":8365871},{"filename":"/include/c++/v1/cctype","start":8365871,"end":8368381},{"filename":"/include/c++/v1/cerrno","start":8368381,"end":8369551},{"filename":"/include/c++/v1/cfenv","start":8369551,"end":8371961},{"filename":"/include/c++/v1/cfloat","start":8371961,"end":8373889},{"filename":"/include/c++/v1/charconv","start":8373889,"end":8377417},{"filename":"/include/c++/v1/chrono","start":8377417,"end":8412682},{"filename":"/include/c++/v1/cinttypes","start":8412682,"end":8416939},{"filename":"/include/c++/v1/ciso646","start":8416939,"end":8417611},{"filename":"/include/c++/v1/climits","start":8417611,"end":8419023},{"filename":"/include/c++/v1/clocale","start":8419023,"end":8420542},{"filename":"/include/c++/v1/cmath","start":8420542,"end":8447220},{"filename":"/include/c++/v1/codecvt","start":8447220,"end":8469881},{"filename":"/include/c++/v1/compare","start":8469881,"end":8477194},{"filename":"/include/c++/v1/complex","start":8477194,"end":8533033},{"filename":"/include/c++/v1/complex.h","start":8533033,"end":8533773},{"filename":"/include/c++/v1/concepts","start":8533773,"end":8538824},{"filename":"/include/c++/v1/condition_variable","start":8538824,"end":8547223},{"filename":"/include/c++/v1/coroutine","start":8547223,"end":8549119},{"filename":"/include/c++/v1/csetjmp","start":8549119,"end":8550485},{"filename":"/include/c++/v1/csignal","start":8550485,"end":8551823},{"filename":"/include/c++/v1/cstdarg","start":8551823,"end":8553052},{"filename":"/include/c++/v1/cstdbool","start":8553052,"end":8553850},{"filename":"/include/c++/v1/cstddef","start":8553850,"end":8558079},{"filename":"/include/c++/v1/cstdint","start":8558079,"end":8562082},{"filename":"/include/c++/v1/cstdio","start":8562082,"end":8568041},{"filename":"/include/c++/v1/cstdlib","start":8568041,"end":8573735},{"filename":"/include/c++/v1/cstring","start":8573735,"end":8577339},{"filename":"/include/c++/v1/ctgmath","start":8577339,"end":8578066},{"filename":"/include/c++/v1/ctime","start":8578066,"end":8580296},{"filename":"/include/c++/v1/ctype.h","start":8580296,"end":8581489},{"filename":"/include/c++/v1/cuchar","start":8581489,"end":8583665},{"filename":"/include/c++/v1/cwchar","start":8583665,"end":8593883},{"filename":"/include/c++/v1/cwctype","start":8593883,"end":8596678},{"filename":"/include/c++/v1/cxxabi.h","start":8596678,"end":8604076},{"filename":"/include/c++/v1/deque","start":8604076,"end":8713687},{"filename":"/include/c++/v1/errno.h","start":8713687,"end":8718873},{"filename":"/include/c++/v1/exception","start":8718873,"end":8721584},{"filename":"/include/c++/v1/execution","start":8721584,"end":8726758},{"filename":"/include/c++/v1/expected","start":8726758,"end":8728315},{"filename":"/include/c++/v1/experimental/__config","start":8728315,"end":8730286},{"filename":"/include/c++/v1/experimental/__memory","start":8730286,"end":8734312},{"filename":"/include/c++/v1/experimental/deque","start":8734312,"end":8735599},{"filename":"/include/c++/v1/experimental/forward_list","start":8735599,"end":8736949},{"filename":"/include/c++/v1/experimental/iterator","start":8736949,"end":8741426},{"filename":"/include/c++/v1/experimental/list","start":8741426,"end":8742704},{"filename":"/include/c++/v1/experimental/map","start":8742704,"end":8744546},{"filename":"/include/c++/v1/experimental/memory_resource","start":8744546,"end":8759556},{"filename":"/include/c++/v1/experimental/propagate_const","start":8759556,"end":8781652},{"filename":"/include/c++/v1/experimental/regex","start":8781652,"end":8783810},{"filename":"/include/c++/v1/experimental/set","start":8783810,"end":8785584},{"filename":"/include/c++/v1/experimental/simd","start":8785584,"end":8848136},{"filename":"/include/c++/v1/experimental/string","start":8848136,"end":8850355},{"filename":"/include/c++/v1/experimental/type_traits","start":8850355,"end":8855924},{"filename":"/include/c++/v1/experimental/unordered_map","start":8855924,"end":8858268},{"filename":"/include/c++/v1/experimental/unordered_set","start":8858268,"end":8860230},{"filename":"/include/c++/v1/experimental/utility","start":8860230,"end":8861342},{"filename":"/include/c++/v1/experimental/vector","start":8861342,"end":8862639},{"filename":"/include/c++/v1/ext/__hash","start":8862639,"end":8865927},{"filename":"/include/c++/v1/ext/hash_map","start":8865927,"end":8905315},{"filename":"/include/c++/v1/ext/hash_set","start":8905315,"end":8930869},{"filename":"/include/c++/v1/fenv.h","start":8930869,"end":8932776},{"filename":"/include/c++/v1/filesystem","start":8932776,"end":8955222},{"filename":"/include/c++/v1/float.h","start":8955222,"end":8956887},{"filename":"/include/c++/v1/format","start":8956887,"end":8965407},{"filename":"/include/c++/v1/forward_list","start":8965407,"end":9034868},{"filename":"/include/c++/v1/fstream","start":9034868,"end":9090637},{"filename":"/include/c++/v1/functional","start":9090637,"end":9109664},{"filename":"/include/c++/v1/future","start":9109664,"end":9180473},{"filename":"/include/c++/v1/initializer_list","start":9180473,"end":9183400},{"filename":"/include/c++/v1/inttypes.h","start":9183400,"end":9187336},{"filename":"/include/c++/v1/iomanip","start":9187336,"end":9205836},{"filename":"/include/c++/v1/ios","start":9205836,"end":9232364},{"filename":"/include/c++/v1/iosfwd","start":9232364,"end":9238115},{"filename":"/include/c++/v1/iostream","start":9238115,"end":9239698},{"filename":"/include/c++/v1/istream","start":9239698,"end":9288343},{"filename":"/include/c++/v1/iterator","start":9288343,"end":9319891},{"filename":"/include/c++/v1/latch","start":9319891,"end":9323734},{"filename":"/include/c++/v1/libcxx.imp","start":9323734,"end":9327465},{"filename":"/include/c++/v1/limits","start":9327465,"end":9368584},{"filename":"/include/c++/v1/limits.h","start":9368584,"end":9370211},{"filename":"/include/c++/v1/list","start":9370211,"end":9442004},{"filename":"/include/c++/v1/locale","start":9442004,"end":9597497},{"filename":"/include/c++/v1/locale.h","start":9597497,"end":9598474},{"filename":"/include/c++/v1/map","start":9598474,"end":9696140},{"filename":"/include/c++/v1/math.h","start":9696140,"end":9748284},{"filename":"/include/c++/v1/mdspan","start":9748284,"end":9762258},{"filename":"/include/c++/v1/memory","start":9762258,"end":9801962},{"filename":"/include/c++/v1/memory_resource","start":9801962,"end":9804031},{"filename":"/include/c++/v1/module.modulemap.in","start":9804031,"end":9914940},{"filename":"/include/c++/v1/mutex","start":9914940,"end":9933382},{"filename":"/include/c++/v1/new","start":9933382,"end":9947830},{"filename":"/include/c++/v1/numbers","start":9947830,"end":9954833},{"filename":"/include/c++/v1/numeric","start":9954833,"end":9962444},{"filename":"/include/c++/v1/optional","start":9962444,"end":10018736},{"filename":"/include/c++/v1/ostream","start":10018736,"end":10057095},{"filename":"/include/c++/v1/print","start":10057095,"end":10072941},{"filename":"/include/c++/v1/queue","start":10072941,"end":10115115},{"filename":"/include/c++/v1/random","start":10115115,"end":10172185},{"filename":"/include/c++/v1/ranges","start":10172185,"end":10185447},{"filename":"/include/c++/v1/ratio","start":10185447,"end":10202203},{"filename":"/include/c++/v1/regex","start":10202203,"end":10440266},{"filename":"/include/c++/v1/scoped_allocator","start":10440266,"end":10468077},{"filename":"/include/c++/v1/semaphore","start":10468077,"end":10474733},{"filename":"/include/c++/v1/set","start":10474733,"end":10544040},{"filename":"/include/c++/v1/setjmp.h","start":10544040,"end":10544887},{"filename":"/include/c++/v1/shared_mutex","start":10544887,"end":10560439},{"filename":"/include/c++/v1/source_location","start":10560439,"end":10563610},{"filename":"/include/c++/v1/span","start":10563610,"end":10588016},{"filename":"/include/c++/v1/sstream","start":10588016,"end":10637463},{"filename":"/include/c++/v1/stack","start":10637463,"end":10652333},{"filename":"/include/c++/v1/stdatomic.h","start":10652333,"end":10662955},{"filename":"/include/c++/v1/stdbool.h","start":10662955,"end":10663816},{"filename":"/include/c++/v1/stddef.h","start":10663816,"end":10664949},{"filename":"/include/c++/v1/stdexcept","start":10664949,"end":10673788},{"filename":"/include/c++/v1/stdint.h","start":10673788,"end":10676161},{"filename":"/include/c++/v1/stdio.h","start":10676161,"end":10679734},{"filename":"/include/c++/v1/stdlib.h","start":10679734,"end":10684873},{"filename":"/include/c++/v1/stop_token","start":10684873,"end":10686197},{"filename":"/include/c++/v1/streambuf","start":10686197,"end":10700686},{"filename":"/include/c++/v1/string","start":10700686,"end":10895585},{"filename":"/include/c++/v1/string.h","start":10895585,"end":10899639},{"filename":"/include/c++/v1/string_view","start":10899639,"end":10944164},{"filename":"/include/c++/v1/strstream","start":10944164,"end":10955960},{"filename":"/include/c++/v1/system_error","start":10955960,"end":10962030},{"filename":"/include/c++/v1/tgmath.h","start":10962030,"end":10962779},{"filename":"/include/c++/v1/thread","start":10962779,"end":10966031},{"filename":"/include/c++/v1/tuple","start":10966031,"end":11042771},{"filename":"/include/c++/v1/type_traits","start":11042771,"end":11071618},{"filename":"/include/c++/v1/typeindex","start":11071618,"end":11075200},{"filename":"/include/c++/v1/typeinfo","start":11075200,"end":11089741},{"filename":"/include/c++/v1/uchar.h","start":11089741,"end":11091323},{"filename":"/include/c++/v1/unordered_map","start":11091323,"end":11212810},{"filename":"/include/c++/v1/unordered_set","start":11212810,"end":11301071},{"filename":"/include/c++/v1/utility","start":11301071,"end":11312648},{"filename":"/include/c++/v1/valarray","start":11312648,"end":11448272},{"filename":"/include/c++/v1/variant","start":11448272,"end":11516735},{"filename":"/include/c++/v1/vector","start":11516735,"end":11644475},{"filename":"/include/c++/v1/version","start":11644475,"end":11675150},{"filename":"/include/c++/v1/wchar.h","start":11675150,"end":11684090},{"filename":"/include/c++/v1/wctype.h","start":11684090,"end":11686590},{"filename":"/include/compat/arm_neon.h","start":11686590,"end":14231303},{"filename":"/include/compat/avxintrin.h","start":14231303,"end":14245402},{"filename":"/include/compat/emmintrin.h","start":14245402,"end":14292190},{"filename":"/include/compat/immintrin.h","start":14292190,"end":14292894},{"filename":"/include/compat/malloc.h","start":14292894,"end":14293982},{"filename":"/include/compat/math.h","start":14293982,"end":14294178},{"filename":"/include/compat/netdb.h","start":14294178,"end":14294715},{"filename":"/include/compat/nmmintrin.h","start":14294715,"end":14295655},{"filename":"/include/compat/pmmintrin.h","start":14295655,"end":14298599},{"filename":"/include/compat/smmintrin.h","start":14298599,"end":14316185},{"filename":"/include/compat/stdarg.h","start":14316185,"end":14316385},{"filename":"/include/compat/stdlib.h","start":14316385,"end":14316584},{"filename":"/include/compat/string.h","start":14316584,"end":14316796},{"filename":"/include/compat/sys/random.h","start":14316796,"end":14317293},{"filename":"/include/compat/sys/socketvar.h","start":14317293,"end":14317451},{"filename":"/include/compat/sys/stat.h","start":14317451,"end":14317863},{"filename":"/include/compat/sys/timeb.h","start":14317863,"end":14318525},{"filename":"/include/compat/sys/unistd.h","start":14318525,"end":14318545},{"filename":"/include/compat/time.h","start":14318545,"end":14318769},{"filename":"/include/compat/tmmintrin.h","start":14318769,"end":14324338},{"filename":"/include/compat/xlocale.h","start":14324338,"end":14324746},{"filename":"/include/compat/xmmintrin.h","start":14324746,"end":14346831},{"filename":"/include/complex.h","start":14346831,"end":14350536},{"filename":"/include/cpio.h","start":14350536,"end":14351087},{"filename":"/include/crt_arch.h","start":14351087,"end":14351087},{"filename":"/include/crypt.h","start":14351087,"end":14351364},{"filename":"/include/ctype.h","start":14351364,"end":14353151},{"filename":"/include/dirent.h","start":14353151,"end":14354862},{"filename":"/include/dlfcn.h","start":14354862,"end":14355665},{"filename":"/include/elf.h","start":14355665,"end":14436376},{"filename":"/include/emscripten.h","start":14436376,"end":14436411},{"filename":"/include/emscripten/atomic.h","start":14436411,"end":14452251},{"filename":"/include/emscripten/bind.h","start":14452251,"end":14519539},{"filename":"/include/emscripten/console.h","start":14519539,"end":14522583},{"filename":"/include/emscripten/dom_pk_codes.h","start":14522583,"end":14534525},{"filename":"/include/emscripten/em_asm.h","start":14534525,"end":14548636},{"filename":"/include/emscripten/em_js.h","start":14548636,"end":14551927},{"filename":"/include/emscripten/em_macros.h","start":14551927,"end":14553790},{"filename":"/include/emscripten/em_math.h","start":14553790,"end":14557785},{"filename":"/include/emscripten/em_types.h","start":14557785,"end":14559567},{"filename":"/include/emscripten/emmalloc.h","start":14559567,"end":14566482},{"filename":"/include/emscripten/emscripten.h","start":14566482,"end":14576151},{"filename":"/include/emscripten/eventloop.h","start":14576151,"end":14577421},{"filename":"/include/emscripten/exports.h","start":14577421,"end":14578114},{"filename":"/include/emscripten/fetch.h","start":14578114,"end":14588606},{"filename":"/include/emscripten/fiber.h","start":14588606,"end":14590485},{"filename":"/include/emscripten/heap.h","start":14590485,"end":14592152},{"filename":"/include/emscripten/html5.h","start":14592152,"end":14622967},{"filename":"/include/emscripten/html5_webgl.h","start":14622967,"end":14633852},{"filename":"/include/emscripten/html5_webgpu.h","start":14633852,"end":14635701},{"filename":"/include/emscripten/key_codes.h","start":14635701,"end":14643893},{"filename":"/include/emscripten/posix_socket.h","start":14643893,"end":14644116},{"filename":"/include/emscripten/promise.h","start":14644116,"end":14651576},{"filename":"/include/emscripten/proxying.h","start":14651576,"end":14662835},{"filename":"/include/emscripten/stack.h","start":14662835,"end":14664605},{"filename":"/include/emscripten/threading.h","start":14664605,"end":14669800},{"filename":"/include/emscripten/threading_legacy.h","start":14669800,"end":14693851},{"filename":"/include/emscripten/trace.h","start":14693851,"end":14697373},{"filename":"/include/emscripten/val.h","start":14697373,"end":14721003},{"filename":"/include/emscripten/version.h","start":14721003,"end":14721150},{"filename":"/include/emscripten/wasm_worker.h","start":14721150,"end":14738816},{"filename":"/include/emscripten/wasmfs.h","start":14738816,"end":14743002},{"filename":"/include/emscripten/webaudio.h","start":14743002,"end":14752274},{"filename":"/include/emscripten/websocket.h","start":14752274,"end":14762240},{"filename":"/include/emscripten/wget.h","start":14762240,"end":14764168},{"filename":"/include/emscripten/wire.h","start":14764168,"end":14776541},{"filename":"/include/endian.h","start":14776541,"end":14778499},{"filename":"/include/err.h","start":14778499,"end":14778971},{"filename":"/include/errno.h","start":14778971,"end":14779340},{"filename":"/include/fakesdl/SDL.h","start":14779340,"end":14779412},{"filename":"/include/fakesdl/SDL_assert.h","start":14779412,"end":14779484},{"filename":"/include/fakesdl/SDL_atomic.h","start":14779484,"end":14779556},{"filename":"/include/fakesdl/SDL_audio.h","start":14779556,"end":14779628},{"filename":"/include/fakesdl/SDL_blendmode.h","start":14779628,"end":14779700},{"filename":"/include/fakesdl/SDL_clipboard.h","start":14779700,"end":14779772},{"filename":"/include/fakesdl/SDL_compat.h","start":14779772,"end":14779844},{"filename":"/include/fakesdl/SDL_config.h","start":14779844,"end":14779916},{"filename":"/include/fakesdl/SDL_copying.h","start":14779916,"end":14779988},{"filename":"/include/fakesdl/SDL_cpuinfo.h","start":14779988,"end":14780060},{"filename":"/include/fakesdl/SDL_endian.h","start":14780060,"end":14780132},{"filename":"/include/fakesdl/SDL_error.h","start":14780132,"end":14780204},{"filename":"/include/fakesdl/SDL_events.h","start":14780204,"end":14780276},{"filename":"/include/fakesdl/SDL_gesture.h","start":14780276,"end":14780348},{"filename":"/include/fakesdl/SDL_gfxPrimitives.h","start":14780348,"end":14780420},{"filename":"/include/fakesdl/SDL_haptic.h","start":14780420,"end":14780492},{"filename":"/include/fakesdl/SDL_hints.h","start":14780492,"end":14780564},{"filename":"/include/fakesdl/SDL_image.h","start":14780564,"end":14780636},{"filename":"/include/fakesdl/SDL_input.h","start":14780636,"end":14780708},{"filename":"/include/fakesdl/SDL_joystick.h","start":14780708,"end":14780780},{"filename":"/include/fakesdl/SDL_keyboard.h","start":14780780,"end":14780852},{"filename":"/include/fakesdl/SDL_keycode.h","start":14780852,"end":14780924},{"filename":"/include/fakesdl/SDL_loadso.h","start":14780924,"end":14780996},{"filename":"/include/fakesdl/SDL_log.h","start":14780996,"end":14781068},{"filename":"/include/fakesdl/SDL_main.h","start":14781068,"end":14781140},{"filename":"/include/fakesdl/SDL_mixer.h","start":14781140,"end":14781212},{"filename":"/include/fakesdl/SDL_mouse.h","start":14781212,"end":14781284},{"filename":"/include/fakesdl/SDL_mutex.h","start":14781284,"end":14781356},{"filename":"/include/fakesdl/SDL_name.h","start":14781356,"end":14781428},{"filename":"/include/fakesdl/SDL_opengl.h","start":14781428,"end":14781500},{"filename":"/include/fakesdl/SDL_opengles.h","start":14781500,"end":14781572},{"filename":"/include/fakesdl/SDL_opengles2.h","start":14781572,"end":14781644},{"filename":"/include/fakesdl/SDL_pixels.h","start":14781644,"end":14781716},{"filename":"/include/fakesdl/SDL_platform.h","start":14781716,"end":14781788},{"filename":"/include/fakesdl/SDL_power.h","start":14781788,"end":14781860},{"filename":"/include/fakesdl/SDL_quit.h","start":14781860,"end":14781932},{"filename":"/include/fakesdl/SDL_rect.h","start":14781932,"end":14782004},{"filename":"/include/fakesdl/SDL_render.h","start":14782004,"end":14782076},{"filename":"/include/fakesdl/SDL_revision.h","start":14782076,"end":14782148},{"filename":"/include/fakesdl/SDL_rotozoom.h","start":14782148,"end":14782220},{"filename":"/include/fakesdl/SDL_rwops.h","start":14782220,"end":14782292},{"filename":"/include/fakesdl/SDL_scancode.h","start":14782292,"end":14782364},{"filename":"/include/fakesdl/SDL_shape.h","start":14782364,"end":14782436},{"filename":"/include/fakesdl/SDL_stdinc.h","start":14782436,"end":14782508},{"filename":"/include/fakesdl/SDL_surface.h","start":14782508,"end":14782580},{"filename":"/include/fakesdl/SDL_syswm.h","start":14782580,"end":14782652},{"filename":"/include/fakesdl/SDL_thread.h","start":14782652,"end":14782724},{"filename":"/include/fakesdl/SDL_timer.h","start":14782724,"end":14782796},{"filename":"/include/fakesdl/SDL_touch.h","start":14782796,"end":14782868},{"filename":"/include/fakesdl/SDL_ttf.h","start":14782868,"end":14782940},{"filename":"/include/fakesdl/SDL_types.h","start":14782940,"end":14783012},{"filename":"/include/fakesdl/SDL_version.h","start":14783012,"end":14783084},{"filename":"/include/fakesdl/SDL_video.h","start":14783084,"end":14783156},{"filename":"/include/fcntl.h","start":14783156,"end":14787991},{"filename":"/include/features.h","start":14787991,"end":14789114},{"filename":"/include/fenv.h","start":14789114,"end":14789563},{"filename":"/include/float.h","start":14789563,"end":14790623},{"filename":"/include/fmtmsg.h","start":14790623,"end":14791364},{"filename":"/include/fnmatch.h","start":14791364,"end":14791750},{"filename":"/include/fp_arch.h","start":14791750,"end":14791750},{"filename":"/include/ftw.h","start":14791750,"end":14792404},{"filename":"/include/getopt.h","start":14792404,"end":14792963},{"filename":"/include/glob.h","start":14792963,"end":14793864},{"filename":"/include/grp.h","start":14793864,"end":14794889},{"filename":"/include/iconv.h","start":14794889,"end":14795274},{"filename":"/include/ifaddrs.h","start":14795274,"end":14795866},{"filename":"/include/inttypes.h","start":14795866,"end":14800684},{"filename":"/include/iso646.h","start":14800684,"end":14800951},{"filename":"/include/kstat.h","start":14800951,"end":14800993},{"filename":"/include/langinfo.h","start":14800993,"end":14802813},{"filename":"/include/lastlog.h","start":14802813,"end":14802831},{"filename":"/include/libgen.h","start":14802831,"end":14802992},{"filename":"/include/libintl.h","start":14802992,"end":14803873},{"filename":"/include/libunwind.h","start":14803873,"end":14836972},{"filename":"/include/libunwind.modulemap","start":14836972,"end":14837218},{"filename":"/include/limits.h","start":14837218,"end":14841397},{"filename":"/include/link.h","start":14841397,"end":14842318},{"filename":"/include/locale.h","start":14842318,"end":14844051},{"filename":"/include/mach-o/compact_unwind_encoding.h","start":14844051,"end":14863142},{"filename":"/include/mach-o/compact_unwind_encoding.modulemap","start":14863142,"end":14863240},{"filename":"/include/malloc.h","start":14863240,"end":14863602},{"filename":"/include/math.h","start":14863602,"end":14875093},{"filename":"/include/memory.h","start":14875093,"end":14875113},{"filename":"/include/mntent.h","start":14875113,"end":14875950},{"filename":"/include/monetary.h","start":14875950,"end":14876345},{"filename":"/include/mqueue.h","start":14876345,"end":14877447},{"filename":"/include/net/ethernet.h","start":14877447,"end":14878624},{"filename":"/include/net/if.h","start":14878624,"end":14882112},{"filename":"/include/net/if_arp.h","start":14882112,"end":14885036},{"filename":"/include/net/route.h","start":14885036,"end":14887664},{"filename":"/include/netdb.h","start":14887664,"end":14891665},{"filename":"/include/netinet/ether.h","start":14891665,"end":14892208},{"filename":"/include/netinet/icmp6.h","start":14892208,"end":14900840},{"filename":"/include/netinet/if_ether.h","start":14900840,"end":14904515},{"filename":"/include/netinet/igmp.h","start":14904515,"end":14905545},{"filename":"/include/netinet/in.h","start":14905545,"end":14917726},{"filename":"/include/netinet/in_systm.h","start":14917726,"end":14917871},{"filename":"/include/netinet/ip.h","start":14917871,"end":14922232},{"filename":"/include/netinet/ip6.h","start":14922232,"end":14924906},{"filename":"/include/netinet/ip_icmp.h","start":14924906,"end":14929566},{"filename":"/include/netinet/tcp.h","start":14929566,"end":14936004},{"filename":"/include/netinet/udp.h","start":14936004,"end":14936763},{"filename":"/include/netpacket/packet.h","start":14936763,"end":14938142},{"filename":"/include/nl_types.h","start":14938142,"end":14938458},{"filename":"/include/paths.h","start":14938458,"end":14939360},{"filename":"/include/poll.h","start":14939360,"end":14940294},{"filename":"/include/pthread.h","start":14940294,"end":14949661},{"filename":"/include/pthread_arch.h","start":14949661,"end":14949736},{"filename":"/include/pty.h","start":14949736,"end":14950048},{"filename":"/include/pwd.h","start":14950048,"end":14950947},{"filename":"/include/regex.h","start":14950947,"end":14952174},{"filename":"/include/resolv.h","start":14952174,"end":14955761},{"filename":"/include/sanitizer/allocator_interface.h","start":14955761,"end":14960082},{"filename":"/include/sanitizer/asan_interface.h","start":14960082,"end":14972709},{"filename":"/include/sanitizer/common_interface_defs.h","start":14972709,"end":14992065},{"filename":"/include/sanitizer/coverage_interface.h","start":14992065,"end":14993119},{"filename":"/include/sanitizer/dfsan_interface.h","start":14993119,"end":15002344},{"filename":"/include/sanitizer/hwasan_interface.h","start":15002344,"end":15006675},{"filename":"/include/sanitizer/linux_syscall_hooks.h","start":15006675,"end":15225180},{"filename":"/include/sanitizer/lsan_interface.h","start":15225180,"end":15229115},{"filename":"/include/sanitizer/memprof_interface.h","start":15229115,"end":15231286},{"filename":"/include/sanitizer/msan_interface.h","start":15231286,"end":15236551},{"filename":"/include/sanitizer/netbsd_syscall_hooks.h","start":15236551,"end":15592244},{"filename":"/include/sanitizer/scudo_interface.h","start":15592244,"end":15593735},{"filename":"/include/sanitizer/tsan_interface.h","start":15593735,"end":15607428},{"filename":"/include/sanitizer/tsan_interface_atomic.h","start":15607428,"end":15617141},{"filename":"/include/sanitizer/ubsan_interface.h","start":15617141,"end":15618171},{"filename":"/include/sched.h","start":15618171,"end":15622570},{"filename":"/include/scsi/scsi.h","start":15622570,"end":15626475},{"filename":"/include/scsi/scsi_ioctl.h","start":15626475,"end":15626797},{"filename":"/include/scsi/sg.h","start":15626797,"end":15629882},{"filename":"/include/search.h","start":15629882,"end":15631260},{"filename":"/include/semaphore.h","start":15631260,"end":15632070},{"filename":"/include/setjmp.h","start":15632070,"end":15633281},{"filename":"/include/shadow.h","start":15633281,"end":15634002},{"filename":"/include/signal.h","start":15634002,"end":15641567},{"filename":"/include/spawn.h","start":15641567,"end":15644480},{"filename":"/include/stdalign.h","start":15644480,"end":15644889},{"filename":"/include/stdarg.h","start":15644889,"end":15645240},{"filename":"/include/stdbool.h","start":15645240,"end":15645407},{"filename":"/include/stdc-predef.h","start":15645407,"end":15645634},{"filename":"/include/stddef.h","start":15645634,"end":15646209},{"filename":"/include/stdint.h","start":15646209,"end":15648787},{"filename":"/include/stdio.h","start":15648787,"end":15654884},{"filename":"/include/stdio_ext.h","start":15654884,"end":15655495},{"filename":"/include/stdlib.h","start":15655495,"end":15660398},{"filename":"/include/stdnoreturn.h","start":15660398,"end":15660527},{"filename":"/include/string.h","start":15660527,"end":15663613},{"filename":"/include/strings.h","start":15663613,"end":15664577},{"filename":"/include/stropts.h","start":15664577,"end":15666976},{"filename":"/include/sys/acct.h","start":15666976,"end":15668067},{"filename":"/include/sys/dir.h","start":15668067,"end":15668109},{"filename":"/include/sys/errno.h","start":15668109,"end":15668195},{"filename":"/include/sys/fcntl.h","start":15668195,"end":15668281},{"filename":"/include/sys/file.h","start":15668281,"end":15668542},{"filename":"/include/sys/ioctl.h","start":15668542,"end":15671625},{"filename":"/include/sys/ipc.h","start":15671625,"end":15672276},{"filename":"/include/sys/membarrier.h","start":15672276,"end":15672930},{"filename":"/include/sys/mman.h","start":15672930,"end":15676514},{"filename":"/include/sys/mount.h","start":15676514,"end":15678441},{"filename":"/include/sys/msg.h","start":15678441,"end":15679378},{"filename":"/include/sys/mtio.h","start":15679378,"end":15684569},{"filename":"/include/sys/param.h","start":15684569,"end":15685324},{"filename":"/include/sys/poll.h","start":15685324,"end":15685407},{"filename":"/include/sys/procfs.h","start":15685407,"end":15686555},{"filename":"/include/sys/random.h","start":15686555,"end":15686879},{"filename":"/include/sys/reg.h","start":15686879,"end":15686989},{"filename":"/include/sys/resource.h","start":15686989,"end":15689206},{"filename":"/include/sys/select.h","start":15689206,"end":15690538},{"filename":"/include/sys/sem.h","start":15690538,"end":15691695},{"filename":"/include/sys/shm.h","start":15691695,"end":15693139},{"filename":"/include/sys/signal.h","start":15693139,"end":15693228},{"filename":"/include/sys/socket.h","start":15693228,"end":15704527},{"filename":"/include/sys/stat.h","start":15704527,"end":15707601},{"filename":"/include/sys/statfs.h","start":15707601,"end":15708085},{"filename":"/include/sys/statvfs.h","start":15708085,"end":15709244},{"filename":"/include/sys/stropts.h","start":15709244,"end":15709265},{"filename":"/include/sys/syscall.h","start":15709265,"end":15709346},{"filename":"/include/sys/sysinfo.h","start":15709346,"end":15709980},{"filename":"/include/sys/syslog.h","start":15709980,"end":1571e4},{"filename":"/include/sys/sysmacros.h","start":1571e4,"end":15710394},{"filename":"/include/sys/termios.h","start":15710394,"end":15710486},{"filename":"/include/sys/time.h","start":15710486,"end":15712740},{"filename":"/include/sys/timeb.h","start":15712740,"end":15713096},{"filename":"/include/sys/times.h","start":15713096,"end":15713397},{"filename":"/include/sys/ttydefaults.h","start":15713397,"end":15714228},{"filename":"/include/sys/types.h","start":15714228,"end":15716114},{"filename":"/include/sys/ucontext.h","start":15716114,"end":15716136},{"filename":"/include/sys/uio.h","start":15716136,"end":15717179},{"filename":"/include/sys/un.h","start":15717179,"end":15717651},{"filename":"/include/sys/user.h","start":15717651,"end":15717851},{"filename":"/include/sys/utsname.h","start":15717851,"end":15718223},{"filename":"/include/sys/vfs.h","start":15718223,"end":15718247},{"filename":"/include/sys/wait.h","start":15718247,"end":15719693},{"filename":"/include/sys/xattr.h","start":15719693,"end":15720614},{"filename":"/include/syscall.h","start":15720614,"end":15720639},{"filename":"/include/syscall_arch.h","start":15720639,"end":15727432},{"filename":"/include/sysexits.h","start":15727432,"end":15727862},{"filename":"/include/syslog.h","start":15727862,"end":15730606},{"filename":"/include/tar.h","start":15730606,"end":15731184},{"filename":"/include/termios.h","start":15731184,"end":15732152},{"filename":"/include/tgmath.h","start":15732152,"end":15740710},{"filename":"/include/threads.h","start":15740710,"end":15742505},{"filename":"/include/time.h","start":15742505,"end":15746943},{"filename":"/include/uchar.h","start":15746943,"end":15747572},{"filename":"/include/ucontext.h","start":15747572,"end":15748067},{"filename":"/include/ulimit.h","start":15748067,"end":15748250},{"filename":"/include/unistd.h","start":15748250,"end":15762494},{"filename":"/include/unwind.h","start":15762494,"end":15770017},{"filename":"/include/unwind_arm_ehabi.h","start":15770017,"end":15775613},{"filename":"/include/unwind_itanium.h","start":15775613,"end":15778437},{"filename":"/include/utime.h","start":15778437,"end":15778780},{"filename":"/include/utmp.h","start":15778780,"end":15779778},{"filename":"/include/utmpx.h","start":15779778,"end":15781080},{"filename":"/include/uuid/uuid.h","start":15781080,"end":15781896},{"filename":"/include/values.h","start":15781896,"end":15782742},{"filename":"/include/wait.h","start":15782742,"end":15782829},{"filename":"/include/wasi/api.h","start":15782829,"end":15850047},{"filename":"/include/wasi/wasi-helpers.h","start":15850047,"end":15850913},{"filename":"/include/wasm_simd128.h","start":15850913,"end":15851340},{"filename":"/include/wchar.h","start":15851340,"end":15858243},{"filename":"/include/wctype.h","start":15858243,"end":15860158},{"filename":"/include/webgl/webgl1.h","start":15860158,"end":15874958},{"filename":"/include/webgl/webgl1_ext.h","start":15874958,"end":15896226},{"filename":"/include/webgl/webgl2.h","start":15896226,"end":15911106},{"filename":"/include/webgl/webgl2_ext.h","start":15911106,"end":15914550},{"filename":"/include/webgl/webgl_api.h","start":15914550,"end":15914682},{"filename":"/include/webgpu/README.md","start":15914682,"end":15918700},{"filename":"/include/webgpu/webgpu.h","start":15918700,"end":16021175},{"filename":"/include/webgpu/webgpu_cpp.h","start":16021175,"end":16084984},{"filename":"/include/webgpu/webgpu_cpp_chained_struct.h","start":16084984,"end":16085712},{"filename":"/include/webgpu/webgpu_enum_class_bitmasks.h","start":16085712,"end":16091785},{"filename":"/include/wordexp.h","start":16091785,"end":16092435},{"filename":"/lib/clang/18/include/__clang_cuda_builtin_vars.h","start":16092435,"end":16097327},{"filename":"/lib/clang/18/include/__clang_cuda_cmath.h","start":16097327,"end":16115820},{"filename":"/lib/clang/18/include/__clang_cuda_complex_builtins.h","start":16115820,"end":16125401},{"filename":"/lib/clang/18/include/__clang_cuda_device_functions.h","start":16125401,"end":16183463},{"filename":"/lib/clang/18/include/__clang_cuda_intrinsics.h","start":16183463,"end":16214107},{"filename":"/lib/clang/18/include/__clang_cuda_libdevice_declares.h","start":16214107,"end":16236521},{"filename":"/lib/clang/18/include/__clang_cuda_math.h","start":16236521,"end":16252891},{"filename":"/lib/clang/18/include/__clang_cuda_math_forward_declares.h","start":16252891,"end":16261360},{"filename":"/lib/clang/18/include/__clang_cuda_runtime_wrapper.h","start":16261360,"end":16279387},{"filename":"/lib/clang/18/include/__clang_cuda_texture_intrinsics.h","start":16279387,"end":16312011},{"filename":"/lib/clang/18/include/__clang_hip_cmath.h","start":16312011,"end":16338980},{"filename":"/lib/clang/18/include/__clang_hip_libdevice_declares.h","start":16338980,"end":16359326},{"filename":"/lib/clang/18/include/__clang_hip_math.h","start":16359326,"end":16392658},{"filename":"/lib/clang/18/include/__clang_hip_runtime_wrapper.h","start":16392658,"end":16397720},{"filename":"/lib/clang/18/include/__clang_hip_stdlib.h","start":16397720,"end":16398943},{"filename":"/lib/clang/18/include/__stdarg___gnuc_va_list.h","start":16398943,"end":16399410},{"filename":"/lib/clang/18/include/__stdarg___va_copy.h","start":16399410,"end":16399855},{"filename":"/lib/clang/18/include/__stdarg_va_arg.h","start":16399855,"end":16400648},{"filename":"/lib/clang/18/include/__stdarg_va_copy.h","start":16400648,"end":16401099},{"filename":"/lib/clang/18/include/__stdarg_va_list.h","start":16401099,"end":16401547},{"filename":"/lib/clang/18/include/__stddef_max_align_t.h","start":16401547,"end":16402404},{"filename":"/lib/clang/18/include/__stddef_null.h","start":16402404,"end":16403267},{"filename":"/lib/clang/18/include/__stddef_nullptr_t.h","start":16403267,"end":16403963},{"filename":"/lib/clang/18/include/__stddef_offsetof.h","start":16403963,"end":16404407},{"filename":"/lib/clang/18/include/__stddef_ptrdiff_t.h","start":16404407,"end":16404862},{"filename":"/lib/clang/18/include/__stddef_rsize_t.h","start":16404862,"end":16405308},{"filename":"/lib/clang/18/include/__stddef_size_t.h","start":16405308,"end":16405751},{"filename":"/lib/clang/18/include/__stddef_unreachable.h","start":16405751,"end":16406196},{"filename":"/lib/clang/18/include/__stddef_wchar_t.h","start":16406196,"end":16406785},{"filename":"/lib/clang/18/include/__stddef_wint_t.h","start":16406785,"end":16407228},{"filename":"/lib/clang/18/include/__wmmintrin_aes.h","start":16407228,"end":16412497},{"filename":"/lib/clang/18/include/__wmmintrin_pclmul.h","start":16412497,"end":16414533},{"filename":"/lib/clang/18/include/adcintrin.h","start":16414533,"end":16419891},{"filename":"/lib/clang/18/include/adxintrin.h","start":16419891,"end":16423112},{"filename":"/lib/clang/18/include/altivec.h","start":16423112,"end":17138296},{"filename":"/lib/clang/18/include/ammintrin.h","start":17138296,"end":17146035},{"filename":"/lib/clang/18/include/amxcomplexintrin.h","start":17146035,"end":17153008},{"filename":"/lib/clang/18/include/amxfp16intrin.h","start":17153008,"end":17154870},{"filename":"/lib/clang/18/include/amxintrin.h","start":17154870,"end":17176492},{"filename":"/lib/clang/18/include/arm64intr.h","start":17176492,"end":17177485},{"filename":"/lib/clang/18/include/arm_acle.h","start":17177485,"end":17207272},{"filename":"/lib/clang/18/include/arm_cmse.h","start":17207272,"end":17213629},{"filename":"/lib/clang/18/include/arm_neon_sve_bridge.h","start":17213629,"end":17223337},{"filename":"/lib/clang/18/include/armintr.h","start":17223337,"end":17224180},{"filename":"/lib/clang/18/include/avx2intrin.h","start":17224180,"end":17416336},{"filename":"/lib/clang/18/include/avx512bf16intrin.h","start":17416336,"end":17427168},{"filename":"/lib/clang/18/include/avx512bitalgintrin.h","start":17427168,"end":17429792},{"filename":"/lib/clang/18/include/avx512bwintrin.h","start":17429792,"end":17507637},{"filename":"/lib/clang/18/include/avx512cdintrin.h","start":17507637,"end":17511964},{"filename":"/lib/clang/18/include/avx512dqintrin.h","start":17511964,"end":17572251},{"filename":"/lib/clang/18/include/avx512erintrin.h","start":17572251,"end":17584366},{"filename":"/lib/clang/18/include/avx512fintrin.h","start":17584366,"end":17976430},{"filename":"/lib/clang/18/include/avx512fp16intrin.h","start":17976430,"end":18137017},{"filename":"/lib/clang/18/include/avx512ifmaintrin.h","start":18137017,"end":18139677},{"filename":"/lib/clang/18/include/avx512ifmavlintrin.h","start":18139677,"end":18144389},{"filename":"/lib/clang/18/include/avx512pfintrin.h","start":18144389,"end":18148828},{"filename":"/lib/clang/18/include/avx512vbmi2intrin.h","start":18148828,"end":18162321},{"filename":"/lib/clang/18/include/avx512vbmiintrin.h","start":18162321,"end":18166241},{"filename":"/lib/clang/18/include/avx512vbmivlintrin.h","start":18166241,"end":18173643},{"filename":"/lib/clang/18/include/avx512vlbf16intrin.h","start":18173643,"end":18193565},{"filename":"/lib/clang/18/include/avx512vlbitalgintrin.h","start":18193565,"end":18198190},{"filename":"/lib/clang/18/include/avx512vlbwintrin.h","start":18198190,"end":18322664},{"filename":"/lib/clang/18/include/avx512vlcdintrin.h","start":18322664,"end":18330805},{"filename":"/lib/clang/18/include/avx512vldqintrin.h","start":18330805,"end":18378632},{"filename":"/lib/clang/18/include/avx512vlfp16intrin.h","start":18378632,"end":18466193},{"filename":"/lib/clang/18/include/avx512vlintrin.h","start":18466193,"end":18796532},{"filename":"/lib/clang/18/include/avx512vlvbmi2intrin.h","start":18796532,"end":18823165},{"filename":"/lib/clang/18/include/avx512vlvnniintrin.h","start":18823165,"end":18836901},{"filename":"/lib/clang/18/include/avx512vlvp2intersectintrin.h","start":18836901,"end":18841683},{"filename":"/lib/clang/18/include/avx512vnniintrin.h","start":18841683,"end":18846111},{"filename":"/lib/clang/18/include/avx512vp2intersectintrin.h","start":18846111,"end":18849213},{"filename":"/lib/clang/18/include/avx512vpopcntdqintrin.h","start":18849213,"end":18851355},{"filename":"/lib/clang/18/include/avx512vpopcntdqvlintrin.h","start":18851355,"end":18854925},{"filename":"/lib/clang/18/include/avxifmaintrin.h","start":18854925,"end":18860811},{"filename":"/lib/clang/18/include/avxintrin.h","start":18860811,"end":19061071},{"filename":"/lib/clang/18/include/avxneconvertintrin.h","start":19061071,"end":19075503},{"filename":"/lib/clang/18/include/avxvnniint16intrin.h","start":19075503,"end":19093335},{"filename":"/lib/clang/18/include/avxvnniint8intrin.h","start":19093335,"end":19112455},{"filename":"/lib/clang/18/include/avxvnniintrin.h","start":19112455,"end":19123145},{"filename":"/lib/clang/18/include/bmi2intrin.h","start":19123145,"end":19130401},{"filename":"/lib/clang/18/include/bmiintrin.h","start":19130401,"end":19144688},{"filename":"/lib/clang/18/include/builtins.h","start":19144688,"end":19145429},{"filename":"/lib/clang/18/include/cet.h","start":19145429,"end":19146956},{"filename":"/lib/clang/18/include/cetintrin.h","start":19146956,"end":19150307},{"filename":"/lib/clang/18/include/cldemoteintrin.h","start":19150307,"end":19151514},{"filename":"/lib/clang/18/include/clflushoptintrin.h","start":19151514,"end":19152707},{"filename":"/lib/clang/18/include/clwbintrin.h","start":19152707,"end":19153936},{"filename":"/lib/clang/18/include/clzerointrin.h","start":19153936,"end":19155156},{"filename":"/lib/clang/18/include/cmpccxaddintrin.h","start":19155156,"end":19157539},{"filename":"/lib/clang/18/include/cpuid.h","start":19157539,"end":19168811},{"filename":"/lib/clang/18/include/crc32intrin.h","start":19168811,"end":19172158},{"filename":"/lib/clang/18/include/cuda_wrappers/algorithm","start":19172158,"end":19176770},{"filename":"/lib/clang/18/include/cuda_wrappers/bits/basic_string.h","start":19176770,"end":19177122},{"filename":"/lib/clang/18/include/cuda_wrappers/bits/basic_string.tcc","start":19177122,"end":19177476},{"filename":"/lib/clang/18/include/cuda_wrappers/bits/shared_ptr_base.h","start":19177476,"end":19177831},{"filename":"/lib/clang/18/include/cuda_wrappers/cmath","start":19177831,"end":19181375},{"filename":"/lib/clang/18/include/cuda_wrappers/complex","start":19181375,"end":19184993},{"filename":"/lib/clang/18/include/cuda_wrappers/new","start":19184993,"end":19188658},{"filename":"/lib/clang/18/include/emmintrin.h","start":19188658,"end":19386e3},{"filename":"/lib/clang/18/include/enqcmdintrin.h","start":19386e3,"end":19388167},{"filename":"/lib/clang/18/include/f16cintrin.h","start":19388167,"end":19393691},{"filename":"/lib/clang/18/include/float.h","start":19393691,"end":19399458},{"filename":"/lib/clang/18/include/fma4intrin.h","start":19399458,"end":19406444},{"filename":"/lib/clang/18/include/fmaintrin.h","start":19406444,"end":19435525},{"filename":"/lib/clang/18/include/fxsrintrin.h","start":19435525,"end":19438415},{"filename":"/lib/clang/18/include/gfniintrin.h","start":19438415,"end":19447028},{"filename":"/lib/clang/18/include/hexagon_circ_brev_intrinsics.h","start":19447028,"end":19462994},{"filename":"/lib/clang/18/include/hexagon_protos.h","start":19462994,"end":19846404},{"filename":"/lib/clang/18/include/hexagon_types.h","start":19846404,"end":19979863},{"filename":"/lib/clang/18/include/hresetintrin.h","start":19979863,"end":19981258},{"filename":"/lib/clang/18/include/htmintrin.h","start":19981258,"end":19987541},{"filename":"/lib/clang/18/include/htmxlintrin.h","start":19987541,"end":19996766},{"filename":"/lib/clang/18/include/hvx_hexagon_protos.h","start":19996766,"end":20257125},{"filename":"/lib/clang/18/include/ia32intrin.h","start":20257125,"end":20275657},{"filename":"/lib/clang/18/include/immintrin.h","start":20275657,"end":20301548},{"filename":"/lib/clang/18/include/intrin.h","start":20301548,"end":20331e3},{"filename":"/lib/clang/18/include/inttypes.h","start":20331e3,"end":20333316},{"filename":"/lib/clang/18/include/invpcidintrin.h","start":20333316,"end":20334080},{"filename":"/lib/clang/18/include/iso646.h","start":20334080,"end":20334736},{"filename":"/lib/clang/18/include/keylockerintrin.h","start":20334736,"end":20353145},{"filename":"/lib/clang/18/include/larchintrin.h","start":20353145,"end":20361137},{"filename":"/lib/clang/18/include/lasxintrin.h","start":20361137,"end":20505886},{"filename":"/lib/clang/18/include/limits.h","start":20505886,"end":20509426},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/assert.h","start":20509426,"end":20510369},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/ctype.h","start":20510369,"end":20513183},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/inttypes.h","start":20513183,"end":20514137},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/stdio.h","start":20514137,"end":20517068},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/stdlib.h","start":20517068,"end":20518610},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/string.h","start":20518610,"end":20522638},{"filename":"/lib/clang/18/include/llvm_libc_wrappers/time.h","start":20522638,"end":20523614},{"filename":"/lib/clang/18/include/lsxintrin.h","start":20523614,"end":20660764},{"filename":"/lib/clang/18/include/lwpintrin.h","start":20660764,"end":20665879},{"filename":"/lib/clang/18/include/lzcntintrin.h","start":20665879,"end":20669131},{"filename":"/lib/clang/18/include/mm3dnow.h","start":20669131,"end":20673739},{"filename":"/lib/clang/18/include/mm_malloc.h","start":20673739,"end":20675668},{"filename":"/lib/clang/18/include/mmintrin.h","start":20675668,"end":20733122},{"filename":"/lib/clang/18/include/module.modulemap","start":20733122,"end":20739684},{"filename":"/lib/clang/18/include/movdirintrin.h","start":20739684,"end":20741296},{"filename":"/lib/clang/18/include/msa.h","start":20741296,"end":20766911},{"filename":"/lib/clang/18/include/mwaitxintrin.h","start":20766911,"end":20769155},{"filename":"/lib/clang/18/include/nmmintrin.h","start":20769155,"end":20769864},{"filename":"/lib/clang/18/include/opencl-c-base.h","start":20769864,"end":20801178},{"filename":"/lib/clang/18/include/opencl-c.h","start":20801178,"end":21696553},{"filename":"/lib/clang/18/include/openmp_wrappers/__clang_openmp_device_functions.h","start":21696553,"end":21699162},{"filename":"/lib/clang/18/include/openmp_wrappers/cmath","start":21699162,"end":21704413},{"filename":"/lib/clang/18/include/openmp_wrappers/complex","start":21704413,"end":21706215},{"filename":"/lib/clang/18/include/openmp_wrappers/complex.h","start":21706215,"end":21707113},{"filename":"/lib/clang/18/include/openmp_wrappers/complex_cmath.h","start":21707113,"end":21719536},{"filename":"/lib/clang/18/include/openmp_wrappers/math.h","start":21719536,"end":21721590},{"filename":"/lib/clang/18/include/openmp_wrappers/new","start":21721590,"end":21722999},{"filename":"/lib/clang/18/include/pconfigintrin.h","start":21722999,"end":21724215},{"filename":"/lib/clang/18/include/pkuintrin.h","start":21724215,"end":21725149},{"filename":"/lib/clang/18/include/pmmintrin.h","start":21725149,"end":21736010},{"filename":"/lib/clang/18/include/popcntintrin.h","start":21736010,"end":21737869},{"filename":"/lib/clang/18/include/ppc_wrappers/bmi2intrin.h","start":21737869,"end":21742540},{"filename":"/lib/clang/18/include/ppc_wrappers/bmiintrin.h","start":21742540,"end":21747542},{"filename":"/lib/clang/18/include/ppc_wrappers/emmintrin.h","start":21747542,"end":21818815},{"filename":"/lib/clang/18/include/ppc_wrappers/immintrin.h","start":21818815,"end":21819426},{"filename":"/lib/clang/18/include/ppc_wrappers/mm_malloc.h","start":21819426,"end":21820763},{"filename":"/lib/clang/18/include/ppc_wrappers/mmintrin.h","start":21820763,"end":21866526},{"filename":"/lib/clang/18/include/ppc_wrappers/nmmintrin.h","start":21866526,"end":21867503},{"filename":"/lib/clang/18/include/ppc_wrappers/pmmintrin.h","start":21867503,"end":21873401},{"filename":"/lib/clang/18/include/ppc_wrappers/smmintrin.h","start":21873401,"end":21896960},{"filename":"/lib/clang/18/include/ppc_wrappers/tmmintrin.h","start":21896960,"end":21913301},{"filename":"/lib/clang/18/include/ppc_wrappers/x86gprintrin.h","start":21913301,"end":21913800},{"filename":"/lib/clang/18/include/ppc_wrappers/x86intrin.h","start":21913800,"end":21914867},{"filename":"/lib/clang/18/include/ppc_wrappers/xmmintrin.h","start":21914867,"end":21979200},{"filename":"/lib/clang/18/include/prfchiintrin.h","start":21979200,"end":21981273},{"filename":"/lib/clang/18/include/prfchwintrin.h","start":21981273,"end":21983382},{"filename":"/lib/clang/18/include/ptwriteintrin.h","start":21983382,"end":21984458},{"filename":"/lib/clang/18/include/raointintrin.h","start":21984458,"end":21991206},{"filename":"/lib/clang/18/include/rdpruintrin.h","start":21991206,"end":21992830},{"filename":"/lib/clang/18/include/rdseedintrin.h","start":21992830,"end":21995749},{"filename":"/lib/clang/18/include/riscv_bitmanip.h","start":21995749,"end":22001474},{"filename":"/lib/clang/18/include/riscv_crypto.h","start":22001474,"end":22006685},{"filename":"/lib/clang/18/include/riscv_ntlh.h","start":22006685,"end":22007429},{"filename":"/lib/clang/18/include/rtmintrin.h","start":22007429,"end":22008709},{"filename":"/lib/clang/18/include/s390intrin.h","start":22008709,"end":22009313},{"filename":"/lib/clang/18/include/serializeintrin.h","start":22009313,"end":22010194},{"filename":"/lib/clang/18/include/sgxintrin.h","start":22010194,"end":22012010},{"filename":"/lib/clang/18/include/sha512intrin.h","start":22012010,"end":22018098},{"filename":"/lib/clang/18/include/shaintrin.h","start":22018098,"end":22025649},{"filename":"/lib/clang/18/include/sifive_vector.h","start":22025649,"end":22026171},{"filename":"/lib/clang/18/include/sm3intrin.h","start":22026171,"end":22033641},{"filename":"/lib/clang/18/include/sm4intrin.h","start":22033641,"end":22042042},{"filename":"/lib/clang/18/include/smmintrin.h","start":22042042,"end":22143773},{"filename":"/lib/clang/18/include/stdalign.h","start":22143773,"end":22144529},{"filename":"/lib/clang/18/include/stdarg.h","start":22144529,"end":22147587},{"filename":"/lib/clang/18/include/stdatomic.h","start":22147587,"end":22155928},{"filename":"/lib/clang/18/include/stdbool.h","start":22155928,"end":22156990},{"filename":"/lib/clang/18/include/stdckdint.h","start":22156990,"end":22158656},{"filename":"/lib/clang/18/include/stddef.h","start":22158656,"end":22163383},{"filename":"/lib/clang/18/include/stdint.h","start":22163383,"end":22194329},{"filename":"/lib/clang/18/include/stdnoreturn.h","start":22194329,"end":22195526},{"filename":"/lib/clang/18/include/tbmintrin.h","start":22195526,"end":22198751},{"filename":"/lib/clang/18/include/tgmath.h","start":22198751,"end":22229140},{"filename":"/lib/clang/18/include/tmmintrin.h","start":22229140,"end":22259630},{"filename":"/lib/clang/18/include/tsxldtrkintrin.h","start":22259630,"end":22261645},{"filename":"/lib/clang/18/include/uintrintrin.h","start":22261645,"end":22266724},{"filename":"/lib/clang/18/include/unwind.h","start":22266724,"end":22278201},{"filename":"/lib/clang/18/include/usermsrintrin.h","start":22278201,"end":22279773},{"filename":"/lib/clang/18/include/vadefs.h","start":22279773,"end":22281193},{"filename":"/lib/clang/18/include/vaesintrin.h","start":22281193,"end":22283864},{"filename":"/lib/clang/18/include/varargs.h","start":22283864,"end":22284341},{"filename":"/lib/clang/18/include/vecintrin.h","start":22284341,"end":22655356},{"filename":"/lib/clang/18/include/velintrin.h","start":22655356,"end":22657509},{"filename":"/lib/clang/18/include/velintrin_approx.h","start":22657509,"end":22661132},{"filename":"/lib/clang/18/include/velintrin_gen.h","start":22661132,"end":22731853},{"filename":"/lib/clang/18/include/vpclmulqdqintrin.h","start":22731853,"end":22732939},{"filename":"/lib/clang/18/include/waitpkgintrin.h","start":22732939,"end":22734296},{"filename":"/lib/clang/18/include/wasm_simd128.h","start":22734296,"end":22812378},{"filename":"/lib/clang/18/include/wbnoinvdintrin.h","start":22812378,"end":22813127},{"filename":"/lib/clang/18/include/wmmintrin.h","start":22813127,"end":22813786},{"filename":"/lib/clang/18/include/x86gprintrin.h","start":22813786,"end":22816299},{"filename":"/lib/clang/18/include/x86intrin.h","start":22816299,"end":22818148},{"filename":"/lib/clang/18/include/xmmintrin.h","start":22818148,"end":22927645},{"filename":"/lib/clang/18/include/xopintrin.h","start":22927645,"end":22948079},{"filename":"/lib/clang/18/include/xsavecintrin.h","start":22948079,"end":22950653},{"filename":"/lib/clang/18/include/xsaveintrin.h","start":22950653,"end":22952331},{"filename":"/lib/clang/18/include/xsaveoptintrin.h","start":22952331,"end":22953357},{"filename":"/lib/clang/18/include/xsavesintrin.h","start":22953357,"end":22954625},{"filename":"/lib/clang/18/include/xtestintrin.h","start":22954625,"end":22955498}],"remote_package_size":22955498})})();var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import("module");var require=createRequire(import.meta.url);var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/"}else{scriptDirectory=require("url").fileURLToPath(new URL("./",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:"utf8",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module["thisProgram"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\/g,"/")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];if(typeof WebAssembly!="object"){abort("no native wasm support detected")}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module["HEAP8"]=HEAP8=new Int8Array(b);Module["HEAP16"]=HEAP16=new Int16Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);Module["HEAPU16"]=HEAPU16=new Uint16Array(b);Module["HEAP32"]=HEAP32=new Int32Array(b);Module["HEAPU32"]=HEAPU32=new Uint32Array(b);Module["HEAPF32"]=HEAPF32=new Float32Array(b);Module["HEAPF64"]=HEAPF64=new Float64Array(b);Module["HEAP64"]=HEAP64=new BigInt64Array(b);Module["HEAPU64"]=HEAPU64=new BigUint64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){___funcs_on_exit();callRuntimeCallbacks(__ATEXIT__);FS.quit();TTY.shutdown();runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith("file://");var wasmBinaryFile;if(Module["locateFile"]){wasmBinaryFile="clang.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL("clang.wasm",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:"same-origin"}).then(response=>{if(!response["ok"]){throw"failed to load wasm binary file at '"+binaryFile+"'"}return response["arrayBuffer"]()}).catch(()=>getBinarySync(binaryFile))}else if(readAsync){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),reject)})}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(binaryFile,{credentials:"same-origin"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={"a":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["X"];updateMemoryViews();wasmTable=wasmExports["Z"];addOnInit(wasmExports["Y"]);removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}function ExitStatus(status){this.name="ExitStatus";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module["noExitRuntime"]||false;var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var ___call_sighandler=(fp,sig)=>getWasmTableEntry(fp)(sig);var PATH={isAbs:path=>path.charAt(0)==="/",splitPath:filename=>{var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)};var initRandomFill=()=>{if(typeof crypto=="object"&&typeof crypto["getRandomValues"]=="function"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");var randomFillSync=crypto_module["randomFillSync"];if(randomFillSync){return view=>crypto_module["randomFillSync"](view)}var randomBytes=crypto_module["randomBytes"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort("initRandomDevice")};var randomFill=view=>(randomFill=initRandomFill())(view);var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var FS_stdin_getChar_buffer=[];var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf)}catch(e){if(e.toString().includes("EOF"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}FS_stdin_getChar_buffer=intArrayFromString(result,true)}return FS_stdin_getChar_buffer.shift()};var TTY={ttys:[],init(){},shutdown(){},register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close(stream){stream.tty.ops.fsync(stream.tty)},fsync(stream){stream.tty.ops.fsync(stream.tty)},read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char(tty){return FS_stdin_getChar()},put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}},ioctl_tcgets(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(tty,optional_actions,data){return 0},ioctl_tiocgwinsz(tty){return[24,80]}},default_tty1_ops:{put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var zeroMemory=(address,size)=>{HEAPU8.fill(0,address,address+size);return address};var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var mmapAlloc=size=>{size=alignMemory(size,65536);var ptr=_emscripten_builtin_memalign(65536,size);if(!ptr)return 0;return zeroMemory(ptr,size)};var MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}MEMFS.ops_table||={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir(node){var entries=[".",".."];for(var key of Object.keys(node.contents)){entries.push(key)}return entries},symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=!noRunDep?getUniqueRunDependency(`al ${url}`):"";readAsync(url,arrayBuffer=>{onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw`Loading data file "${url}" failed.`}});if(dep)addRunDependency(dep)};var FS_createDataFile=(parent,name,fileData,canRead,canWrite,canOwn)=>{FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn)};var preloadPlugins=Module["preloadPlugins"]||[];var FS_handledByPreloadPlugin=(byteArray,fullname,finish,onerror)=>{if(typeof Browser!="undefined")Browser.init();var handled=false;preloadPlugins.forEach(plugin=>{if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,onerror);handled=true}});return handled};var FS_createPreloadedFile=(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(`cp ${fullname}`);function processData(byteArray){function finish(byteArray){preFinish?.();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}onload?.();removeRunDependency(dep)}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror?.();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){asyncLoad(url,processData,onerror)}else{processData(url)}};var FS_modeStringToFlags=str=>{var flagModes={"r":0,"r+":2,"w":512|64|1,"w+":512|64|2,"a":1024|64|1,"a+":1024|64|2};var flags=flagModes[str];if(typeof flags=="undefined"){throw new Error(`Unknown file open mode: ${str}`)}return flags};var FS_getMode=(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(path,opts={}){path=PATH_FS.resolve(path);if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split("/").filter(p=>!!p);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?`${mount}/${path}`:mount+path}path=path?`${node.name}/${path}`:node.name;node=node.parent}},hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode(node){FS.hashRemoveNode(node)},isRoot(node){return node===node.parent},isMountpoint(node){return!!node.mounted},isFile(mode){return(mode&61440)===32768},isDir(mode){return(mode&61440)===16384},isLink(mode){return(mode&61440)===40960},isChrdev(mode){return(mode&61440)===8192},isBlkdev(mode){return(mode&61440)===24576},isFIFO(mode){return(mode&61440)===4096},isSocket(mode){return(mode&49152)===49152},flagsToPermissionString(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes("r")&&!(node.mode&292)){return 2}else if(perms.includes("w")&&!(node.mode&146)){return 2}else if(perms.includes("x")&&!(node.mode&73)){return 2}return 0},mayLookup(dir){var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}return stream},getStream:fd=>FS.streams[fd],createStream(stream,fd=-1){if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);if(fd==-1){fd=FS.nextfd()}stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream(fd){FS.streams[fd]=null},chrdev_stream_ops:{open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;stream.stream_ops.open?.(stream)},llseek(){throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs(populate,callback){if(typeof populate=="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`)}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup(parent,name){return parent.node_ops.lookup(parent,name)},mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev(path,mode,dev){if(typeof dev=="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat(path){return FS.stat(path,true)},chmod(path,mode,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod(path,mode){FS.chmod(path,mode,true)},fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode)},chown(path,uid,gid,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown(path,uid,gid){FS.chown(path,uid,gid,true)},fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid)},truncate(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open(path,flags,mode){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags=="string"?FS_modeStringToFlags(flags):flags;mode=typeof mode=="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path=="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed(stream){return stream.fd===null},llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap(stream,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error(`Invalid encoding type "${opts.encoding}"`)}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:()=>FS.currentPath,chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=()=>{if(randomLeft===0){randomLeft=randomFill(randomBuffer).byteLength}return randomBuffer[--randomLeft]};FS.createDevice("/dev","random",randomByte);FS.createDevice("/dev","urandom",randomByte);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories(){FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount(){var node=FS.createNode(proc_self,"fd",16384|511,73);node.node_ops={lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1)},ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.name="ErrnoError";this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit(){FS.init.initialized=false;_fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath(parent,path,canRead,canWrite){parent=typeof parent=="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent=="string"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}},createDevice(parent,name,input,output){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open(stream){stream.seekable=false},close(stream){if(output?.buffer?.length){output(10)}},read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||"",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]=="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]=="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node}};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;HEAP64[buf+24>>3]=BigInt(stat.size);HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();HEAP64[buf+40>>3]=BigInt(Math.floor(atime/1e3));HEAPU32[buf+48>>2]=atime%1e3*1e3;HEAP64[buf+56>>3]=BigInt(Math.floor(mtime/1e3));HEAPU32[buf+64>>2]=mtime%1e3*1e3;HEAP64[buf+72>>3]=BigInt(Math.floor(ctime/1e3));HEAPU32[buf+80>>2]=ctime%1e3*1e3;HEAP64[buf+88>>3]=BigInt(stat.ino);return 0},doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream}};function ___syscall_chdir(path){try{path=SYSCALLS.getStr(path);FS.chdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_dup3(fd,newfd,flags){try{var old=SYSCALLS.getStreamFromFD(fd);if(old.fd===newfd)return-28;var existing=FS.getStream(newfd);if(existing)FS.close(existing);return FS.createStream(old,newfd).fd}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_faccessat(dirfd,path,amode,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}while(FS.streams[arg]){arg++}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.getp();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 13:case 14:return 0}return-28}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);stream.getdents||=FS.readdir(stream.path);var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name==="."){id=stream.node.id;type=4}else if(name===".."){var lookup=FS.lookupPath(stream.path,{parent:true});id=lookup.node.id;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}HEAP64[dirp+pos>>3]=BigInt(id);HEAP64[dirp+pos+8>>3]=BigInt((idx+1)*struct_size);HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1}FS.llseek(stream,idx*struct_size,0);return pos}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:{if(!stream.tty)return-59;return 0}case 21505:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcgets){var termios=stream.tty.ops.ioctl_tcgets(stream);var argp=SYSCALLS.getp();HEAP32[argp>>2]=termios.c_iflag||0;HEAP32[argp+4>>2]=termios.c_oflag||0;HEAP32[argp+8>>2]=termios.c_cflag||0;HEAP32[argp+12>>2]=termios.c_lflag||0;for(var i=0;i<32;i++){HEAP8[argp+i+17>>0]=termios.c_cc[i]||0}return 0}return 0}case 21510:case 21511:case 21512:{if(!stream.tty)return-59;return 0}case 21506:case 21507:case 21508:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcsets){var argp=SYSCALLS.getp();var c_iflag=HEAP32[argp>>2];var c_oflag=HEAP32[argp+4>>2];var c_cflag=HEAP32[argp+8>>2];var c_lflag=HEAP32[argp+12>>2];var c_cc=[];for(var i=0;i<32;i++){c_cc.push(HEAP8[argp+i+17>>0])}return stream.tty.ops.ioctl_tcsets(stream.tty,op,{c_iflag:c_iflag,c_oflag:c_oflag,c_cflag:c_cflag,c_lflag:c_lflag,c_cc:c_cc})}return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.getp();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.getp();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tiocgwinsz){var winsize=stream.tty.ops.ioctl_tiocgwinsz(stream.tty);var argp=SYSCALLS.getp();HEAP16[argp>>1]=winsize[0];HEAP16[argp+2>>1]=winsize[1]}return 0}case 21524:{if(!stream.tty)return-59;return 0}case 21515:{if(!stream.tty)return-59;return 0}default:return-28}}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_newfstatat(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~6400;path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_readlinkat(dirfd,path,buf,bufsize){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){try{oldpath=SYSCALLS.getStr(oldpath);newpath=SYSCALLS.getStr(newpath);oldpath=SYSCALLS.calculateAt(olddirfd,oldpath);newpath=SYSCALLS.calculateAt(newdirfd,newpath);FS.rename(oldpath,newpath);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_statfs64(path,size,buf){try{path=SYSCALLS.getStr(path);HEAP32[buf+4>>2]=4096;HEAP32[buf+40>>2]=4096;HEAP32[buf+8>>2]=1e6;HEAP32[buf+12>>2]=5e5;HEAP32[buf+16>>2]=5e5;HEAP32[buf+20>>2]=FS.nextInode;HEAP32[buf+24>>2]=1e6;HEAP32[buf+28>>2]=42;HEAP32[buf+44>>2]=2;HEAP32[buf+36>>2]=255;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_symlink(target,linkpath){try{target=SYSCALLS.getStr(target);linkpath=SYSCALLS.getStr(linkpath);FS.symlink(target,linkpath);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_unlinkat(dirfd,path,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(flags===0){FS.unlink(path)}else if(flags===512){FS.rmdir(path)}else{abort("Invalid flags passed to unlinkat")}return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var nowIsMonotonic=1;var __emscripten_get_now_is_monotonic=()=>nowIsMonotonic;var __emscripten_runtime_keepalive_clear=()=>{noExitRuntime=false;runtimeKeepaliveCounter=0};var __emscripten_throw_longjmp=()=>{throw Infinity};var MAX_INT53=9007199254740992;var MIN_INT53=-9007199254740992;var bigintToI53Checked=num=>num<MIN_INT53||num>MAX_INT53?NaN:Number(num);function __gmtime_js(time,tmPtr){time=bigintToI53Checked(time);var date=new Date(time*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];var ydayFromDate=date=>{var leap=isLeapYear(date.getFullYear());var monthDaysCumulative=leap?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;return yday};function __localtime_js(time,tmPtr){time=bigintToI53Checked(time);var date=new Date(time*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst}function __mmap_js(len,prot,flags,fd,offset,allocated,addr){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);var res=FS.mmap(stream,len,offset,prot,flags);var ptr=res.ptr;HEAP32[allocated>>2]=res.allocated;HEAPU32[addr>>2]=ptr;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function __munmap_js(addr,len,prot,flags,fd,offset){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);if(prot&2){SYSCALLS.doMsync(addr,stream,len,flags,offset)}FS.munmap(stream)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var timers={};var handleException=e=>{if(e instanceof ExitStatus||e=="unwind"){return EXITSTATUS}quit_(1,e)};var runtimeKeepaliveCounter=0;var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module["onExit"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;if(!keepRuntimeAlive()){exitRuntime()}_proc_exit(status)};var _exit=exitJS;var maybeExit=()=>{if(runtimeExited){return}if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}};var callUserCallback=func=>{if(runtimeExited||ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}};var _emscripten_get_now;_emscripten_get_now=()=>performance.now();var __setitimer_js=(which,timeout_ms)=>{if(timers[which]){clearTimeout(timers[which].id);delete timers[which]}if(!timeout_ms)return 0;var id=setTimeout(()=>{delete timers[which];callUserCallback(()=>__emscripten_timeout(which,_emscripten_get_now()))},timeout_ms);timers[which]={id:id,timeout_ms:timeout_ms};return 0};var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8(str,ret,size);return ret};var __tzset_js=(timezone,daylight,tzname)=>{var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAPU32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=stringToNewUTF8(winterName);var summerNamePtr=stringToNewUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr}};var _abort=()=>{abort("")};var _emscripten_date_now=()=>Date.now();var getHeapMax=()=>2147483648;var _emscripten_get_heap_max=()=>getHeapMax();var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||"./this.program";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}HEAP8[buffer>>0]=0};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var rightsBase=0;var rightsInheriting=0;var flags=0;{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4}HEAP8[pbuf>>0]=type;HEAP16[pbuf+2>>1]=flags;HEAP64[pbuf+8>>3]=BigInt(rightsBase);HEAP64[pbuf+16>>3]=BigInt(rightsInheriting);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_pread(fd,iov,iovcnt,offset,pnum){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt,offset);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_seek(fd,offset,whence,newOffset){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);HEAP64[newOffset>>3]=BigInt(stream.position);if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var _getentropy=(buffer,size)=>{randomFill(HEAPU8.subarray(buffer,buffer+size));return 0};var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var _strftime=(s,maxsize,format,tm)=>{var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value=="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":getWeekBasedYear,"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}return"PM"},"%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},"%V":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"};pattern=pattern.replace(/%%/g,"\0\0");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\0\0/g,"%");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1};var _strftime_l=(s,maxsize,format,tm,loc)=>_strftime(s,maxsize,format,tm);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_unlink"]=FS.unlink;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;var wasmImports={F:___call_sighandler,m:___syscall_chdir,W:___syscall_dup3,n:___syscall_faccessat,c:___syscall_fcntl64,U:___syscall_fstat64,P:___syscall_getcwd,E:___syscall_getdents64,t:___syscall_ioctl,R:___syscall_lstat64,N:___syscall_mkdirat,S:___syscall_newfstatat,j:___syscall_openat,D:___syscall_readlinkat,B:___syscall_renameat,C:___syscall_rmdir,T:___syscall_stat64,A:___syscall_statfs64,y:___syscall_symlink,h:___syscall_unlinkat,V:__emscripten_get_now_is_monotonic,G:__emscripten_runtime_keepalive_clear,u:__emscripten_throw_longjmp,L:__gmtime_js,M:__localtime_js,J:__mmap_js,K:__munmap_js,g:__setitimer_js,w:__tzset_js,a:_abort,l:_emscripten_date_now,x:_emscripten_get_heap_max,d:_emscripten_get_now,v:_emscripten_resize_heap,o:_environ_get,p:_environ_sizes_get,b:_exit,e:_fd_close,k:_fd_fdstat_get,I:_fd_pread,i:_fd_read,O:_fd_seek,f:_fd_write,r:_getentropy,H:invoke_ii,z:invoke_vi,q:_proc_exit,Q:_strftime,s:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports["Y"])();var _main=Module["_main"]=(a0,a1)=>(_main=Module["_main"]=wasmExports["_"])(a0,a1);var _malloc=a0=>(_malloc=wasmExports["$"])(a0);var ___funcs_on_exit=()=>(___funcs_on_exit=wasmExports["aa"])();var _fflush=a0=>(_fflush=wasmExports["ba"])(a0);var _htons=a0=>(_htons=wasmExports["htons"])(a0);var _emscripten_builtin_memalign=(a0,a1)=>(_emscripten_builtin_memalign=wasmExports["ca"])(a0,a1);var _ntohs=a0=>(_ntohs=wasmExports["ntohs"])(a0);var __emscripten_timeout=(a0,a1)=>(__emscripten_timeout=wasmExports["da"])(a0,a1);var _setThrew=(a0,a1)=>(_setThrew=wasmExports["ea"])(a0,a1);var stackSave=()=>(stackSave=wasmExports["fa"])();var stackRestore=a0=>(stackRestore=wasmExports["ga"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports["ha"])(a0);function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createPath"]=FS.createPath;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["callMain"]=callMain;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS"]=FS;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_unlink"]=FS.unlink;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args=[]){var entryFunction=_main;args.unshift(thisProgram);var argc=args.length;var argv=stackAlloc((argc+1)*4);var argv_ptr=argv;args.forEach(arg=>{HEAPU32[argv_ptr>>2]=stringToUTF8OnStack(arg);argv_ptr+=4});HEAPU32[argv_ptr>>2]=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args=arguments_){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(shouldRunNow)callMain(args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=false;if(Module["noInitialRun"])shouldRunNow=false;run();


  return moduleArg.ready
}
);
})();
export default Module;