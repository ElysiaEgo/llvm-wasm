
var Module = (() => {
  var _scriptDir = import.meta.url;
  
  return (
function(Module) {
  Module = Module || {};

var Module=typeof Module!="undefined"?Module:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){if(Module["ENVIRONMENT_IS_PTHREAD"])return;var loadPackage=function(metadata){var PACKAGE_PATH="";if(typeof window==="object"){PACKAGE_PATH=window["encodeURIComponent"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/")}else if(typeof process==="undefined"&&typeof location!=="undefined"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/")}var PACKAGE_NAME="bin/lld.data";var REMOTE_PACKAGE_BASE="lld.data";if(typeof Module["locateFilePackage"]==="function"&&!Module["locateFile"]){Module["locateFile"]=Module["locateFilePackage"];err("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)")}var REMOTE_PACKAGE_NAME=Module["locateFile"]?Module["locateFile"](REMOTE_PACKAGE_BASE,""):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata["remote_package_size"];function fetchRemotePackage(packageName,packageSize,callback,errback){if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){require("fs").readFile(packageName,function(err,contents){if(err){errback(err)}else{callback(contents.buffer)}});return}var xhr=new XMLHttpRequest;xhr.open("GET",packageName,true);xhr.responseType="arraybuffer";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module["setStatus"])Module["setStatus"]("Downloading data... ("+loaded+"/"+total+")")}else if(!Module.dataFileDownloads){if(Module["setStatus"])Module["setStatus"]("Downloading data...")}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+" : "+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error("package error:",error)}var fetchedCallback=null;var fetched=Module["getPreloadedPackage"]?Module["getPreloadedPackage"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","include",true,true);Module["FS_createPath"]("/include","arpa",true,true);Module["FS_createPath"]("/include","bits",true,true);Module["FS_createPath"]("/include","c++",true,true);Module["FS_createPath"]("/include/c++","v1",true,true);Module["FS_createPath"]("/include/c++/v1","__algorithm",true,true);Module["FS_createPath"]("/include/c++/v1","__bit",true,true);Module["FS_createPath"]("/include/c++/v1","__charconv",true,true);Module["FS_createPath"]("/include/c++/v1","__chrono",true,true);Module["FS_createPath"]("/include/c++/v1","__compare",true,true);Module["FS_createPath"]("/include/c++/v1","__concepts",true,true);Module["FS_createPath"]("/include/c++/v1","__coroutine",true,true);Module["FS_createPath"]("/include/c++/v1","__filesystem",true,true);Module["FS_createPath"]("/include/c++/v1","__format",true,true);Module["FS_createPath"]("/include/c++/v1","__functional",true,true);Module["FS_createPath"]("/include/c++/v1","__iterator",true,true);Module["FS_createPath"]("/include/c++/v1","__memory",true,true);Module["FS_createPath"]("/include/c++/v1","__numeric",true,true);Module["FS_createPath"]("/include/c++/v1","__random",true,true);Module["FS_createPath"]("/include/c++/v1","__ranges",true,true);Module["FS_createPath"]("/include/c++/v1","__support",true,true);Module["FS_createPath"]("/include/c++/v1/__support","android",true,true);Module["FS_createPath"]("/include/c++/v1/__support","fuchsia",true,true);Module["FS_createPath"]("/include/c++/v1/__support","ibm",true,true);Module["FS_createPath"]("/include/c++/v1/__support","musl",true,true);Module["FS_createPath"]("/include/c++/v1/__support","newlib",true,true);Module["FS_createPath"]("/include/c++/v1/__support","openbsd",true,true);Module["FS_createPath"]("/include/c++/v1/__support","solaris",true,true);Module["FS_createPath"]("/include/c++/v1/__support","win32",true,true);Module["FS_createPath"]("/include/c++/v1/__support","xlocale",true,true);Module["FS_createPath"]("/include/c++/v1","__thread",true,true);Module["FS_createPath"]("/include/c++/v1","__utility",true,true);Module["FS_createPath"]("/include/c++/v1","__variant",true,true);Module["FS_createPath"]("/include/c++/v1","experimental",true,true);Module["FS_createPath"]("/include/c++/v1","ext",true,true);Module["FS_createPath"]("/include","netinet",true,true);Module["FS_createPath"]("/include","netpacket",true,true);Module["FS_createPath"]("/include","sys",true,true);Module["FS_createPath"]("/include","wasi",true,true);Module["FS_createPath"]("/","lib",true,true);Module["FS_createPath"]("/lib","clang",true,true);Module["FS_createPath"]("/lib/clang","lib",true,true);Module["FS_createPath"]("/lib/clang/lib","wasi",true,true);Module["FS_createPath"]("/lib","wasm32-wasi",true,true);Module["FS_createPath"]("/","share",true,true);Module["FS_createPath"]("/share","wasm32-wasi",true,true);function DataRequest(start,end,audio){this.start=start;this.end=end;this.audio=audio}DataRequest.prototype={requests:{},open:function(mode,name){this.name=name;this.requests[name]=this;Module["addRunDependency"]("fp "+this.name)},send:function(){},onload:function(){var byteArray=this.byteArray.subarray(this.start,this.end);this.finish(byteArray)},finish:function(byteArray){var that=this;Module["FS_createDataFile"](this.name,null,byteArray,true,true,true);Module["removeRunDependency"]("fp "+that.name);this.requests[this.name]=null}};var files=metadata["files"];for(var i=0;i<files.length;++i){new DataRequest(files[i]["start"],files[i]["end"],files[i]["audio"]||0).open("GET",files[i]["filename"])}function processPackageData(arrayBuffer){assert(arrayBuffer,"Loading data file failed.");assert(arrayBuffer.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var byteArray=new Uint8Array(arrayBuffer);DataRequest.prototype.byteArray=byteArray;var files=metadata["files"];for(var i=0;i<files.length;++i){DataRequest.prototype.requests[files[i].filename].onload()}Module["removeRunDependency"]("datafile_bin/lld.data")}Module["addRunDependency"]("datafile_bin/lld.data");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[{"filename":"/include/__errno.h","start":0,"end":252},{"filename":"/include/__errno_values.h","start":252,"end":3227},{"filename":"/include/__fd_set.h","start":3227,"end":4869},{"filename":"/include/__function___isatty.h","start":4869,"end":5051},{"filename":"/include/__functions_malloc.h","start":5051,"end":5741},{"filename":"/include/__functions_memcpy.h","start":5741,"end":6324},{"filename":"/include/__header_dirent.h","start":6324,"end":7435},{"filename":"/include/__header_fcntl.h","start":7435,"end":9072},{"filename":"/include/__header_inttypes.h","start":9072,"end":15280},{"filename":"/include/__header_netinet_in.h","start":15280,"end":15956},{"filename":"/include/__header_poll.h","start":15956,"end":16376},{"filename":"/include/__header_stdlib.h","start":16376,"end":16772},{"filename":"/include/__header_string.h","start":16772,"end":17381},{"filename":"/include/__header_sys_ioctl.h","start":17381,"end":17603},{"filename":"/include/__header_sys_resource.h","start":17603,"end":17892},{"filename":"/include/__header_sys_socket.h","start":17892,"end":18720},{"filename":"/include/__header_sys_stat.h","start":18720,"end":19002},{"filename":"/include/__header_time.h","start":19002,"end":20054},{"filename":"/include/__header_unistd.h","start":20054,"end":20570},{"filename":"/include/__macro_FD_SETSIZE.h","start":20570,"end":20683},{"filename":"/include/__macro_PAGESIZE.h","start":20683,"end":20958},{"filename":"/include/__mode_t.h","start":20958,"end":22029},{"filename":"/include/__seek.h","start":22029,"end":22222},{"filename":"/include/__struct_dirent.h","start":22222,"end":22445},{"filename":"/include/__struct_in6_addr.h","start":22445,"end":22602},{"filename":"/include/__struct_in_addr.h","start":22602,"end":22763},{"filename":"/include/__struct_iovec.h","start":22763,"end":22945},{"filename":"/include/__struct_msghdr.h","start":22945,"end":23247},{"filename":"/include/__struct_pollfd.h","start":23247,"end":23398},{"filename":"/include/__struct_rusage.h","start":23398,"end":23625},{"filename":"/include/__struct_sockaddr.h","start":23625,"end":23889},{"filename":"/include/__struct_sockaddr_in.h","start":23889,"end":24258},{"filename":"/include/__struct_sockaddr_in6.h","start":24258,"end":24691},{"filename":"/include/__struct_sockaddr_storage.h","start":24691,"end":24982},{"filename":"/include/__struct_sockaddr_un.h","start":24982,"end":25235},{"filename":"/include/__struct_stat.h","start":25235,"end":25979},{"filename":"/include/__struct_timespec.h","start":25979,"end":26184},{"filename":"/include/__struct_timeval.h","start":26184,"end":26428},{"filename":"/include/__struct_tm.h","start":26428,"end":26736},{"filename":"/include/__struct_tms.h","start":26736,"end":26955},{"filename":"/include/__typedef_DIR.h","start":26955,"end":27059},{"filename":"/include/__typedef_blkcnt_t.h","start":27059,"end":27257},{"filename":"/include/__typedef_blksize_t.h","start":27257,"end":27372},{"filename":"/include/__typedef_clock_t.h","start":27372,"end":27553},{"filename":"/include/__typedef_clockid_t.h","start":27553,"end":27687},{"filename":"/include/__typedef_dev_t.h","start":27687,"end":27874},{"filename":"/include/__typedef_fd_set.h","start":27874,"end":28108},{"filename":"/include/__typedef_gid_t.h","start":28108,"end":28215},{"filename":"/include/__typedef_in_addr_t.h","start":28215,"end":28334},{"filename":"/include/__typedef_in_port_t.h","start":28334,"end":28459},{"filename":"/include/__typedef_ino_t.h","start":28459,"end":28645},{"filename":"/include/__typedef_mode_t.h","start":28645,"end":28755},{"filename":"/include/__typedef_nfds_t.h","start":28755,"end":28870},{"filename":"/include/__typedef_nlink_t.h","start":28870,"end":29070},{"filename":"/include/__typedef_off_t.h","start":29070,"end":29259},{"filename":"/include/__typedef_sa_family_t.h","start":29259,"end":29390},{"filename":"/include/__typedef_sigset_t.h","start":29390,"end":29588},{"filename":"/include/__typedef_socklen_t.h","start":29588,"end":29707},{"filename":"/include/__typedef_ssize_t.h","start":29707,"end":29869},{"filename":"/include/__typedef_suseconds_t.h","start":29869,"end":30116},{"filename":"/include/__typedef_time_t.h","start":30116,"end":30295},{"filename":"/include/__typedef_uid_t.h","start":30295,"end":30402},{"filename":"/include/alloca.h","start":30402,"end":30621},{"filename":"/include/ar.h","start":30621,"end":30932},{"filename":"/include/arpa/ftp.h","start":30932,"end":31753},{"filename":"/include/arpa/inet.h","start":31753,"end":32606},{"filename":"/include/arpa/nameser.h","start":32606,"end":43353},{"filename":"/include/arpa/nameser_compat.h","start":43353,"end":43380},{"filename":"/include/arpa/telnet.h","start":43380,"end":49132},{"filename":"/include/arpa/tftp.h","start":49132,"end":49676},{"filename":"/include/assert.h","start":49676,"end":50104},{"filename":"/include/bits/alltypes.h","start":50104,"end":62845},{"filename":"/include/bits/dirent.h","start":62845,"end":62874},{"filename":"/include/bits/fcntl.h","start":62874,"end":62925},{"filename":"/include/bits/fenv.h","start":62925,"end":63103},{"filename":"/include/bits/float.h","start":63103,"end":63575},{"filename":"/include/bits/hwcap.h","start":63575,"end":63575},{"filename":"/include/bits/io.h","start":63575,"end":63575},{"filename":"/include/bits/ioctl.h","start":63575,"end":63626},{"filename":"/include/bits/ioctl_fix.h","start":63626,"end":63626},{"filename":"/include/bits/ipcstat.h","start":63626,"end":63645},{"filename":"/include/bits/limits.h","start":63645,"end":63675},{"filename":"/include/bits/mman.h","start":63675,"end":63675},{"filename":"/include/bits/poll.h","start":63675,"end":63675},{"filename":"/include/bits/posix.h","start":63675,"end":63745},{"filename":"/include/bits/reg.h","start":63745,"end":63785},{"filename":"/include/bits/resource.h","start":63785,"end":63785},{"filename":"/include/bits/signal.h","start":63785,"end":64555},{"filename":"/include/bits/socket.h","start":64555,"end":64555},{"filename":"/include/bits/stat.h","start":64555,"end":64582},{"filename":"/include/bits/stdint.h","start":64582,"end":65122},{"filename":"/include/byteswap.h","start":65122,"end":65623},{"filename":"/include/c++/v1/__algorithm/adjacent_find.h","start":65623,"end":67171},{"filename":"/include/c++/v1/__algorithm/all_of.h","start":67171,"end":68150},{"filename":"/include/c++/v1/__algorithm/any_of.h","start":68150,"end":69128},{"filename":"/include/c++/v1/__algorithm/binary_search.h","start":69128,"end":71111},{"filename":"/include/c++/v1/__algorithm/clamp.h","start":71111,"end":72401},{"filename":"/include/c++/v1/__algorithm/comp.h","start":72401,"end":75599},{"filename":"/include/c++/v1/__algorithm/comp_ref_type.h","start":75599,"end":77854},{"filename":"/include/c++/v1/__algorithm/copy.h","start":77854,"end":80211},{"filename":"/include/c++/v1/__algorithm/copy_backward.h","start":80211,"end":82784},{"filename":"/include/c++/v1/__algorithm/copy_if.h","start":82784,"end":83878},{"filename":"/include/c++/v1/__algorithm/copy_n.h","start":83878,"end":85929},{"filename":"/include/c++/v1/__algorithm/count.h","start":85929,"end":87063},{"filename":"/include/c++/v1/__algorithm/count_if.h","start":87063,"end":88210},{"filename":"/include/c++/v1/__algorithm/equal.h","start":88210,"end":92260},{"filename":"/include/c++/v1/__algorithm/equal_range.h","start":92260,"end":95191},{"filename":"/include/c++/v1/__algorithm/fill.h","start":95191,"end":96816},{"filename":"/include/c++/v1/__algorithm/fill_n.h","start":96816,"end":98111},{"filename":"/include/c++/v1/__algorithm/find.h","start":98111,"end":99086},{"filename":"/include/c++/v1/__algorithm/find_end.h","start":99086,"end":105359},{"filename":"/include/c++/v1/__algorithm/find_first_of.h","start":105359,"end":107766},{"filename":"/include/c++/v1/__algorithm/find_if.h","start":107766,"end":108754},{"filename":"/include/c++/v1/__algorithm/find_if_not.h","start":108754,"end":109759},{"filename":"/include/c++/v1/__algorithm/for_each.h","start":109759,"end":110859},{"filename":"/include/c++/v1/__algorithm/for_each_n.h","start":110859,"end":112170},{"filename":"/include/c++/v1/__algorithm/generate.h","start":112170,"end":113093},{"filename":"/include/c++/v1/__algorithm/generate_n.h","start":113093,"end":114194},{"filename":"/include/c++/v1/__algorithm/half_positive.h","start":114194,"end":115447},{"filename":"/include/c++/v1/__algorithm/in_in_out_result.h","start":115447,"end":117189},{"filename":"/include/c++/v1/__algorithm/in_in_result.h","start":117189,"end":118644},{"filename":"/include/c++/v1/__algorithm/in_out_result.h","start":118644,"end":120454},{"filename":"/include/c++/v1/__algorithm/includes.h","start":120454,"end":122660},{"filename":"/include/c++/v1/__algorithm/inplace_merge.h","start":122660,"end":132145},{"filename":"/include/c++/v1/__algorithm/is_heap.h","start":132145,"end":133639},{"filename":"/include/c++/v1/__algorithm/is_heap_until.h","start":133639,"end":135983},{"filename":"/include/c++/v1/__algorithm/is_partitioned.h","start":135983,"end":137115},{"filename":"/include/c++/v1/__algorithm/is_permutation.h","start":137115,"end":144082},{"filename":"/include/c++/v1/__algorithm/is_sorted.h","start":144082,"end":145557},{"filename":"/include/c++/v1/__algorithm/is_sorted_until.h","start":145557,"end":147488},{"filename":"/include/c++/v1/__algorithm/iter_swap.h","start":147488,"end":148664},{"filename":"/include/c++/v1/__algorithm/lexicographical_compare.h","start":148664,"end":151094},{"filename":"/include/c++/v1/__algorithm/lower_bound.h","start":151094,"end":153299},{"filename":"/include/c++/v1/__algorithm/make_heap.h","start":153299,"end":155342},{"filename":"/include/c++/v1/__algorithm/max.h","start":155342,"end":157210},{"filename":"/include/c++/v1/__algorithm/max_element.h","start":157210,"end":159217},{"filename":"/include/c++/v1/__algorithm/merge.h","start":159217,"end":161757},{"filename":"/include/c++/v1/__algorithm/min.h","start":161757,"end":163625},{"filename":"/include/c++/v1/__algorithm/min_element.h","start":163625,"end":165631},{"filename":"/include/c++/v1/__algorithm/minmax.h","start":165631,"end":168298},{"filename":"/include/c++/v1/__algorithm/minmax_element.h","start":168298,"end":171141},{"filename":"/include/c++/v1/__algorithm/mismatch.h","start":171141,"end":174041},{"filename":"/include/c++/v1/__algorithm/move.h","start":174041,"end":176478},{"filename":"/include/c++/v1/__algorithm/move_backward.h","start":176478,"end":179055},{"filename":"/include/c++/v1/__algorithm/next_permutation.h","start":179055,"end":181376},{"filename":"/include/c++/v1/__algorithm/none_of.h","start":181376,"end":182358},{"filename":"/include/c++/v1/__algorithm/nth_element.h","start":182358,"end":191166},{"filename":"/include/c++/v1/__algorithm/partial_sort.h","start":191166,"end":193781},{"filename":"/include/c++/v1/__algorithm/partial_sort_copy.h","start":193781,"end":196714},{"filename":"/include/c++/v1/__algorithm/partition.h","start":196714,"end":199001},{"filename":"/include/c++/v1/__algorithm/partition_copy.h","start":199001,"end":200431},{"filename":"/include/c++/v1/__algorithm/partition_point.h","start":200431,"end":201839},{"filename":"/include/c++/v1/__algorithm/pop_heap.h","start":201839,"end":203750},{"filename":"/include/c++/v1/__algorithm/prev_permutation.h","start":203750,"end":206071},{"filename":"/include/c++/v1/__algorithm/push_heap.h","start":206071,"end":208420},{"filename":"/include/c++/v1/__algorithm/remove.h","start":208420,"end":209697},{"filename":"/include/c++/v1/__algorithm/remove_copy.h","start":209697,"end":210802},{"filename":"/include/c++/v1/__algorithm/remove_copy_if.h","start":210802,"end":211918},{"filename":"/include/c++/v1/__algorithm/remove_if.h","start":211918,"end":213199},{"filename":"/include/c++/v1/__algorithm/replace.h","start":213199,"end":214186},{"filename":"/include/c++/v1/__algorithm/replace_copy.h","start":214186,"end":215348},{"filename":"/include/c++/v1/__algorithm/replace_copy_if.h","start":215348,"end":216531},{"filename":"/include/c++/v1/__algorithm/replace_if.h","start":216531,"end":217536},{"filename":"/include/c++/v1/__algorithm/reverse.h","start":217536,"end":219254},{"filename":"/include/c++/v1/__algorithm/reverse_copy.h","start":219254,"end":220260},{"filename":"/include/c++/v1/__algorithm/rotate.h","start":220260,"end":226891},{"filename":"/include/c++/v1/__algorithm/rotate_copy.h","start":226891,"end":227922},{"filename":"/include/c++/v1/__algorithm/sample.h","start":227922,"end":231865},{"filename":"/include/c++/v1/__algorithm/search.h","start":231865,"end":237168},{"filename":"/include/c++/v1/__algorithm/search_n.h","start":237168,"end":241981},{"filename":"/include/c++/v1/__algorithm/set_difference.h","start":241981,"end":244665},{"filename":"/include/c++/v1/__algorithm/set_intersection.h","start":244665,"end":247290},{"filename":"/include/c++/v1/__algorithm/set_symmetric_difference.h","start":247290,"end":250247},{"filename":"/include/c++/v1/__algorithm/set_union.h","start":250247,"end":252919},{"filename":"/include/c++/v1/__algorithm/shift_left.h","start":252919,"end":254433},{"filename":"/include/c++/v1/__algorithm/shift_right.h","start":254433,"end":257577},{"filename":"/include/c++/v1/__algorithm/shuffle.h","start":257577,"end":262364},{"filename":"/include/c++/v1/__algorithm/sift_down.h","start":262364,"end":264944},{"filename":"/include/c++/v1/__algorithm/sort.h","start":264944,"end":287306},{"filename":"/include/c++/v1/__algorithm/sort_heap.h","start":287306,"end":289195},{"filename":"/include/c++/v1/__algorithm/stable_partition.h","start":289195,"end":300033},{"filename":"/include/c++/v1/__algorithm/stable_sort.h","start":300033,"end":308934},{"filename":"/include/c++/v1/__algorithm/swap_ranges.h","start":308934,"end":309997},{"filename":"/include/c++/v1/__algorithm/transform.h","start":309997,"end":311526},{"filename":"/include/c++/v1/__algorithm/unique.h","start":311526,"end":313263},{"filename":"/include/c++/v1/__algorithm/unique_copy.h","start":313263,"end":316834},{"filename":"/include/c++/v1/__algorithm/unwrap_iter.h","start":316834,"end":319557},{"filename":"/include/c++/v1/__algorithm/upper_bound.h","start":319557,"end":321762},{"filename":"/include/c++/v1/__availability","start":321762,"end":337397},{"filename":"/include/c++/v1/__bit/bit_cast.h","start":337397,"end":338466},{"filename":"/include/c++/v1/__bit/byteswap.h","start":338466,"end":340206},{"filename":"/include/c++/v1/__bit_reference","start":340206,"end":393442},{"filename":"/include/c++/v1/__bits","start":393442,"end":398107},{"filename":"/include/c++/v1/__bsd_locale_defaults.h","start":398107,"end":400212},{"filename":"/include/c++/v1/__bsd_locale_fallbacks.h","start":400212,"end":404498},{"filename":"/include/c++/v1/__charconv/chars_format.h","start":404498,"end":406666},{"filename":"/include/c++/v1/__charconv/from_chars_result.h","start":406666,"end":407662},{"filename":"/include/c++/v1/__charconv/to_chars_result.h","start":407662,"end":408640},{"filename":"/include/c++/v1/__chrono/calendar.h","start":408640,"end":458930},{"filename":"/include/c++/v1/__chrono/convert_to_timespec.h","start":458930,"end":460459},{"filename":"/include/c++/v1/__chrono/duration.h","start":460459,"end":481591},{"filename":"/include/c++/v1/__chrono/file_clock.h","start":481591,"end":483886},{"filename":"/include/c++/v1/__chrono/high_resolution_clock.h","start":483886,"end":484836},{"filename":"/include/c++/v1/__chrono/steady_clock.h","start":484836,"end":486085},{"filename":"/include/c++/v1/__chrono/system_clock.h","start":486085,"end":487573},{"filename":"/include/c++/v1/__chrono/time_point.h","start":487573,"end":495805},{"filename":"/include/c++/v1/__compare/common_comparison_category.h","start":495805,"end":498404},{"filename":"/include/c++/v1/__compare/compare_partial_order_fallback.h","start":498404,"end":502013},{"filename":"/include/c++/v1/__compare/compare_strong_order_fallback.h","start":502013,"end":505245},{"filename":"/include/c++/v1/__compare/compare_three_way.h","start":505245,"end":506514},{"filename":"/include/c++/v1/__compare/compare_three_way_result.h","start":506514,"end":507967},{"filename":"/include/c++/v1/__compare/compare_weak_order_fallback.h","start":507967,"end":511174},{"filename":"/include/c++/v1/__compare/is_eq.h","start":511174,"end":512516},{"filename":"/include/c++/v1/__compare/ordering.h","start":512516,"end":522489},{"filename":"/include/c++/v1/__compare/partial_order.h","start":522489,"end":525772},{"filename":"/include/c++/v1/__compare/strong_order.h","start":525772,"end":532261},{"filename":"/include/c++/v1/__compare/synth_three_way.h","start":532261,"end":533808},{"filename":"/include/c++/v1/__compare/three_way_comparable.h","start":533808,"end":535892},{"filename":"/include/c++/v1/__compare/weak_order.h","start":535892,"end":540498},{"filename":"/include/c++/v1/__concepts/arithmetic.h","start":540498,"end":541880},{"filename":"/include/c++/v1/__concepts/assignable.h","start":541880,"end":543064},{"filename":"/include/c++/v1/__concepts/boolean_testable.h","start":543064,"end":544170},{"filename":"/include/c++/v1/__concepts/class_or_enum.h","start":544170,"end":545289},{"filename":"/include/c++/v1/__concepts/common_reference_with.h","start":545289,"end":546423},{"filename":"/include/c++/v1/__concepts/common_with.h","start":546423,"end":547831},{"filename":"/include/c++/v1/__concepts/constructible.h","start":547831,"end":549537},{"filename":"/include/c++/v1/__concepts/convertible_to.h","start":549537,"end":550518},{"filename":"/include/c++/v1/__concepts/copyable.h","start":550518,"end":551572},{"filename":"/include/c++/v1/__concepts/derived_from.h","start":551572,"end":552506},{"filename":"/include/c++/v1/__concepts/destructible.h","start":552506,"end":553376},{"filename":"/include/c++/v1/__concepts/different_from.h","start":553376,"end":554292},{"filename":"/include/c++/v1/__concepts/equality_comparable.h","start":554292,"end":556008},{"filename":"/include/c++/v1/__concepts/invocable.h","start":556008,"end":557199},{"filename":"/include/c++/v1/__concepts/movable.h","start":557199,"end":558220},{"filename":"/include/c++/v1/__concepts/predicate.h","start":558220,"end":559224},{"filename":"/include/c++/v1/__concepts/regular.h","start":559224,"end":560139},{"filename":"/include/c++/v1/__concepts/relation.h","start":560139,"end":561349},{"filename":"/include/c++/v1/__concepts/same_as.h","start":561349,"end":562307},{"filename":"/include/c++/v1/__concepts/semiregular.h","start":562307,"end":563228},{"filename":"/include/c++/v1/__concepts/swappable.h","start":563228,"end":567029},{"filename":"/include/c++/v1/__concepts/totally_ordered.h","start":567029,"end":568829},{"filename":"/include/c++/v1/__config","start":568829,"end":618309},{"filename":"/include/c++/v1/__config_site","start":618309,"end":619780},{"filename":"/include/c++/v1/__coroutine/coroutine_handle.h","start":619780,"end":626110},{"filename":"/include/c++/v1/__coroutine/coroutine_traits.h","start":626110,"end":627794},{"filename":"/include/c++/v1/__coroutine/noop_coroutine_handle.h","start":627794,"end":631486},{"filename":"/include/c++/v1/__coroutine/trivial_awaitables.h","start":631486,"end":632983},{"filename":"/include/c++/v1/__cxxabi_config.h","start":632983,"end":636125},{"filename":"/include/c++/v1/__debug","start":636125,"end":644782},{"filename":"/include/c++/v1/__errc","start":644782,"end":654025},{"filename":"/include/c++/v1/__filesystem/copy_options.h","start":654025,"end":656416},{"filename":"/include/c++/v1/__filesystem/directory_entry.h","start":656416,"end":670681},{"filename":"/include/c++/v1/__filesystem/directory_iterator.h","start":670681,"end":675040},{"filename":"/include/c++/v1/__filesystem/directory_options.h","start":675040,"end":677648},{"filename":"/include/c++/v1/__filesystem/file_status.h","start":677648,"end":679485},{"filename":"/include/c++/v1/__filesystem/file_time_type.h","start":679485,"end":680266},{"filename":"/include/c++/v1/__filesystem/file_type.h","start":680266,"end":681247},{"filename":"/include/c++/v1/__filesystem/filesystem_error.h","start":681247,"end":684105},{"filename":"/include/c++/v1/__filesystem/operations.h","start":684105,"end":701292},{"filename":"/include/c++/v1/__filesystem/path.h","start":701292,"end":733551},{"filename":"/include/c++/v1/__filesystem/path_iterator.h","start":733551,"end":737040},{"filename":"/include/c++/v1/__filesystem/perm_options.h","start":737040,"end":739194},{"filename":"/include/c++/v1/__filesystem/perms.h","start":739194,"end":741697},{"filename":"/include/c++/v1/__filesystem/recursive_directory_iterator.h","start":741697,"end":747277},{"filename":"/include/c++/v1/__filesystem/space_info.h","start":747277,"end":748164},{"filename":"/include/c++/v1/__filesystem/u8path.h","start":748164,"end":751410},{"filename":"/include/c++/v1/__format/format_arg.h","start":751410,"end":761850},{"filename":"/include/c++/v1/__format/format_args.h","start":761850,"end":764161},{"filename":"/include/c++/v1/__format/format_context.h","start":764161,"end":770026},{"filename":"/include/c++/v1/__format/format_error.h","start":770026,"end":771326},{"filename":"/include/c++/v1/__format/format_fwd.h","start":771326,"end":773008},{"filename":"/include/c++/v1/__format/format_parse_context.h","start":773008,"end":776711},{"filename":"/include/c++/v1/__format/format_string.h","start":776711,"end":782193},{"filename":"/include/c++/v1/__format/format_to_n_result.h","start":782193,"end":783481},{"filename":"/include/c++/v1/__format/formatter.h","start":783481,"end":793837},{"filename":"/include/c++/v1/__format/formatter_bool.h","start":793837,"end":798567},{"filename":"/include/c++/v1/__format/formatter_char.h","start":798567,"end":801791},{"filename":"/include/c++/v1/__format/formatter_floating_point.h","start":801791,"end":832740},{"filename":"/include/c++/v1/__format/formatter_integer.h","start":832740,"end":838855},{"filename":"/include/c++/v1/__format/formatter_integral.h","start":838855,"end":857601},{"filename":"/include/c++/v1/__format/formatter_pointer.h","start":857601,"end":861067},{"filename":"/include/c++/v1/__format/formatter_string.h","start":861067,"end":866982},{"filename":"/include/c++/v1/__format/parser_std_format_spec.h","start":866982,"end":914462},{"filename":"/include/c++/v1/__functional/binary_function.h","start":914462,"end":915369},{"filename":"/include/c++/v1/__functional/binary_negate.h","start":915369,"end":917174},{"filename":"/include/c++/v1/__functional/bind.h","start":917174,"end":929452},{"filename":"/include/c++/v1/__functional/bind_back.h","start":929452,"end":932284},{"filename":"/include/c++/v1/__functional/bind_front.h","start":932284,"end":934192},{"filename":"/include/c++/v1/__functional/binder1st.h","start":934192,"end":936181},{"filename":"/include/c++/v1/__functional/binder2nd.h","start":936181,"end":938149},{"filename":"/include/c++/v1/__functional/compose.h","start":938149,"end":940282},{"filename":"/include/c++/v1/__functional/default_searcher.h","start":940282,"end":942116},{"filename":"/include/c++/v1/__functional/function.h","start":942116,"end":1024868},{"filename":"/include/c++/v1/__functional/hash.h","start":1024868,"end":1051639},{"filename":"/include/c++/v1/__functional/identity.h","start":1051639,"end":1052596},{"filename":"/include/c++/v1/__functional/invoke.h","start":1052596,"end":1055357},{"filename":"/include/c++/v1/__functional/is_transparent.h","start":1055357,"end":1056344},{"filename":"/include/c++/v1/__functional/mem_fn.h","start":1056344,"end":1061503},{"filename":"/include/c++/v1/__functional/mem_fun_ref.h","start":1061503,"end":1067230},{"filename":"/include/c++/v1/__functional/not_fn.h","start":1067230,"end":1068856},{"filename":"/include/c++/v1/__functional/operations.h","start":1068856,"end":1093152},{"filename":"/include/c++/v1/__functional/perfect_forward.h","start":1093152,"end":1097622},{"filename":"/include/c++/v1/__functional/pointer_to_binary_function.h","start":1097622,"end":1099199},{"filename":"/include/c++/v1/__functional/pointer_to_unary_function.h","start":1099199,"end":1100751},{"filename":"/include/c++/v1/__functional/ranges_operations.h","start":1100751,"end":1103864},{"filename":"/include/c++/v1/__functional/reference_wrapper.h","start":1103864,"end":1110563},{"filename":"/include/c++/v1/__functional/unary_function.h","start":1110563,"end":1111389},{"filename":"/include/c++/v1/__functional/unary_negate.h","start":1111389,"end":1113e3},{"filename":"/include/c++/v1/__functional/unwrap_ref.h","start":1113e3,"end":1114505},{"filename":"/include/c++/v1/__functional/weak_result_type.h","start":1114505,"end":1127162},{"filename":"/include/c++/v1/__functional_base","start":1127162,"end":1128164},{"filename":"/include/c++/v1/__hash_table","start":1128164,"end":1229194},{"filename":"/include/c++/v1/__iterator/access.h","start":1229194,"end":1231734},{"filename":"/include/c++/v1/__iterator/advance.h","start":1231734,"end":1238615},{"filename":"/include/c++/v1/__iterator/back_insert_iterator.h","start":1238615,"end":1241214},{"filename":"/include/c++/v1/__iterator/common_iterator.h","start":1241214,"end":1252583},{"filename":"/include/c++/v1/__iterator/concepts.h","start":1252583,"end":1262329},{"filename":"/include/c++/v1/__iterator/counted_iterator.h","start":1262329,"end":1271230},{"filename":"/include/c++/v1/__iterator/data.h","start":1271230,"end":1272596},{"filename":"/include/c++/v1/__iterator/default_sentinel.h","start":1272596,"end":1273455},{"filename":"/include/c++/v1/__iterator/distance.h","start":1273455,"end":1276630},{"filename":"/include/c++/v1/__iterator/empty.h","start":1276630,"end":1277933},{"filename":"/include/c++/v1/__iterator/erase_if_container.h","start":1277933,"end":1279115},{"filename":"/include/c++/v1/__iterator/front_insert_iterator.h","start":1279115,"end":1281757},{"filename":"/include/c++/v1/__iterator/incrementable_traits.h","start":1281757,"end":1284102},{"filename":"/include/c++/v1/__iterator/indirectly_comparable.h","start":1284102,"end":1285102},{"filename":"/include/c++/v1/__iterator/insert_iterator.h","start":1285102,"end":1288167},{"filename":"/include/c++/v1/__iterator/istream_iterator.h","start":1288167,"end":1291488},{"filename":"/include/c++/v1/__iterator/istreambuf_iterator.h","start":1291488,"end":1295365},{"filename":"/include/c++/v1/__iterator/iter_move.h","start":1295365,"end":1298314},{"filename":"/include/c++/v1/__iterator/iter_swap.h","start":1298314,"end":1301852},{"filename":"/include/c++/v1/__iterator/iterator.h","start":1301852,"end":1302911},{"filename":"/include/c++/v1/__iterator/iterator_traits.h","start":1302911,"end":1320659},{"filename":"/include/c++/v1/__iterator/move_iterator.h","start":1320659,"end":1327258},{"filename":"/include/c++/v1/__iterator/next.h","start":1327258,"end":1329755},{"filename":"/include/c++/v1/__iterator/ostream_iterator.h","start":1329755,"end":1332408},{"filename":"/include/c++/v1/__iterator/ostreambuf_iterator.h","start":1332408,"end":1335337},{"filename":"/include/c++/v1/__iterator/prev.h","start":1335337,"end":1337607},{"filename":"/include/c++/v1/__iterator/projected.h","start":1337607,"end":1338852},{"filename":"/include/c++/v1/__iterator/readable_traits.h","start":1338852,"end":1341744},{"filename":"/include/c++/v1/__iterator/reverse_access.h","start":1341744,"end":1344363},{"filename":"/include/c++/v1/__iterator/reverse_iterator.h","start":1344363,"end":1353074},{"filename":"/include/c++/v1/__iterator/size.h","start":1353074,"end":1354707},{"filename":"/include/c++/v1/__iterator/unreachable_sentinel.h","start":1354707,"end":1355793},{"filename":"/include/c++/v1/__iterator/wrap_iter.h","start":1355793,"end":1366228},{"filename":"/include/c++/v1/__libcpp_version","start":1366228,"end":1366234},{"filename":"/include/c++/v1/__locale","start":1366234,"end":1424673},{"filename":"/include/c++/v1/__mbstate_t.h","start":1424673,"end":1426232},{"filename":"/include/c++/v1/__memory/addressof.h","start":1426232,"end":1428108},{"filename":"/include/c++/v1/__memory/allocation_guard.h","start":1428108,"end":1430773},{"filename":"/include/c++/v1/__memory/allocator.h","start":1430773,"end":1439826},{"filename":"/include/c++/v1/__memory/allocator_arg_t.h","start":1439826,"end":1442532},{"filename":"/include/c++/v1/__memory/allocator_traits.h","start":1442532,"end":1458609},{"filename":"/include/c++/v1/__memory/auto_ptr.h","start":1458609,"end":1461348},{"filename":"/include/c++/v1/__memory/compressed_pair.h","start":1461348,"end":1468414},{"filename":"/include/c++/v1/__memory/concepts.h","start":1468414,"end":1470465},{"filename":"/include/c++/v1/__memory/construct_at.h","start":1470465,"end":1473850},{"filename":"/include/c++/v1/__memory/pointer_traits.h","start":1473850,"end":1480744},{"filename":"/include/c++/v1/__memory/ranges_construct_at.h","start":1480744,"end":1484194},{"filename":"/include/c++/v1/__memory/ranges_uninitialized_algorithms.h","start":1484194,"end":1496998},{"filename":"/include/c++/v1/__memory/raw_storage_iterator.h","start":1496998,"end":1499530},{"filename":"/include/c++/v1/__memory/shared_ptr.h","start":1499530,"end":1548894},{"filename":"/include/c++/v1/__memory/temporary_buffer.h","start":1548894,"end":1551299},{"filename":"/include/c++/v1/__memory/uninitialized_algorithms.h","start":1551299,"end":1563310},{"filename":"/include/c++/v1/__memory/unique_ptr.h","start":1563310,"end":1586773},{"filename":"/include/c++/v1/__memory/uses_allocator.h","start":1586773,"end":1588390},{"filename":"/include/c++/v1/__memory/voidify.h","start":1588390,"end":1589392},{"filename":"/include/c++/v1/__mutex_base","start":1589392,"end":1605686},{"filename":"/include/c++/v1/__node_handle","start":1605686,"end":1613394},{"filename":"/include/c++/v1/__nullptr","start":1613394,"end":1615143},{"filename":"/include/c++/v1/__numeric/accumulate.h","start":1615143,"end":1616637},{"filename":"/include/c++/v1/__numeric/adjacent_difference.h","start":1616637,"end":1619006},{"filename":"/include/c++/v1/__numeric/exclusive_scan.h","start":1619006,"end":1620714},{"filename":"/include/c++/v1/__numeric/gcd_lcm.h","start":1620714,"end":1623901},{"filename":"/include/c++/v1/__numeric/inclusive_scan.h","start":1623901,"end":1626141},{"filename":"/include/c++/v1/__numeric/inner_product.h","start":1626141,"end":1627956},{"filename":"/include/c++/v1/__numeric/iota.h","start":1627956,"end":1628876},{"filename":"/include/c++/v1/__numeric/midpoint.h","start":1628876,"end":1631495},{"filename":"/include/c++/v1/__numeric/partial_sum.h","start":1631495,"end":1633602},{"filename":"/include/c++/v1/__numeric/reduce.h","start":1633602,"end":1635336},{"filename":"/include/c++/v1/__numeric/transform_exclusive_scan.h","start":1635336,"end":1636769},{"filename":"/include/c++/v1/__numeric/transform_inclusive_scan.h","start":1636769,"end":1638711},{"filename":"/include/c++/v1/__numeric/transform_reduce.h","start":1638711,"end":1641211},{"filename":"/include/c++/v1/__random/bernoulli_distribution.h","start":1641211,"end":1645576},{"filename":"/include/c++/v1/__random/binomial_distribution.h","start":1645576,"end":1652378},{"filename":"/include/c++/v1/__random/cauchy_distribution.h","start":1652378,"end":1657525},{"filename":"/include/c++/v1/__random/chi_squared_distribution.h","start":1657525,"end":1661991},{"filename":"/include/c++/v1/__random/clamp_to_integral.h","start":1661991,"end":1664221},{"filename":"/include/c++/v1/__random/default_random_engine.h","start":1664221,"end":1664995},{"filename":"/include/c++/v1/__random/discard_block_engine.h","start":1664995,"end":1671460},{"filename":"/include/c++/v1/__random/discrete_distribution.h","start":1671460,"end":1679609},{"filename":"/include/c++/v1/__random/exponential_distribution.h","start":1679609,"end":1684556},{"filename":"/include/c++/v1/__random/extreme_value_distribution.h","start":1684556,"end":1689717},{"filename":"/include/c++/v1/__random/fisher_f_distribution.h","start":1689717,"end":1694770},{"filename":"/include/c++/v1/__random/gamma_distribution.h","start":1694770,"end":1701508},{"filename":"/include/c++/v1/__random/generate_canonical.h","start":1701508,"end":1703164},{"filename":"/include/c++/v1/__random/geometric_distribution.h","start":1703164,"end":1707509},{"filename":"/include/c++/v1/__random/independent_bits_engine.h","start":1707509,"end":1716915},{"filename":"/include/c++/v1/__random/is_seed_sequence.h","start":1716915,"end":1717873},{"filename":"/include/c++/v1/__random/knuth_b.h","start":1717873,"end":1718662},{"filename":"/include/c++/v1/__random/linear_congruential_engine.h","start":1718662,"end":1733452},{"filename":"/include/c++/v1/__random/log2.h","start":1733452,"end":1735482},{"filename":"/include/c++/v1/__random/lognormal_distribution.h","start":1735482,"end":1744925},{"filename":"/include/c++/v1/__random/mersenne_twister_engine.h","start":1744925,"end":1770003},{"filename":"/include/c++/v1/__random/negative_binomial_distribution.h","start":1770003,"end":1775607},{"filename":"/include/c++/v1/__random/normal_distribution.h","start":1775607,"end":1782099},{"filename":"/include/c++/v1/__random/piecewise_constant_distribution.h","start":1782099,"end":1794101},{"filename":"/include/c++/v1/__random/piecewise_linear_distribution.h","start":1794101,"end":1806200},{"filename":"/include/c++/v1/__random/poisson_distribution.h","start":1806200,"end":1815183},{"filename":"/include/c++/v1/__random/random_device.h","start":1815183,"end":1817671},{"filename":"/include/c++/v1/__random/ranlux.h","start":1817671,"end":1818700},{"filename":"/include/c++/v1/__random/seed_seq.h","start":1818700,"end":1823783},{"filename":"/include/c++/v1/__random/shuffle_order_engine.h","start":1823783,"end":1832607},{"filename":"/include/c++/v1/__random/student_t_distribution.h","start":1832607,"end":1837343},{"filename":"/include/c++/v1/__random/subtract_with_carry_engine.h","start":1837343,"end":1850027},{"filename":"/include/c++/v1/__random/uniform_int_distribution.h","start":1850027,"end":1858966},{"filename":"/include/c++/v1/__random/uniform_random_bit_generator.h","start":1858966,"end":1860284},{"filename":"/include/c++/v1/__random/uniform_real_distribution.h","start":1860284,"end":1865391},{"filename":"/include/c++/v1/__random/weibull_distribution.h","start":1865391,"end":1870257},{"filename":"/include/c++/v1/__ranges/access.h","start":1870257,"end":1877011},{"filename":"/include/c++/v1/__ranges/all.h","start":1877011,"end":1879675},{"filename":"/include/c++/v1/__ranges/common_view.h","start":1879675,"end":1884141},{"filename":"/include/c++/v1/__ranges/concepts.h","start":1884141,"end":1888543},{"filename":"/include/c++/v1/__ranges/copyable_box.h","start":1888543,"end":1896019},{"filename":"/include/c++/v1/__ranges/counted.h","start":1896019,"end":1899113},{"filename":"/include/c++/v1/__ranges/dangling.h","start":1899113,"end":1900250},{"filename":"/include/c++/v1/__ranges/data.h","start":1900250,"end":1903466},{"filename":"/include/c++/v1/__ranges/drop_view.h","start":1903466,"end":1907791},{"filename":"/include/c++/v1/__ranges/empty.h","start":1907791,"end":1910187},{"filename":"/include/c++/v1/__ranges/empty_view.h","start":1910187,"end":1911808},{"filename":"/include/c++/v1/__ranges/enable_borrowed_range.h","start":1911808,"end":1912909},{"filename":"/include/c++/v1/__ranges/enable_view.h","start":1912909,"end":1914237},{"filename":"/include/c++/v1/__ranges/iota_view.h","start":1914237,"end":1927914},{"filename":"/include/c++/v1/__ranges/join_view.h","start":1927914,"end":1939117},{"filename":"/include/c++/v1/__ranges/non_propagating_cache.h","start":1939117,"end":1943042},{"filename":"/include/c++/v1/__ranges/owning_view.h","start":1943042,"end":1946343},{"filename":"/include/c++/v1/__ranges/range_adaptor.h","start":1946343,"end":1949474},{"filename":"/include/c++/v1/__ranges/ref_view.h","start":1949474,"end":1952201},{"filename":"/include/c++/v1/__ranges/reverse_view.h","start":1952201,"end":1959700},{"filename":"/include/c++/v1/__ranges/single_view.h","start":1959700,"end":1962224},{"filename":"/include/c++/v1/__ranges/size.h","start":1962224,"end":1966318},{"filename":"/include/c++/v1/__ranges/subrange.h","start":1966318,"end":1976723},{"filename":"/include/c++/v1/__ranges/take_view.h","start":1976723,"end":1982743},{"filename":"/include/c++/v1/__ranges/transform_view.h","start":1982743,"end":1996757},{"filename":"/include/c++/v1/__ranges/view_interface.h","start":1996757,"end":2003084},{"filename":"/include/c++/v1/__ranges/views.h","start":2003084,"end":2003976},{"filename":"/include/c++/v1/__split_buffer","start":2003976,"end":2025987},{"filename":"/include/c++/v1/__std_stream","start":2025987,"end":2036554},{"filename":"/include/c++/v1/__string","start":2036554,"end":2083736},{"filename":"/include/c++/v1/__support/android/locale_bionic.h","start":2083736,"end":2085585},{"filename":"/include/c++/v1/__support/fuchsia/xlocale.h","start":2085585,"end":2086297},{"filename":"/include/c++/v1/__support/ibm/gettod_zos.h","start":2086297,"end":2087920},{"filename":"/include/c++/v1/__support/ibm/limits.h","start":2087920,"end":2091531},{"filename":"/include/c++/v1/__support/ibm/locale_mgmt_zos.h","start":2091531,"end":2093205},{"filename":"/include/c++/v1/__support/ibm/nanosleep.h","start":2093205,"end":2095058},{"filename":"/include/c++/v1/__support/ibm/support.h","start":2095058,"end":2096754},{"filename":"/include/c++/v1/__support/ibm/xlocale.h","start":2096754,"end":2100083},{"filename":"/include/c++/v1/__support/musl/xlocale.h","start":2100083,"end":2101961},{"filename":"/include/c++/v1/__support/newlib/xlocale.h","start":2101961,"end":2102804},{"filename":"/include/c++/v1/__support/openbsd/xlocale.h","start":2102804,"end":2103772},{"filename":"/include/c++/v1/__support/solaris/floatingpoint.h","start":2103772,"end":2104248},{"filename":"/include/c++/v1/__support/solaris/wchar.h","start":2104248,"end":2105477},{"filename":"/include/c++/v1/__support/solaris/xlocale.h","start":2105477,"end":2107734},{"filename":"/include/c++/v1/__support/win32/limits_msvc_win32.h","start":2107734,"end":2110368},{"filename":"/include/c++/v1/__support/win32/locale_win32.h","start":2110368,"end":2120246},{"filename":"/include/c++/v1/__support/xlocale/__nop_locale_mgmt.h","start":2120246,"end":2121677},{"filename":"/include/c++/v1/__support/xlocale/__posix_l_fallback.h","start":2121677,"end":2126291},{"filename":"/include/c++/v1/__support/xlocale/__strtonum_fallback.h","start":2126291,"end":2128644},{"filename":"/include/c++/v1/__thread/poll_with_backoff.h","start":2128644,"end":2131376},{"filename":"/include/c++/v1/__thread/timed_backoff_policy.h","start":2131376,"end":2132666},{"filename":"/include/c++/v1/__threading_support","start":2132666,"end":2150427},{"filename":"/include/c++/v1/__tree","start":2150427,"end":2252408},{"filename":"/include/c++/v1/__tuple","start":2252408,"end":2272972},{"filename":"/include/c++/v1/__undef_macros","start":2272972,"end":2274019},{"filename":"/include/c++/v1/__utility/as_const.h","start":2274019,"end":2274953},{"filename":"/include/c++/v1/__utility/auto_cast.h","start":2274953,"end":2275674},{"filename":"/include/c++/v1/__utility/cmp.h","start":2275674,"end":2278878},{"filename":"/include/c++/v1/__utility/declval.h","start":2278878,"end":2279856},{"filename":"/include/c++/v1/__utility/exchange.h","start":2279856,"end":2280999},{"filename":"/include/c++/v1/__utility/forward.h","start":2280999,"end":2282172},{"filename":"/include/c++/v1/__utility/in_place.h","start":2282172,"end":2283901},{"filename":"/include/c++/v1/__utility/integer_sequence.h","start":2283901,"end":2286468},{"filename":"/include/c++/v1/__utility/move.h","start":2286468,"end":2287959},{"filename":"/include/c++/v1/__utility/pair.h","start":2287959,"end":2308371},{"filename":"/include/c++/v1/__utility/piecewise_construct.h","start":2308371,"end":2309434},{"filename":"/include/c++/v1/__utility/priority_tag.h","start":2309434,"end":2310224},{"filename":"/include/c++/v1/__utility/rel_ops.h","start":2310224,"end":2311515},{"filename":"/include/c++/v1/__utility/swap.h","start":2311515,"end":2313110},{"filename":"/include/c++/v1/__utility/to_underlying.h","start":2313110,"end":2314278},{"filename":"/include/c++/v1/__utility/transaction.h","start":2314278,"end":2317359},{"filename":"/include/c++/v1/__variant/monostate.h","start":2317359,"end":2319126},{"filename":"/include/c++/v1/algorithm","start":2319126,"end":2353906},{"filename":"/include/c++/v1/any","start":2353906,"end":2373548},{"filename":"/include/c++/v1/array","start":2373548,"end":2394433},{"filename":"/include/c++/v1/atomic","start":2394433,"end":2495777},{"filename":"/include/c++/v1/barrier","start":2495777,"end":2506210},{"filename":"/include/c++/v1/bit","start":2506210,"end":2516677},{"filename":"/include/c++/v1/bitset","start":2516677,"end":2550379},{"filename":"/include/c++/v1/cassert","start":2550379,"end":2550938},{"filename":"/include/c++/v1/ccomplex","start":2550938,"end":2551577},{"filename":"/include/c++/v1/cctype","start":2551577,"end":2553670},{"filename":"/include/c++/v1/cerrno","start":2553670,"end":2554338},{"filename":"/include/c++/v1/cfenv","start":2554338,"end":2556250},{"filename":"/include/c++/v1/cfloat","start":2556250,"end":2557676},{"filename":"/include/c++/v1/charconv","start":2557676,"end":2577845},{"filename":"/include/c++/v1/chrono","start":2577845,"end":2609522},{"filename":"/include/c++/v1/cinttypes","start":2609522,"end":2613214},{"filename":"/include/c++/v1/ciso646","start":2613214,"end":2613808},{"filename":"/include/c++/v1/climits","start":2613808,"end":2614714},{"filename":"/include/c++/v1/clocale","start":2614714,"end":2615727},{"filename":"/include/c++/v1/cmath","start":2615727,"end":2636477},{"filename":"/include/c++/v1/codecvt","start":2636477,"end":2657863},{"filename":"/include/c++/v1/compare","start":2657863,"end":2664952},{"filename":"/include/c++/v1/complex","start":2664952,"end":2711538},{"filename":"/include/c++/v1/complex.h","start":2711538,"end":2712275},{"filename":"/include/c++/v1/concepts","start":2712275,"end":2717141},{"filename":"/include/c++/v1/condition_variable","start":2717141,"end":2724765},{"filename":"/include/c++/v1/coroutine","start":2724765,"end":2726386},{"filename":"/include/c++/v1/csetjmp","start":2726386,"end":2727246},{"filename":"/include/c++/v1/csignal","start":2727246,"end":2728281},{"filename":"/include/c++/v1/cstdarg","start":2728281,"end":2729207},{"filename":"/include/c++/v1/cstdbool","start":2729207,"end":2729927},{"filename":"/include/c++/v1/cstddef","start":2729927,"end":2735464},{"filename":"/include/c++/v1/cstdint","start":2735464,"end":2738961},{"filename":"/include/c++/v1/cstdio","start":2738961,"end":2744418},{"filename":"/include/c++/v1/cstdlib","start":2744418,"end":2749848},{"filename":"/include/c++/v1/cstring","start":2749848,"end":2752897},{"filename":"/include/c++/v1/ctgmath","start":2752897,"end":2753546},{"filename":"/include/c++/v1/ctime","start":2753546,"end":2756344},{"filename":"/include/c++/v1/ctype.h","start":2756344,"end":2757492},{"filename":"/include/c++/v1/cwchar","start":2757492,"end":2765103},{"filename":"/include/c++/v1/cwctype","start":2765103,"end":2767392},{"filename":"/include/c++/v1/cxxabi.h","start":2767392,"end":2774607},{"filename":"/include/c++/v1/deque","start":2774607,"end":2883361},{"filename":"/include/c++/v1/errno.h","start":2883361,"end":2888502},{"filename":"/include/c++/v1/exception","start":2888502,"end":2898019},{"filename":"/include/c++/v1/execution","start":2898019,"end":2898718},{"filename":"/include/c++/v1/experimental/__config","start":2898718,"end":2901918},{"filename":"/include/c++/v1/experimental/__memory","start":2901918,"end":2905832},{"filename":"/include/c++/v1/experimental/algorithm","start":2905832,"end":2907218},{"filename":"/include/c++/v1/experimental/coroutine","start":2907218,"end":2917572},{"filename":"/include/c++/v1/experimental/deque","start":2917572,"end":2918722},{"filename":"/include/c++/v1/experimental/filesystem","start":2918722,"end":2927874},{"filename":"/include/c++/v1/experimental/forward_list","start":2927874,"end":2929087},{"filename":"/include/c++/v1/experimental/functional","start":2929087,"end":2946761},{"filename":"/include/c++/v1/experimental/iterator","start":2946761,"end":2950839},{"filename":"/include/c++/v1/experimental/list","start":2950839,"end":2951980},{"filename":"/include/c++/v1/experimental/map","start":2951980,"end":2953685},{"filename":"/include/c++/v1/experimental/memory_resource","start":2953685,"end":2966746},{"filename":"/include/c++/v1/experimental/propagate_const","start":2966746,"end":2987260},{"filename":"/include/c++/v1/experimental/regex","start":2987260,"end":2989099},{"filename":"/include/c++/v1/experimental/set","start":2989099,"end":2990736},{"filename":"/include/c++/v1/experimental/simd","start":2990736,"end":3051946},{"filename":"/include/c++/v1/experimental/string","start":3051946,"end":3053774},{"filename":"/include/c++/v1/experimental/type_traits","start":3053774,"end":3059251},{"filename":"/include/c++/v1/experimental/unordered_map","start":3059251,"end":3061273},{"filename":"/include/c++/v1/experimental/unordered_set","start":3061273,"end":3063098},{"filename":"/include/c++/v1/experimental/utility","start":3063098,"end":3064132},{"filename":"/include/c++/v1/experimental/vector","start":3064132,"end":3065292},{"filename":"/include/c++/v1/ext/__hash","start":3065292,"end":3068536},{"filename":"/include/c++/v1/ext/hash_map","start":3068536,"end":3107324},{"filename":"/include/c++/v1/ext/hash_set","start":3107324,"end":3132242},{"filename":"/include/c++/v1/fenv.h","start":3132242,"end":3134105},{"filename":"/include/c++/v1/filesystem","start":3134105,"end":3144090},{"filename":"/include/c++/v1/float.h","start":3144090,"end":3145710},{"filename":"/include/c++/v1/format","start":3145710,"end":3167602},{"filename":"/include/c++/v1/forward_list","start":3167602,"end":3230261},{"filename":"/include/c++/v1/fstream","start":3230261,"end":3284770},{"filename":"/include/c++/v1/functional","start":3284770,"end":3302192},{"filename":"/include/c++/v1/future","start":3302192,"end":3370352},{"filename":"/include/c++/v1/initializer_list","start":3370352,"end":3373201},{"filename":"/include/c++/v1/inttypes.h","start":3373201,"end":3377089},{"filename":"/include/c++/v1/iomanip","start":3377089,"end":3395353},{"filename":"/include/c++/v1/ios","start":3395353,"end":3420026},{"filename":"/include/c++/v1/iosfwd","start":3420026,"end":3431882},{"filename":"/include/c++/v1/iostream","start":3431882,"end":3433265},{"filename":"/include/c++/v1/istream","start":3433265,"end":3481028},{"filename":"/include/c++/v1/iterator","start":3481028,"end":3507621},{"filename":"/include/c++/v1/latch","start":3507621,"end":3510187},{"filename":"/include/c++/v1/limits","start":3510187,"end":3550849},{"filename":"/include/c++/v1/limits.h","start":3550849,"end":3552320},{"filename":"/include/c++/v1/list","start":3552320,"end":3632924},{"filename":"/include/c++/v1/locale","start":3632924,"end":3786465},{"filename":"/include/c++/v1/locale.h","start":3786465,"end":3787420},{"filename":"/include/c++/v1/map","start":3787420,"end":3876034},{"filename":"/include/c++/v1/math.h","start":3876034,"end":3929561},{"filename":"/include/c++/v1/memory","start":3929561,"end":3970817},{"filename":"/include/c++/v1/module.modulemap","start":3970817,"end":4015891},{"filename":"/include/c++/v1/mutex","start":4015891,"end":4033495},{"filename":"/include/c++/v1/new","start":4033495,"end":4047424},{"filename":"/include/c++/v1/numbers","start":4047424,"end":4054251},{"filename":"/include/c++/v1/numeric","start":4054251,"end":4061678},{"filename":"/include/c++/v1/optional","start":4061678,"end":4112473},{"filename":"/include/c++/v1/ostream","start":4112473,"end":4145267},{"filename":"/include/c++/v1/queue","start":4145267,"end":4180073},{"filename":"/include/c++/v1/random","start":4180073,"end":4237318},{"filename":"/include/c++/v1/ranges","start":4237318,"end":4244130},{"filename":"/include/c++/v1/ratio","start":4244130,"end":4260382},{"filename":"/include/c++/v1/regex","start":4260382,"end":4489305},{"filename":"/include/c++/v1/scoped_allocator","start":4489305,"end":4515449},{"filename":"/include/c++/v1/semaphore","start":4515449,"end":4520854},{"filename":"/include/c++/v1/set","start":4520854,"end":4580760},{"filename":"/include/c++/v1/setjmp.h","start":4580760,"end":4581561},{"filename":"/include/c++/v1/shared_mutex","start":4581561,"end":4596683},{"filename":"/include/c++/v1/span","start":4596683,"end":4623708},{"filename":"/include/c++/v1/sstream","start":4623708,"end":4653801},{"filename":"/include/c++/v1/stack","start":4653801,"end":4665427},{"filename":"/include/c++/v1/stdbool.h","start":4665427,"end":4666241},{"filename":"/include/c++/v1/stddef.h","start":4666241,"end":4667341},{"filename":"/include/c++/v1/stdexcept","start":4667341,"end":4675155},{"filename":"/include/c++/v1/stdint.h","start":4675155,"end":4677482},{"filename":"/include/c++/v1/stdio.h","start":4677482,"end":4681002},{"filename":"/include/c++/v1/stdlib.h","start":4681002,"end":4686100},{"filename":"/include/c++/v1/streambuf","start":4686100,"end":4700615},{"filename":"/include/c++/v1/string","start":4700615,"end":4869123},{"filename":"/include/c++/v1/string.h","start":4869123,"end":4873811},{"filename":"/include/c++/v1/string_view","start":4873811,"end":4913860},{"filename":"/include/c++/v1/strstream","start":4913860,"end":4925339},{"filename":"/include/c++/v1/system_error","start":4925339,"end":4939564},{"filename":"/include/c++/v1/tgmath.h","start":4939564,"end":4940294},{"filename":"/include/c++/v1/thread","start":4940294,"end":4951802},{"filename":"/include/c++/v1/tuple","start":4951802,"end":5016934},{"filename":"/include/c++/v1/type_traits","start":5016934,"end":5161517},{"filename":"/include/c++/v1/typeindex","start":5161517,"end":5164426},{"filename":"/include/c++/v1/typeinfo","start":5164426,"end":5177193},{"filename":"/include/c++/v1/unordered_map","start":5177193,"end":5288288},{"filename":"/include/c++/v1/unordered_set","start":5288288,"end":5365961},{"filename":"/include/c++/v1/utility","start":5365961,"end":5375079},{"filename":"/include/c++/v1/valarray","start":5375079,"end":5509594},{"filename":"/include/c++/v1/variant","start":5509594,"end":5575404},{"filename":"/include/c++/v1/vector","start":5575404,"end":5684863},{"filename":"/include/c++/v1/version","start":5684863,"end":5709370},{"filename":"/include/c++/v1/wchar.h","start":5709370,"end":5718022},{"filename":"/include/c++/v1/wctype.h","start":5718022,"end":5720520},{"filename":"/include/complex.h","start":5720520,"end":5724589},{"filename":"/include/cpio.h","start":5724589,"end":5725140},{"filename":"/include/crypt.h","start":5725140,"end":5725417},{"filename":"/include/ctype.h","start":5725417,"end":5727177},{"filename":"/include/dirent.h","start":5727177,"end":5729375},{"filename":"/include/endian.h","start":5729375,"end":5731333},{"filename":"/include/err.h","start":5731333,"end":5731805},{"filename":"/include/errno.h","start":5731805,"end":5732312},{"filename":"/include/fcntl.h","start":5732312,"end":5738108},{"filename":"/include/features.h","start":5738108,"end":5738973},{"filename":"/include/fenv.h","start":5738973,"end":5739422},{"filename":"/include/float.h","start":5739422,"end":5740627},{"filename":"/include/fmtmsg.h","start":5740627,"end":5741368},{"filename":"/include/fnmatch.h","start":5741368,"end":5741754},{"filename":"/include/ftw.h","start":5741754,"end":5742624},{"filename":"/include/getopt.h","start":5742624,"end":5743183},{"filename":"/include/glob.h","start":5743183,"end":5744178},{"filename":"/include/iconv.h","start":5744178,"end":5744563},{"filename":"/include/ifaddrs.h","start":5744563,"end":5745155},{"filename":"/include/inttypes.h","start":5745155,"end":5749913},{"filename":"/include/iso646.h","start":5749913,"end":5750180},{"filename":"/include/langinfo.h","start":5750180,"end":5752e3},{"filename":"/include/libgen.h","start":5752e3,"end":5752161},{"filename":"/include/limits.h","start":5752161,"end":5756852},{"filename":"/include/locale.h","start":5756852,"end":5758636},{"filename":"/include/malloc.h","start":5758636,"end":5759298},{"filename":"/include/math.h","start":5759298,"end":5771736},{"filename":"/include/memory.h","start":5771736,"end":5771756},{"filename":"/include/monetary.h","start":5771756,"end":5772151},{"filename":"/include/mqueue.h","start":5772151,"end":5773253},{"filename":"/include/netinet/icmp6.h","start":5773253,"end":5781885},{"filename":"/include/netinet/igmp.h","start":5781885,"end":5782915},{"filename":"/include/netinet/in.h","start":5782915,"end":5795665},{"filename":"/include/netinet/in_systm.h","start":5795665,"end":5795810},{"filename":"/include/netinet/ip.h","start":5795810,"end":5800171},{"filename":"/include/netinet/ip6.h","start":5800171,"end":5802845},{"filename":"/include/netinet/ip_icmp.h","start":5802845,"end":5807505},{"filename":"/include/netinet/tcp.h","start":5807505,"end":5813705},{"filename":"/include/netinet/udp.h","start":5813705,"end":5814464},{"filename":"/include/netpacket/packet.h","start":5814464,"end":5815843},{"filename":"/include/nl_types.h","start":5815843,"end":5816159},{"filename":"/include/poll.h","start":5816159,"end":5817446},{"filename":"/include/regex.h","start":5817446,"end":5818673},{"filename":"/include/sched.h","start":5818673,"end":5823245},{"filename":"/include/search.h","start":5823245,"end":5824623},{"filename":"/include/semaphore.h","start":5824623,"end":5825433},{"filename":"/include/signal.h","start":5825433,"end":5833978},{"filename":"/include/stdalign.h","start":5833978,"end":5834387},{"filename":"/include/stdbool.h","start":5834387,"end":5834554},{"filename":"/include/stdc-predef.h","start":5834554,"end":5834728},{"filename":"/include/stdint.h","start":5834728,"end":5837306},{"filename":"/include/stdio.h","start":5837306,"end":5844284},{"filename":"/include/stdio_ext.h","start":5844284,"end":5844895},{"filename":"/include/stdlib.h","start":5844895,"end":5850989},{"filename":"/include/stdnoreturn.h","start":5850989,"end":5851118},{"filename":"/include/string.h","start":5851118,"end":5854880},{"filename":"/include/strings.h","start":5854880,"end":5855822},{"filename":"/include/stropts.h","start":5855822,"end":5858221},{"filename":"/include/sys/dir.h","start":5858221,"end":5858263},{"filename":"/include/sys/errno.h","start":5858263,"end":5858349},{"filename":"/include/sys/eventfd.h","start":5858349,"end":5858753},{"filename":"/include/sys/fcntl.h","start":5858753,"end":5858839},{"filename":"/include/sys/file.h","start":5858839,"end":5859100},{"filename":"/include/sys/ioctl.h","start":5859100,"end":5862304},{"filename":"/include/sys/mman.h","start":5862304,"end":5866058},{"filename":"/include/sys/param.h","start":5866058,"end":5866906},{"filename":"/include/sys/poll.h","start":5866906,"end":5866989},{"filename":"/include/sys/random.h","start":5866989,"end":5867503},{"filename":"/include/sys/reg.h","start":5867503,"end":5867613},{"filename":"/include/sys/resource.h","start":5867613,"end":5870308},{"filename":"/include/sys/select.h","start":5870308,"end":5871917},{"filename":"/include/sys/signal.h","start":5871917,"end":5872006},{"filename":"/include/sys/socket.h","start":5872006,"end":5884371},{"filename":"/include/sys/stat.h","start":5884371,"end":5888001},{"filename":"/include/sys/stropts.h","start":5888001,"end":5888022},{"filename":"/include/sys/syscall.h","start":5888022,"end":5888238},{"filename":"/include/sys/sysinfo.h","start":5888238,"end":5888872},{"filename":"/include/sys/time.h","start":5888872,"end":5891474},{"filename":"/include/sys/timeb.h","start":5891474,"end":5891830},{"filename":"/include/sys/times.h","start":5891830,"end":5892571},{"filename":"/include/sys/timex.h","start":5892571,"end":5894731},{"filename":"/include/sys/ttydefaults.h","start":5894731,"end":5895562},{"filename":"/include/sys/types.h","start":5895562,"end":5897472},{"filename":"/include/sys/uio.h","start":5897472,"end":5898539},{"filename":"/include/sys/un.h","start":5898539,"end":5899344},{"filename":"/include/sys/utsname.h","start":5899344,"end":5899716},{"filename":"/include/syscall.h","start":5899716,"end":5899741},{"filename":"/include/sysexits.h","start":5899741,"end":5900171},{"filename":"/include/tar.h","start":5900171,"end":5900749},{"filename":"/include/tgmath.h","start":5900749,"end":5909307},{"filename":"/include/threads.h","start":5909307,"end":5911102},{"filename":"/include/time.h","start":5911102,"end":5916837},{"filename":"/include/uchar.h","start":5916837,"end":5917466},{"filename":"/include/unistd.h","start":5917466,"end":5934504},{"filename":"/include/utime.h","start":5934504,"end":5934847},{"filename":"/include/values.h","start":5934847,"end":5935693},{"filename":"/include/wasi/api.h","start":5935693,"end":5992106},{"filename":"/include/wasi/libc-environ.h","start":5992106,"end":5993398},{"filename":"/include/wasi/libc-find-relpath.h","start":5993398,"end":5996577},{"filename":"/include/wasi/libc-nocwd.h","start":5996577,"end":5998778},{"filename":"/include/wasi/libc.h","start":5998778,"end":6001207},{"filename":"/include/wchar.h","start":6001207,"end":6008264},{"filename":"/include/wctype.h","start":6008264,"end":6010179},{"filename":"/lib/clang/lib/wasi/libclang_rt.builtins-wasm32.a","start":6010179,"end":6420521},{"filename":"/lib/wasm32-wasi/crt1-command.o","start":6420521,"end":6420891},{"filename":"/lib/wasm32-wasi/crt1-reactor.o","start":6420891,"end":6421229},{"filename":"/lib/wasm32-wasi/crt1.o","start":6421229,"end":6421685},{"filename":"/lib/wasm32-wasi/libc++.a","start":6421685,"end":8684061},{"filename":"/lib/wasm32-wasi/libc++abi.a","start":8684061,"end":9391593},{"filename":"/lib/wasm32-wasi/libc-printscan-long-double.a","start":9391593,"end":9429577},{"filename":"/lib/wasm32-wasi/libc-printscan-no-floating-point.a","start":9429577,"end":9460537},{"filename":"/lib/wasm32-wasi/libc.a","start":9460537,"end":10341401},{"filename":"/lib/wasm32-wasi/libc.imports","start":10341401,"end":10343542},{"filename":"/lib/wasm32-wasi/libcrypt.a","start":10343542,"end":10343550},{"filename":"/lib/wasm32-wasi/libdl.a","start":10343550,"end":10343558},{"filename":"/lib/wasm32-wasi/libm.a","start":10343558,"end":10343566},{"filename":"/lib/wasm32-wasi/libpthread.a","start":10343566,"end":10343574},{"filename":"/lib/wasm32-wasi/libresolv.a","start":10343574,"end":10343582},{"filename":"/lib/wasm32-wasi/librt.a","start":10343582,"end":10343590},{"filename":"/lib/wasm32-wasi/libutil.a","start":10343590,"end":10343598},{"filename":"/lib/wasm32-wasi/libwasi-emulated-getpid.a","start":10343598,"end":10343968},{"filename":"/lib/wasm32-wasi/libwasi-emulated-mman.a","start":10343968,"end":10344922},{"filename":"/lib/wasm32-wasi/libwasi-emulated-process-clocks.a","start":10344922,"end":10346674},{"filename":"/lib/wasm32-wasi/libwasi-emulated-signal.a","start":10346674,"end":10351166},{"filename":"/lib/wasm32-wasi/libxnet.a","start":10351166,"end":10351174},{"filename":"/share/wasm32-wasi/defined-symbols.txt","start":10351174,"end":10363675},{"filename":"/share/wasm32-wasi/include-all.c","start":10363675,"end":10367920},{"filename":"/share/wasm32-wasi/predefined-macros.txt","start":10367920,"end":10479274},{"filename":"/share/wasm32-wasi/undefined-symbols.txt","start":10479274,"end":10481665}],"remote_package_size":10481665})})();var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err("exiting due to exception: "+toLog)}if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}var fs;var nodePath;var requireNodeFS=()=>{if(!nodePath){fs=require("fs");nodePath=require("path")}};read_=(filename,binary)=>{requireNodeFS();filename=nodePath["normalize"](filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{requireNodeFS();filename=nodePath["normalize"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process["exitCode"]=status;throw toThrow}logExceptionOnExit(toThrow);process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||false;if(typeof WebAssembly!="object"){abort("no native wasm support detected")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf);Module["HEAP64"]=HEAP64=new BigInt64Array(buf);Module["HEAPU64"]=HEAPU64=new BigUint64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||67108864;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){___funcs_on_exit();callRuntimeCallbacks(__ATEXIT__);FS.quit();TTY.shutdown();runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){{if(Module["onAbort"]){Module["onAbort"](what)}}what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;if(Module["locateFile"]){wasmBinaryFile="lld.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL("lld.wasm",import.meta.url).toString()}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;wasmMemory=Module["asm"]["X"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module["asm"]["_"];addOnInit(Module["asm"]["Y"]);removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function handleException(e){if(e instanceof ExitStatus||e=="unwind"){return EXITSTATUS}quit_(1,e)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___call_sighandler(fp,sig){getWasmTableEntry(fp)(sig)}var PATH={isAbs:path=>path.charAt(0)==="/",splitPath:filename=>{var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>{return PATH.normalize(l+"/"+r)}};function getRandomDevice(){if(typeof crypto=="object"&&typeof crypto["getRandomValues"]=="function"){var randomBuffer=new Uint8Array(1);return()=>{crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");return()=>crypto_module["randomBytes"](1)[0]}catch(e){}}return()=>abort("randomDevice")}var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,-1)}catch(e){if(e.toString().includes("EOF"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address}function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment}function mmapAlloc(size){size=alignMemory(size,65536);var ptr=_emscripten_builtin_memalign(65536,size);if(!ptr)return 0;return zeroMemory(ptr,size)}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al "+url):"";readAsync(url,arrayBuffer=>{assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split("/").filter(p=>!!p),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{"r":0,"r+":2,"w":577,"w+":578,"a":1089,"a+":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags=="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:flag=>{var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes("r")&&!(node.mode&292)){return 2}else if(perms.includes("w")&&!(node.mode&146)){return 2}else if(perms.includes("x")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(val){this.shared.flags=val}},position:{get:function(){return this.shared.position},set:function(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate=="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev=="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags=="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode=="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path=="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:()=>{FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:()=>{var node=FS.createNode(proc_self,"fd",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:()=>{if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1)},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init:(input,output,error)=>{FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;_fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent=="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent=="string"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||"",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]=="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]=="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=()=>{out("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=()=>{ok++;if(ok+fail==total)finish()};putRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAPU32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;tempI64=[Math.floor(stat.atime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.atime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=0;tempI64=[Math.floor(stat.mtime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.mtime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=0;tempI64=[Math.floor(stat.ctime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.ctime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];HEAPU32[buf+96>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+104>>2]=tempI64[0],HEAP32[buf+108>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream}};function ___syscall_chdir(path){try{path=SYSCALLS.getStr(path);FS.chdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_faccessat(dirfd,path,amode,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var MAX_INT53=9007199254740992;var MIN_INT53=-9007199254740992;function bigintToI53Checked(num){return num<MIN_INT53||num>MAX_INT53?NaN:Number(num)}function ___syscall_ftruncate64(fd,length){try{length=bigintToI53Checked(length);if(isNaN(length))return-61;FS.ftruncate(fd,length);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);if(!stream.getdents){stream.getdents=FS.readdir(stream.path)}var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name==="."){id=stream.node.id;type=4}else if(name===".."){var lookup=FS.lookupPath(stream.path,{parent:true});id=lookup.node.id;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}tempI64=[id>>>0,(tempDouble=id,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[dirp+pos>>2]=tempI64[0],HEAP32[dirp+pos+4>>2]=tempI64[1];tempI64=[(idx+1)*struct_size>>>0,(tempDouble=(idx+1)*struct_size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[dirp+pos+8>>2]=tempI64[0],HEAP32[dirp+pos+12>>2]=tempI64[1];HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1}FS.llseek(stream,idx*struct_size,0);return pos}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_newfstatat(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~4352;path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_readlinkat(dirfd,path,buf,bufsize){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){try{oldpath=SYSCALLS.getStr(oldpath);newpath=SYSCALLS.getStr(newpath);oldpath=SYSCALLS.calculateAt(olddirfd,oldpath);newpath=SYSCALLS.calculateAt(newdirfd,newpath);FS.rename(oldpath,newpath);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_statfs64(path,size,buf){try{path=SYSCALLS.getStr(path);HEAP32[buf+4>>2]=4096;HEAP32[buf+40>>2]=4096;HEAP32[buf+8>>2]=1e6;HEAP32[buf+12>>2]=5e5;HEAP32[buf+16>>2]=5e5;HEAP32[buf+20>>2]=FS.nextInode;HEAP32[buf+24>>2]=1e6;HEAP32[buf+28>>2]=42;HEAP32[buf+44>>2]=2;HEAP32[buf+36>>2]=255;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_unlinkat(dirfd,path,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(flags===0){FS.unlink(path)}else if(flags===512){FS.rmdir(path)}else{abort("Invalid flags passed to unlinkat")}return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __dlinit(main_dso_handle){}var dlopenMissingError="To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking";function __dlopen_js(filename,flag){abort(dlopenMissingError)}function __dlsym_js(handle,symbol){abort(dlopenMissingError)}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function __emscripten_throw_longjmp(){throw Infinity}function readI53FromI64(ptr){return HEAPU32[ptr>>2]+HEAP32[ptr+4>>2]*4294967296}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst}function __mmap_js(len,prot,flags,fd,off,allocated){try{var stream=SYSCALLS.getStreamFromFD(fd);var res=FS.mmap(stream,len,off,prot,flags);var ptr=res.ptr;HEAP32[allocated>>2]=res.allocated;return ptr}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __munmap_js(addr,len,prot,flags,fd,offset){try{var stream=SYSCALLS.getStreamFromFD(fd);if(prot&2){SYSCALLS.doMsync(addr,stream,len,flags,offset)}FS.munmap(stream)}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function _tzset_impl(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAP32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr}}function __tzset_js(timezone,daylight,tzname){if(__tzset_js.called)return;__tzset_js.called=true;_tzset_impl(timezone,daylight,tzname)}function _abort(){abort("")}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module["onExit"])Module["onExit"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!keepRuntimeAlive()){exitRuntime()}_proc_exit(status)}var _exit=exitJS;function maybeExit(){if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}}function callUserCallback(func){if(runtimeExited||ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}}function _alarm(seconds){setTimeout(function(){callUserCallback(function(){_raise(14)})},seconds*1e3)}function _emscripten_date_now(){return Date.now()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.now();function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||"./this.program"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+"="+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}function _fd_pread(fd,iov,iovcnt,offset,pnum){try{offset=bigintToI53Checked(offset);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt,offset);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_seek(fd,offset,whence,newOffset){try{offset=bigintToI53Checked(offset);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _getentropy(buffer,size){if(!_getentropy.randomDevice){_getentropy.randomDevice=getRandomDevice()}for(var i=0;i<size;i++){HEAP8[buffer+i>>0]=_getentropy.randomDevice()}return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value=="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}return"PM"},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){return date.tm_wday||7},"%U":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},"%V":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},"%w":function(date){return date.tm_wday},"%W":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};pattern=pattern.replace(/%%/g,"\0\0");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\0\0/g,"%");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_unlink"]=FS.unlink;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;var asmLibraryArg={"y":___call_sighandler,"U":___syscall_chdir,"V":___syscall_faccessat,"L":___syscall_fstat64,"H":___syscall_ftruncate64,"G":___syscall_getcwd,"w":___syscall_getdents64,"I":___syscall_lstat64,"D":___syscall_mkdirat,"J":___syscall_newfstatat,"A":___syscall_openat,"v":___syscall_readlinkat,"s":___syscall_renameat,"t":___syscall_rmdir,"K":___syscall_stat64,"r":___syscall_statfs64,"f":___syscall_unlinkat,"R":__dlinit,"T":__dlopen_js,"S":__dlsym_js,"N":__emscripten_get_now_is_monotonic,"p":__emscripten_throw_longjmp,"O":__localtime_js,"B":__mmap_js,"C":__munmap_js,"P":__tzset_js,"a":_abort,"e":_alarm,"h":_emscripten_date_now,"M":_emscripten_get_now,"Q":_emscripten_memcpy_big,"q":_emscripten_resize_heap,"W":_environ_get,"j":_environ_sizes_get,"b":_exit,"d":_fd_close,"F":_fd_fdstat_get,"z":_fd_pread,"x":_fd_read,"E":_fd_seek,"c":_fd_write,"n":_getentropy,"i":invoke_ii,"m":invoke_vi,"u":invoke_vii,"g":invoke_viii,"k":_proc_exit,"l":_strftime,"o":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["Y"]).apply(null,arguments)};var _main=Module["_main"]=function(){return(_main=Module["_main"]=Module["asm"]["Z"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["$"]).apply(null,arguments)};var _raise=Module["_raise"]=function(){return(_raise=Module["_raise"]=Module["asm"]["aa"]).apply(null,arguments)};var ___funcs_on_exit=Module["___funcs_on_exit"]=function(){return(___funcs_on_exit=Module["___funcs_on_exit"]=Module["asm"]["ba"]).apply(null,arguments)};var _fflush=Module["_fflush"]=function(){return(_fflush=Module["_fflush"]=Module["asm"]["ca"]).apply(null,arguments)};var _emscripten_builtin_memalign=Module["_emscripten_builtin_memalign"]=function(){return(_emscripten_builtin_memalign=Module["_emscripten_builtin_memalign"]=Module["asm"]["da"]).apply(null,arguments)};var _setThrew=Module["_setThrew"]=function(){return(_setThrew=Module["_setThrew"]=Module["asm"]["ea"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["fa"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["ga"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["ha"]).apply(null,arguments)};function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;Module["callMain"]=callMain;Module["FS"]=FS;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module["_main"];args=args||[];args.unshift(thisProgram);var argc=args.length;var argv=stackAlloc((argc+1)*4);var argv_ptr=argv>>2;args.forEach(arg=>{HEAP32[argv_ptr++]=allocateUTF8OnStack(arg)});HEAP32[argv_ptr]=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(shouldRunNow)callMain(args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=false;if(Module["noInitialRun"])shouldRunNow=false;run();


  return Module.ready
}
);
})();
export default Module;